contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1)
#  - sub_5b65f8fb(?)
#
uint8 lotteryState; offset 160
address owner;
address rewardWalletAddress;
array of address players;
uint256 totalDeposited;
uint256 latestRound;
address lendingPoolAddress;
address sub_b8ab24bdAddress;
address assetAddress;
address sub_48996015Address;
address sub_36b43005Address;
address sub_dad2b06eAddress;
address WAVAXAddress;
address sub_34496167Address;
uint8 stor13;
uint256 sub_cde8e5d3;
uint8 stor14;
uint256 stor14; offset 8
uint256 sub_7796ff37;
uint8 stor15;
uint256 stor15; offset 8
uint256 sub_2f6236be;
uint8 stor16;
uint256 stor16; offset 8
uint256 sub_7e72b29f;
uint32 stor17;
uint256 stor17; offset 24
uint256 sub_0b4b41bc;
uint256 sub_84beb6e6;
address treasuryAddress;
address rewardTokenAddress;
uint256 sub_f12c8e0d;
uint256 sub_7f94bf16;
uint256 lastRewardTimestamp;
uint256 sub_a9ac33dd;
uint256 sub_bf4c8572;
uint256 _randomness;
uint8 distributed; offset 160
uint128 stor27; offset 160
address routerAddress;
uint256 sub_9abed90d;
uint8 sub_5b4a49f6;
mapping of struct userInfo;

function sub_0b4b41bc(?) payable {
    return sub_0b4b41bc
}

function userInfo(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return userInfo[arg1].field_0, userInfo[arg1].field_256
}

function sub_2f6236be(?) payable {
    return sub_2f6236be
}

function sub_34496167(?) payable {
    return sub_34496167Address
}

function sub_36b43005(?) payable {
    return sub_36b43005Address
}

function asset() payable {
    return assetAddress
}

function sub_48996015(?) payable {
    return sub_48996015Address
}

function sub_5b4a49f6(?) payable {
    return sub_5b4a49f6
}

function treasury() payable {
    return treasuryAddress
}

function latestRound() payable {
    return latestRound
}

function lotteryState() payable {
    require lotteryState < 2
    return lotteryState
}

function WAVAX() payable {
    return WAVAXAddress
}

function sub_7796ff37(?) payable {
    return sub_7796ff37
}

function sub_7e72b29f(?) payable {
    return sub_7e72b29f
}

function sub_7f94bf16(?) payable {
    return sub_7f94bf16
}

function sub_84beb6e6(?) payable {
    return sub_84beb6e6
}

function _randomness() payable {
    return _randomness
}

function owner() payable {
    return owner
}

function sub_9abed90d(?) payable {
    return sub_9abed90d
}

function lendingPool() payable {
    return lendingPoolAddress
}

function sub_a9ac33dd(?) payable {
    return sub_a9ac33dd
}

function sub_b8ab24bd(?) payable {
    return sub_b8ab24bdAddress
}

function sub_bf4c8572(?) payable {
    return sub_bf4c8572
}

function sub_cde8e5d3(?) payable {
    return uint256(sub_cde8e5d3)
}

function sub_dad2b06e(?) payable {
    return sub_dad2b06eAddress
}

function sub_f12c8e0d(?) payable {
    return sub_f12c8e0d
}

function players(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require arg1 < players.length
    return address(players[arg1])
}

function rewardToken() payable {
    return rewardTokenAddress
}

function lastRewardTimestamp() payable {
    return lastRewardTimestamp
}

function distributed() payable {
    return bool(distributed)
}

function router() payable {
    return routerAddress
}

function rewardWallet() payable {
    return rewardWalletAddress
}

function totalDeposited() payable {
    return totalDeposited
}

function _fallback() payable {
    revert
}

function sub_6bc6f057(?) payable {
    return (sub_f12c8e0d + sub_7f94bf16)
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function sub_38bd0014(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    uint256(sub_cde8e5d3) = arg1
}

function updateRouter(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    routerAddress = arg1
}

function updateTreasuryWallet(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    treasuryAddress = arg1
}

function updateRewardToken(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    rewardTokenAddress = arg1
}

function updateRewardWallet(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    rewardWalletAddress = arg1
}

function sub_deecf042(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_34496167Address = address(arg1)
}

function sub_326f7f04(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == uint8(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor17.field_0 % 16777216 = 24 * 3600 * uint8(arg1) % 16777216
    Mask(232, 0, stor17.field_24) = 0
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function interestEarned() payable {
    require ext_code.size(sub_b8ab24bdAddress)
    staticcall sub_b8ab24bdAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    return (ext_call.return_data[0] - totalDeposited)
}

function getMultiplier(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if arg1 > arg2:
        revert with 0, 'SafeMath: subtraction overflow'
    if not arg2 - arg1:
        return 0
    require arg2 - arg1
    if arg2 - arg1 / arg2 - arg1 != 1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
    return (arg2 - arg1)
}

function sub_f25675e1(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == uint8(arg1)
    require arg2 == uint8(arg2)
    require arg3 == uint8(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if uint8(arg1 + arg3 + arg2) != 10000:
        revert with 0, 'total should be 100%'
    uint8(stor15.field_0) = uint8(arg1)
    Mask(248, 0, stor15.field_8) = 0
    uint8(stor14.field_0) = uint8(arg2)
    Mask(248, 0, stor14.field_8) = 0
    uint8(stor16.field_0) = uint8(arg3)
    Mask(248, 0, stor16.field_8) = 0
}

function sub_0cc066af(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == arg2
    require arg3 == address(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if address(arg1) == sub_b8ab24bdAddress:
        revert with 0, 'Token should not be bAsset'
    if address(arg1) == rewardTokenAddress:
        revert with 0, 'Token should not be rewardToken'
    require ext_code.size(address(arg1))
    call address(arg1).0xa9059cbb with:
         gas gas_remaining wei
        args address(arg3), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function distribute(uint256[] arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    if distributed:
        revert with 0, 'distributed already'
    idx = 0
    while idx < sub_5b4a49f6:
        require idx < arg1.length
        require players.length
        require cd[((32 * idx) + arg1 + 36)] % players.length < players.length
        mem[0] = address(players[cd[((32 * idx) + arg1 + 36)] % players.length])
        mem[32] = 30
        userInfo[address(stor2[cd[((32 * idx) + arg1 + 36)] % stor2.length])].field_0 += sub_9abed90d
        idx = idx + 1
        continue 
    latestRound++
    stor27 = 1
    if totalDeposited + sub_bf4c8572 < totalDeposited:
        revert with 0, 'SafeMath: addition overflow'
    totalDeposited += sub_bf4c8572
}

function expand(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require arg2 <= test266151307()
    mem[96] = arg2
    mem[64] = (32 * arg2) + 128
    if not arg2:
        idx = 0
        while idx < arg2:
            mem[mem[64] + 32] = arg1
            mem[mem[64] + 64] = idx
            _26 = mem[64]
            mem[mem[64]] = 64
            mem[64] = mem[64] + 96
            require idx < mem[96]
            mem[(32 * idx) + 128] = sha3(mem[_26 + 32 len mem[_26]])
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * arg2] = call.data[calldata.size len 32 * arg2]
        idx = 0
        while idx < arg2:
            mem[mem[64] + 32] = arg1
            mem[mem[64] + 64] = idx
            _30 = mem[64]
            mem[mem[64]] = 64
            mem[64] = mem[64] + 96
            require idx < mem[96]
            mem[(32 * idx) + 128] = sha3(mem[_30 + 32 len mem[_30]])
            idx = idx + 1
            continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[96]
    mem[mem[64] + 64 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    return 32, mem[mem[64] + 32 len (32 * mem[96]) + 32]
}

function pendingTaksh(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if block.timestamp <= lastRewardTimestamp:
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if userInfo[address(arg1)].field_0 * sub_a9ac33dd / userInfo[address(arg1)].field_0 != sub_a9ac33dd:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
        if userInfo[address(arg1)].field_256 > userInfo[address(arg1)].field_0 * sub_a9ac33dd / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((userInfo[address(arg1)].field_0 * sub_a9ac33dd / 10^12) - userInfo[address(arg1)].field_256)
    if not totalDeposited:
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if userInfo[address(arg1)].field_0 * sub_a9ac33dd / userInfo[address(arg1)].field_0 != sub_a9ac33dd:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
        if userInfo[address(arg1)].field_256 > userInfo[address(arg1)].field_0 * sub_a9ac33dd / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((userInfo[address(arg1)].field_0 * sub_a9ac33dd / 10^12) - userInfo[address(arg1)].field_256)
    if lastRewardTimestamp > block.timestamp:
        revert with 0, 'SafeMath: subtraction overflow'
    if not block.timestamp - lastRewardTimestamp:
        if totalDeposited <= 0:
            revert with 0, 'SafeMath: division by zero'
        require totalDeposited
        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != sub_a9ac33dd + (0 / totalDeposited):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
        if userInfo[address(arg1)].field_256 > (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    require block.timestamp - lastRewardTimestamp
    if block.timestamp - lastRewardTimestamp / block.timestamp - lastRewardTimestamp != 1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
    if not block.timestamp - lastRewardTimestamp:
        if totalDeposited <= 0:
            revert with 0, 'SafeMath: division by zero'
        require totalDeposited
        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != sub_a9ac33dd + (0 / totalDeposited):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
        if userInfo[address(arg1)].field_256 > (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    require block.timestamp - lastRewardTimestamp
    if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d + sub_7f94bf16:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
    if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
        if totalDeposited <= 0:
            revert with 0, 'SafeMath: division by zero'
        require totalDeposited
        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != sub_a9ac33dd + (0 / totalDeposited):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
        if userInfo[address(arg1)].field_256 > (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
    if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
    if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
        if totalDeposited <= 0:
            revert with 0, 'SafeMath: division by zero'
        require totalDeposited
        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != sub_a9ac33dd + (0 / totalDeposited):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
        if userInfo[address(arg1)].field_256 > (sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((sub_a9ac33dd * userInfo[address(arg1)].field_0) + (0 / totalDeposited * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
    if (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 10^12:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
    if totalDeposited <= 0:
        revert with 0, 'SafeMath: division by zero'
    require totalDeposited
    if sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited) < sub_a9ac33dd:
        revert with 0, 'SafeMath: addition overflow'
    if not userInfo[address(arg1)].field_0:
        if userInfo[address(arg1)].field_256 > 0:
            revert with 0, 'SafeMath: subtraction overflow'
        return -userInfo[address(arg1)].field_256
    require userInfo[address(arg1)].field_0
    if (sub_a9ac33dd * userInfo[address(arg1)].field_0) + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
    if userInfo[address(arg1)].field_256 > (sub_a9ac33dd * userInfo[address(arg1)].field_0) + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited * userInfo[address(arg1)].field_0) / 10^12:
        revert with 0, 'SafeMath: subtraction overflow'
    return (((sub_a9ac33dd * userInfo[address(arg1)].field_0) + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
}

function updatePool() payable {
    if block.timestamp > lastRewardTimestamp:
        if totalDeposited:
            if sub_f12c8e0d + sub_7f94bf16:
                if lastRewardTimestamp > block.timestamp:
                    revert with 0, 'SafeMath: subtraction overflow'
                if not block.timestamp - lastRewardTimestamp:
                    require ext_code.size(rewardWalletAddress)
                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                         gas gas_remaining wei
                        args 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if totalDeposited <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require totalDeposited
                    if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                        revert with 0, 'SafeMath: addition overflow'
                    sub_a9ac33dd += 0 / totalDeposited
                else:
                    require block.timestamp - lastRewardTimestamp
                    if block.timestamp - lastRewardTimestamp / block.timestamp - lastRewardTimestamp != 1:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                    if not block.timestamp - lastRewardTimestamp:
                        if not block.timestamp - lastRewardTimestamp:
                            require ext_code.size(rewardWalletAddress)
                            call rewardWalletAddress.requestReward(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                        else:
                            require block.timestamp - lastRewardTimestamp
                            if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                            if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                require ext_code.size(rewardWalletAddress)
                                call rewardWalletAddress.requestReward(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                            else:
                                require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                require ext_code.size(rewardWalletAddress)
                                call rewardWalletAddress.requestReward(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if totalDeposited <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require totalDeposited
                        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_a9ac33dd += 0 / totalDeposited
                    else:
                        require block.timestamp - lastRewardTimestamp
                        if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d + sub_7f94bf16:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                        if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                            if not block.timestamp - lastRewardTimestamp:
                                require ext_code.size(rewardWalletAddress)
                                call rewardWalletAddress.requestReward(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                            else:
                                require block.timestamp - lastRewardTimestamp
                                if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if totalDeposited <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalDeposited
                            if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                revert with 0, 'SafeMath: addition overflow'
                            sub_a9ac33dd += 0 / totalDeposited
                        else:
                            require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                            if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                            if not block.timestamp - lastRewardTimestamp:
                                require ext_code.size(rewardWalletAddress)
                                call rewardWalletAddress.requestReward(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                            else:
                                require block.timestamp - lastRewardTimestamp
                                if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                if totalDeposited <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalDeposited
                                if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                    revert with 0, 'SafeMath: addition overflow'
                                sub_a9ac33dd += 0 / totalDeposited
                            else:
                                require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                if (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 10^12:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if totalDeposited <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalDeposited
                                if sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited) < sub_a9ac33dd:
                                    revert with 0, 'SafeMath: addition overflow'
                                sub_a9ac33dd += (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited
        lastRewardTimestamp = block.timestamp
}

function updateEmissionRate(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require lotteryState <= 1
    if lotteryState == 1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cannot do any TX during Calculation'
    if latestRound:
        if block.timestamp > lastRewardTimestamp:
            if totalDeposited:
                if sub_f12c8e0d + sub_7f94bf16:
                    if lastRewardTimestamp > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not block.timestamp - lastRewardTimestamp:
                        require ext_code.size(rewardWalletAddress)
                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if totalDeposited <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require totalDeposited
                        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_a9ac33dd += 0 / totalDeposited
                    else:
                        require block.timestamp - lastRewardTimestamp
                        if block.timestamp - lastRewardTimestamp / block.timestamp - lastRewardTimestamp != 1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                        if not block.timestamp - lastRewardTimestamp:
                            if not block.timestamp - lastRewardTimestamp:
                                require ext_code.size(rewardWalletAddress)
                                call rewardWalletAddress.requestReward(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                            else:
                                require block.timestamp - lastRewardTimestamp
                                if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if totalDeposited <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalDeposited
                            if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                revert with 0, 'SafeMath: addition overflow'
                            sub_a9ac33dd += 0 / totalDeposited
                        else:
                            require block.timestamp - lastRewardTimestamp
                            if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d + sub_7f94bf16:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                            if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                if not block.timestamp - lastRewardTimestamp:
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require block.timestamp - lastRewardTimestamp
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                    else:
                                        require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                        if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if totalDeposited <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalDeposited
                                if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                    revert with 0, 'SafeMath: addition overflow'
                                sub_a9ac33dd += 0 / totalDeposited
                            else:
                                require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not block.timestamp - lastRewardTimestamp:
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require block.timestamp - lastRewardTimestamp
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                    else:
                                        require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                        if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                    if totalDeposited <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalDeposited
                                    if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                        revert with 0, 'SafeMath: addition overflow'
                                    sub_a9ac33dd += 0 / totalDeposited
                                else:
                                    require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                    if (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 10^12:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if totalDeposited <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalDeposited
                                    if sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited) < sub_a9ac33dd:
                                        revert with 0, 'SafeMath: addition overflow'
                                    sub_a9ac33dd += (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited
            lastRewardTimestamp = block.timestamp
    sub_f12c8e0d = arg1
    emit UpdateEmission(arg1);
}

function reinvest() payable {
    require lotteryState <= 1
    if lotteryState:
        revert with 0, 'LOTTERY != OPEN'
    mem[96] = 1
    mem[128] = sub_b8ab24bdAddress
    mem[160] = 0x8e2eba0900000000000000000000000000000000000000000000000000000000
    mem[164] = this.address
    mem[196] = 64
    mem[228] = 1
    idx = 0
    s = 128
    t = 260
    while idx < 1:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ext_code.size(sub_36b43005Address)
    call sub_36b43005Address.claim(address arg1, address[] arg2) with:
         gas gas_remaining wei
        args address(this.address), Array(len=1, data=mem[260])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(sub_dad2b06eAddress)
    call sub_dad2b06eAddress.exit(bool arg1) with:
         gas gas_remaining wei
        args 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[164] = this.address
    require ext_code.size(sub_48996015Address)
    staticcall sub_48996015Address.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[160] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    mem[ceil32(return_data.size) + 164] = routerAddress
    mem[ceil32(return_data.size) + 196] = -1
    require ext_code.size(sub_48996015Address)
    call sub_48996015Address.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args routerAddress, -1
    mem[ceil32(return_data.size) + 160] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if sub_48996015Address == WAVAXAddress:
        mem[(2 * ceil32(return_data.size)) + 160] = 2
        mem[(2 * ceil32(return_data.size)) + 192] = sub_48996015Address
        mem[(2 * ceil32(return_data.size)) + 224] = assetAddress
        mem[(2 * ceil32(return_data.size)) + 256] = 0x38ed173900000000000000000000000000000000000000000000000000000000
        mem[(2 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
        mem[(2 * ceil32(return_data.size)) + 292] = 0
        mem[(2 * ceil32(return_data.size)) + 324] = 160
        mem[(2 * ceil32(return_data.size)) + 420] = 2
        idx = 0
        s = (2 * ceil32(return_data.size)) + 192
        t = (2 * ceil32(return_data.size)) + 452
        while idx < 2:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[(2 * ceil32(return_data.size)) + 356] = this.address
        mem[(2 * ceil32(return_data.size)) + 388] = block.timestamp
        require ext_code.size(routerAddress)
        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
             gas gas_remaining wei
            args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, 2, mem[(2 * ceil32(return_data.size)) + 452 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(2 * ceil32(return_data.size)) + 256 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = (4 * ceil32(return_data.size)) + 256
        require return_data.size >= 32
        _171 = mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28]
        require mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] <= test266151307()
        require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 287 < (2 * ceil32(return_data.size)) + return_data.size + 256
        _174 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]
        require mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256] <= test266151307()
        require (4 * ceil32(return_data.size)) + (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]) + 288 <= test266151307() and (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]) + 32 >= 0
        mem[64] = (4 * ceil32(return_data.size)) + (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]) + 288
        mem[(4 * ceil32(return_data.size)) + 256] = _174
        require _171 + (32 * _174) + 32 <= return_data.size
        idx = 0
        s = (2 * ceil32(return_data.size)) + _171 + 288
        t = (4 * ceil32(return_data.size)) + 288
        while idx < _174:
            require mem[s] == mem[s]
            mem[t] = mem[s]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 4] = this.address
        require ext_code.size(assetAddress)
        staticcall assetAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _222 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _225 = mem[_222]
        require mem[_222] == mem[_222]
        mem[mem[64] + 4] = lendingPoolAddress
        mem[mem[64] + 36] = _225
        require ext_code.size(assetAddress)
        call assetAddress.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args lendingPoolAddress, _225
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _234 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_234] == bool(mem[_234])
        require ext_code.size(lendingPoolAddress)
        call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
             gas gas_remaining wei
            args assetAddress, _225, address(this.address), 0
    else:
        if assetAddress == WAVAXAddress:
            mem[(2 * ceil32(return_data.size)) + 160] = 2
            mem[(2 * ceil32(return_data.size)) + 192] = sub_48996015Address
            mem[(2 * ceil32(return_data.size)) + 224] = assetAddress
            mem[(2 * ceil32(return_data.size)) + 256] = 0x38ed173900000000000000000000000000000000000000000000000000000000
            mem[(2 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
            mem[(2 * ceil32(return_data.size)) + 292] = 0
            mem[(2 * ceil32(return_data.size)) + 324] = 160
            mem[(2 * ceil32(return_data.size)) + 420] = 2
            idx = 0
            s = (2 * ceil32(return_data.size)) + 192
            t = (2 * ceil32(return_data.size)) + 452
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[(2 * ceil32(return_data.size)) + 356] = this.address
            mem[(2 * ceil32(return_data.size)) + 388] = block.timestamp
            require ext_code.size(routerAddress)
            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, 2, mem[(2 * ceil32(return_data.size)) + 452 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(2 * ceil32(return_data.size)) + 256 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (4 * ceil32(return_data.size)) + 256
            require return_data.size >= 32
            _173 = mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28]
            require mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] <= test266151307()
            require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 287 < (2 * ceil32(return_data.size)) + return_data.size + 256
            _176 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]
            require mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256] <= test266151307()
            require (4 * ceil32(return_data.size)) + (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]) + 288 <= test266151307() and (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]) + 32 >= 0
            mem[64] = (4 * ceil32(return_data.size)) + (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 256 len 4], ext_call.return_data[0 len 28] + 256]) + 288
            mem[(4 * ceil32(return_data.size)) + 256] = _176
            require _173 + (32 * _176) + 32 <= return_data.size
            idx = 0
            s = (2 * ceil32(return_data.size)) + _173 + 288
            t = (4 * ceil32(return_data.size)) + 288
            while idx < _176:
                require mem[s] == mem[s]
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 4] = this.address
            require ext_code.size(assetAddress)
            staticcall assetAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _224 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _227 = mem[_224]
            require mem[_224] == mem[_224]
            mem[mem[64] + 4] = lendingPoolAddress
            mem[mem[64] + 36] = _227
            require ext_code.size(assetAddress)
            call assetAddress.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args lendingPoolAddress, _227
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _236 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_236] == bool(mem[_236])
            require ext_code.size(lendingPoolAddress)
            call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                 gas gas_remaining wei
                args assetAddress, _227, address(this.address), 0
        else:
            mem[(2 * ceil32(return_data.size)) + 160] = 3
            mem[(2 * ceil32(return_data.size)) + 192] = sub_48996015Address
            mem[(2 * ceil32(return_data.size)) + 224] = WAVAXAddress
            mem[(2 * ceil32(return_data.size)) + 256] = assetAddress
            mem[(2 * ceil32(return_data.size)) + 288] = 0x38ed173900000000000000000000000000000000000000000000000000000000
            mem[(2 * ceil32(return_data.size)) + 292] = ext_call.return_data[0]
            mem[(2 * ceil32(return_data.size)) + 324] = 0
            mem[(2 * ceil32(return_data.size)) + 356] = 160
            mem[(2 * ceil32(return_data.size)) + 452] = 3
            idx = 0
            s = (2 * ceil32(return_data.size)) + 192
            t = (2 * ceil32(return_data.size)) + 484
            while idx < 3:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[(2 * ceil32(return_data.size)) + 388] = this.address
            mem[(2 * ceil32(return_data.size)) + 420] = block.timestamp
            require ext_code.size(routerAddress)
            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, 3, mem[(2 * ceil32(return_data.size)) + 484 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(2 * ceil32(return_data.size)) + 288 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (4 * ceil32(return_data.size)) + 288
            require return_data.size >= 32
            _172 = mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28]
            require mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28] <= test266151307()
            require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28] + 319 < (2 * ceil32(return_data.size)) + return_data.size + 288
            _175 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28] + 288]
            require mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28] + 288] <= test266151307()
            require (4 * ceil32(return_data.size)) + (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28] + 288]) + 320 <= test266151307() and (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28] + 288]) + 32 >= 0
            mem[64] = (4 * ceil32(return_data.size)) + (32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 288 len 4], ext_call.return_data[0 len 28] + 288]) + 320
            mem[(4 * ceil32(return_data.size)) + 288] = _175
            require _172 + (32 * _175) + 32 <= return_data.size
            idx = 0
            s = (2 * ceil32(return_data.size)) + _172 + 320
            t = (4 * ceil32(return_data.size)) + 320
            while idx < _175:
                require mem[s] == mem[s]
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 4] = this.address
            require ext_code.size(assetAddress)
            staticcall assetAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _223 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _226 = mem[_223]
            require mem[_223] == mem[_223]
            mem[mem[64] + 4] = lendingPoolAddress
            mem[mem[64] + 36] = _226
            require ext_code.size(assetAddress)
            call assetAddress.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args lendingPoolAddress, _226
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _235 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_235] == bool(mem[_235])
            require ext_code.size(lendingPoolAddress)
            call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                 gas gas_remaining wei
                args assetAddress, _226, address(this.address), 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function deposit(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require lotteryState <= 1
    if lotteryState:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Can't deposit while calculating the winner'
    if not latestRound:
        totalDeposited += arg1
        if not userInfo[address(msg.sender)].field_0:
            players.length++
            address(players[players.length]) = msg.sender
        if arg1 <= 0:
            if not userInfo[address(msg.sender)].field_0:
                userInfo[address(msg.sender)].field_256 = 0
            else:
                require userInfo[address(msg.sender)].field_0
                if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
        else:
            require ext_code.size(assetAddress)
            call assetAddress.0x23b872dd with:
                 gas gas_remaining wei
                args msg.sender, address(this.address), arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(assetAddress)
            call assetAddress.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args lendingPoolAddress, arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(lendingPoolAddress)
            call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                 gas gas_remaining wei
                args assetAddress, arg1, address(this.address), 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if userInfo[address(msg.sender)].field_0 + arg1 < userInfo[address(msg.sender)].field_0:
                revert with 0, 'SafeMath: addition overflow'
            userInfo[address(msg.sender)].field_0 += arg1
            if not userInfo[address(msg.sender)].field_0:
                userInfo[address(msg.sender)].field_256 = 0
            else:
                require userInfo[address(msg.sender)].field_0
                if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                    revert with 0, 'SafeMath: multiplication overflow'
                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
    else:
        if block.timestamp > lastRewardTimestamp:
            if totalDeposited:
                if sub_f12c8e0d + sub_7f94bf16:
                    if lastRewardTimestamp > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not block.timestamp - lastRewardTimestamp:
                        require ext_code.size(rewardWalletAddress)
                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if totalDeposited <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require totalDeposited
                        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_a9ac33dd += 0 / totalDeposited
                    else:
                        require block.timestamp - lastRewardTimestamp
                        if block.timestamp - lastRewardTimestamp / block.timestamp - lastRewardTimestamp != 1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                        if not block.timestamp - lastRewardTimestamp:
                            if not block.timestamp - lastRewardTimestamp:
                                require ext_code.size(rewardWalletAddress)
                                call rewardWalletAddress.requestReward(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                            else:
                                require block.timestamp - lastRewardTimestamp
                                if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if totalDeposited <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require totalDeposited
                            if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                revert with 0, 'SafeMath: addition overflow'
                            sub_a9ac33dd += 0 / totalDeposited
                        else:
                            require block.timestamp - lastRewardTimestamp
                            if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d + sub_7f94bf16:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                            if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                if not block.timestamp - lastRewardTimestamp:
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require block.timestamp - lastRewardTimestamp
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                    else:
                                        require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                        if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if totalDeposited <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalDeposited
                                if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                    revert with 0, 'SafeMath: addition overflow'
                                sub_a9ac33dd += 0 / totalDeposited
                            else:
                                require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not block.timestamp - lastRewardTimestamp:
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                else:
                                    require block.timestamp - lastRewardTimestamp
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                    else:
                                        require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                        if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                    if totalDeposited <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalDeposited
                                    if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                        revert with 0, 'SafeMath: addition overflow'
                                    sub_a9ac33dd += 0 / totalDeposited
                                else:
                                    require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                    if (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 10^12:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if totalDeposited <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalDeposited
                                    if sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited) < sub_a9ac33dd:
                                        revert with 0, 'SafeMath: addition overflow'
                                    sub_a9ac33dd += (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited
            lastRewardTimestamp = block.timestamp
        totalDeposited += arg1
        if not latestRound:
            if not userInfo[address(msg.sender)].field_0:
                players.length++
                address(players[players.length]) = msg.sender
            if arg1 <= 0:
                if not userInfo[address(msg.sender)].field_0:
                    userInfo[address(msg.sender)].field_256 = 0
                else:
                    require userInfo[address(msg.sender)].field_0
                    if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
            else:
                require ext_code.size(assetAddress)
                call assetAddress.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, address(this.address), arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(assetAddress)
                call assetAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args lendingPoolAddress, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(lendingPoolAddress)
                call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                     gas gas_remaining wei
                    args assetAddress, arg1, address(this.address), 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if userInfo[address(msg.sender)].field_0 + arg1 < userInfo[address(msg.sender)].field_0:
                    revert with 0, 'SafeMath: addition overflow'
                userInfo[address(msg.sender)].field_0 += arg1
                if not userInfo[address(msg.sender)].field_0:
                    userInfo[address(msg.sender)].field_256 = 0
                else:
                    require userInfo[address(msg.sender)].field_0
                    if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                        revert with 0, 'SafeMath: multiplication overflow'
                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
        else:
            if userInfo[address(msg.sender)].field_0 <= 0:
                if not userInfo[address(msg.sender)].field_0:
                    players.length++
                    address(players[players.length]) = msg.sender
                if arg1 <= 0:
                    if not userInfo[address(msg.sender)].field_0:
                        userInfo[address(msg.sender)].field_256 = 0
                    else:
                        require userInfo[address(msg.sender)].field_0
                        if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
                else:
                    require ext_code.size(assetAddress)
                    call assetAddress.0x23b872dd with:
                         gas gas_remaining wei
                        args msg.sender, address(this.address), arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                         gas gas_remaining wei
                        args assetAddress, arg1, address(this.address), 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if userInfo[address(msg.sender)].field_0 + arg1 < userInfo[address(msg.sender)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    userInfo[address(msg.sender)].field_0 += arg1
                    if not userInfo[address(msg.sender)].field_0:
                        userInfo[address(msg.sender)].field_256 = 0
                    else:
                        require userInfo[address(msg.sender)].field_0
                        if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                            revert with 0, 'SafeMath: multiplication overflow'
                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
            else:
                if not userInfo[address(msg.sender)].field_0:
                    if userInfo[address(msg.sender)].field_256 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -userInfo[address(msg.sender)].field_256 <= 0:
                        if not userInfo[address(msg.sender)].field_0:
                            players.length++
                            address(players[players.length]) = msg.sender
                        if arg1 <= 0:
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
                        else:
                            require ext_code.size(assetAddress)
                            call assetAddress.0x23b872dd with:
                                 gas gas_remaining wei
                                args msg.sender, address(this.address), arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                                 gas gas_remaining wei
                                args assetAddress, arg1, address(this.address), 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if userInfo[address(msg.sender)].field_0 + arg1 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[address(msg.sender)].field_0 += arg1
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
                    else:
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        require ext_code.size(rewardTokenAddress)
                        if -userInfo[address(msg.sender)].field_256 <= ext_call.return_data[0]:
                            call rewardTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, -userInfo[address(msg.sender)].field_256
                        else:
                            call rewardTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if not ext_call.return_data[0]:
                            revert with 0, 'safeTokenTransfer: transfer failed'
                        if not userInfo[address(msg.sender)].field_0:
                            players.length++
                            address(players[players.length]) = msg.sender
                        if arg1 > 0:
                            require ext_code.size(assetAddress)
                            call assetAddress.0x23b872dd with:
                                 gas gas_remaining wei
                                args msg.sender, address(this.address), arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                                 gas gas_remaining wei
                                args assetAddress, arg1, address(this.address), 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if userInfo[address(msg.sender)].field_0 + arg1 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[address(msg.sender)].field_0 += arg1
                        if not userInfo[address(msg.sender)].field_0:
                            userInfo[address(msg.sender)].field_256 = 0
                        else:
                            require userInfo[address(msg.sender)].field_0
                            if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                                revert with 0, 'SafeMath: multiplication overflow'
                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
                else:
                    require userInfo[address(msg.sender)].field_0
                    if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                        if not userInfo[address(msg.sender)].field_0:
                            players.length++
                            address(players[players.length]) = msg.sender
                        if arg1 <= 0:
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
                        else:
                            require ext_code.size(assetAddress)
                            call assetAddress.0x23b872dd with:
                                 gas gas_remaining wei
                                args msg.sender, address(this.address), arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                                 gas gas_remaining wei
                                args assetAddress, arg1, address(this.address), 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if userInfo[address(msg.sender)].field_0 + arg1 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[address(msg.sender)].field_0 += arg1
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
                    else:
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        require ext_code.size(rewardTokenAddress)
                        if (userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12) - userInfo[address(msg.sender)].field_256 <= ext_call.return_data[0]:
                            call rewardTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, (userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12) - userInfo[address(msg.sender)].field_256
                        else:
                            call rewardTokenAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if not ext_call.return_data[0]:
                            revert with 0, 'safeTokenTransfer: transfer failed'
                        if not userInfo[address(msg.sender)].field_0:
                            players.length++
                            address(players[players.length]) = msg.sender
                        if arg1 > 0:
                            require ext_code.size(assetAddress)
                            call assetAddress.0x23b872dd with:
                                 gas gas_remaining wei
                                args msg.sender, address(this.address), arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.deposit(address arg1, uint256 arg2, address arg3, uint16 arg4) with:
                                 gas gas_remaining wei
                                args assetAddress, arg1, address(this.address), 0
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if userInfo[address(msg.sender)].field_0 + arg1 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[address(msg.sender)].field_0 += arg1
                        if not userInfo[address(msg.sender)].field_0:
                            userInfo[address(msg.sender)].field_256 = 0
                        else:
                            require userInfo[address(msg.sender)].field_0
                            if userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / userInfo[address(msg.sender)].field_0 != sub_a9ac33dd:
                                revert with 0, 'SafeMath: multiplication overflow'
                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * sub_a9ac33dd / 10^12
    emit Deposit(msg.sender, arg1);
}

function drawWinner() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if bool(distributed) != 1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'previous reward not distributed to winners yet!!!'
    lotteryState = 1
    if sub_84beb6e6 + sub_0b4b41bc < sub_84beb6e6:
        revert with 0, 'SafeMath: addition overflow'
    if sub_84beb6e6 + sub_0b4b41bc > block.timestamp:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'it's not yet time for the round to end'
    if not latestRound:
        lastRewardTimestamp = block.timestamp
        mem[100] = this.address
        require ext_code.size(sub_b8ab24bdAddress)
        staticcall sub_b8ab24bdAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if not ext_call.return_data[0] - totalDeposited:
            if not ext_call.return_data[0] - totalDeposited:
                if not ext_call.return_data[0] - totalDeposited:
                    sub_bf4c8572 = 0
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3885 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4322 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require _3885 + (32 * _4322) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3885 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4322:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14230 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14230] == mem[_14230]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14230] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = 0
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17302] == bool(mem[_17302])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3887 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4324 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3887 + (32 * _4324) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3887 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4324:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14232 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14232] == mem[_14232]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14232] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17304 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17304] == bool(mem[_17304])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3886 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4323 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4323
                            require _3886 + (32 * _4323) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3886 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4323:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14231 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14231] == mem[_14231]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14231] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17303 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17303] == bool(mem[_17303])
                else:
                    require ext_call.return_data[0] - totalDeposited
                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                        revert with 0, 'SafeMath: multiplication overflow'
                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3882 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4319 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require _3882 + (32 * _4319) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3882 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4319:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14227 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14227] == mem[_14227]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14227] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = 0
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17299 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17299] == bool(mem[_17299])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3884 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4321 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3884 + (32 * _4321) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3884 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4321:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14229] == mem[_14229]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14229] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17301] == bool(mem[_17301])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3883 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4320 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4320
                            require _3883 + (32 * _4320) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3883 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4320:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14228 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14228] == mem[_14228]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14228] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17300 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17300] == bool(mem[_17300])
            else:
                require ext_call.return_data[0] - totalDeposited
                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                    revert with 0, 'SafeMath: multiplication overflow'
                if not ext_call.return_data[0] - totalDeposited:
                    sub_bf4c8572 = 0
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3879 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4316 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require _3879 + (32 * _4316) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3879 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4316:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14224 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14224] == mem[_14224]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14224] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = 0
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17296 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17296] == bool(mem[_17296])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3881 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4318 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3881 + (32 * _4318) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3881 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4318:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14226 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14226] == mem[_14226]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14226] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17298 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17298] == bool(mem[_17298])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3880 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4317 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4317
                            require _3880 + (32 * _4317) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3880 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4317:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14225 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14225] == mem[_14225]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14225] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17297 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17297] == bool(mem[_17297])
                else:
                    require ext_call.return_data[0] - totalDeposited
                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                        revert with 0, 'SafeMath: multiplication overflow'
                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3876 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4313 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require _3876 + (32 * _4313) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3876 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4313:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14221 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14221] == mem[_14221]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14221] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = 0
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17293 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17293] == bool(mem[_17293])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3878 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4315 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3878 + (32 * _4315) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3878 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4315:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14223 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14223] == mem[_14223]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14223] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17295 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17295] == bool(mem[_17295])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3877 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4314 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4314
                            require _3877 + (32 * _4314) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3877 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4314:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14222 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14222] == mem[_14222]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14222] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17294 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17294] == bool(mem[_17294])
        else:
            require ext_call.return_data[0] - totalDeposited
            if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                revert with 0, 'SafeMath: multiplication overflow'
            if not ext_call.return_data[0] - totalDeposited:
                if not ext_call.return_data[0] - totalDeposited:
                    sub_bf4c8572 = 0
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3873 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4310 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require _3873 + (32 * _4310) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3873 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4310:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14218 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14218] == mem[_14218]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14218] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17290 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17290] == bool(mem[_17290])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3875 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4312 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3875 + (32 * _4312) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3875 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4312:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14220 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14220] == mem[_14220]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14220] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17292 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17292] == bool(mem[_17292])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3874 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4311 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4311
                            require _3874 + (32 * _4311) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3874 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4311:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14219 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14219] == mem[_14219]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14219] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17291 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17291] == bool(mem[_17291])
                else:
                    require ext_call.return_data[0] - totalDeposited
                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                        revert with 0, 'SafeMath: multiplication overflow'
                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3870 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4307 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                        require _3870 + (32 * _4307) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3870 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4307:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14215 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14215] == mem[_14215]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14215] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17287 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17287] == bool(mem[_17287])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3872 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4309 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3872 + (32 * _4309) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3872 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4309:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14217 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14217] == mem[_14217]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14217] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17289 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17289] == bool(mem[_17289])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3871 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4308 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4308
                            require _3871 + (32 * _4308) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3871 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4308:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14216 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14216] == mem[_14216]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14216] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17288 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17288] == bool(mem[_17288])
            else:
                require ext_call.return_data[0] - totalDeposited
                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                    revert with 0, 'SafeMath: multiplication overflow'
                if not ext_call.return_data[0] - totalDeposited:
                    sub_bf4c8572 = 0
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3867 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4304 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require _3867 + (32 * _4304) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3867 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4304:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14212 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14212] == mem[_14212]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14212] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17284 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17284] == bool(mem[_17284])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3869 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4306 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3869 + (32 * _4306) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3869 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4306:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14214 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14214] == mem[_14214]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14214] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17286] == bool(mem[_17286])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3868 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4305 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4305
                            require _3868 + (32 * _4305) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3868 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4305:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14213 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14213] == mem[_14213]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14213] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17285 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17285] == bool(mem[_17285])
                else:
                    require ext_call.return_data[0] - totalDeposited
                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                        revert with 0, 'SafeMath: multiplication overflow'
                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                    mem[ceil32(return_data.size) + 132] = -1
                    require ext_code.size(sub_b8ab24bdAddress)
                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args lendingPoolAddress, -1
                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                    require ext_code.size(lendingPoolAddress)
                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                         gas gas_remaining wei
                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(assetAddress)
                    call assetAddress.approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args routerAddress, -1
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if assetAddress == WAVAXAddress:
                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + 128
                        t = (6 * ceil32(return_data.size)) + 388
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                        require ext_code.size(routerAddress)
                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _3864 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                        _4301 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                        require _3864 + (32 * _4301) + 32 <= return_data.size
                        idx = 0
                        s = (6 * ceil32(return_data.size)) + _3864 + 224
                        t = (7 * ceil32(return_data.size)) + 224
                        while idx < _4301:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(rewardTokenAddress)
                        staticcall rewardTokenAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14209 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14209] == mem[_14209]
                        if sub_0b4b41bc <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require sub_0b4b41bc
                        sub_7f94bf16 = mem[_14209] / sub_0b4b41bc
                        mem[mem[64] + 4] = treasuryAddress
                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        require ext_code.size(assetAddress)
                        call assetAddress.0xa9059cbb with:
                             gas gas_remaining wei
                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17281 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_17281] == bool(mem[_17281])
                    else:
                        if rewardTokenAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3866 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4303 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3866 + (32 * _4303) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3866 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4303:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14211 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14211] == mem[_14211]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14211] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17283 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17283] == bool(mem[_17283])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 420
                            while idx < 3:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 224
                            require return_data.size >= 32
                            _3865 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                            _4302 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                            mem[(7 * ceil32(return_data.size)) + 224] = _4302
                            require _3865 + (32 * _4302) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3865 + 256
                            t = (7 * ceil32(return_data.size)) + 256
                            while idx < _4302:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14210] == mem[_14210]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14210] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17282 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17282] == bool(mem[_17282])
    else:
        if block.timestamp <= lastRewardTimestamp:
            mem[100] = this.address
            require ext_code.size(sub_b8ab24bdAddress)
            staticcall sub_b8ab24bdAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if not ext_call.return_data[0] - totalDeposited:
                if not ext_call.return_data[0] - totalDeposited:
                    if not ext_call.return_data[0] - totalDeposited:
                        sub_bf4c8572 = 0
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3861 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4298 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3861 + (32 * _4298) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3861 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4298:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14206] == mem[_14206]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14206] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17278 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17278] == bool(mem[_17278])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3863 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4300 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3863 + (32 * _4300) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3863 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4300:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14208 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14208] == mem[_14208]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14208] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17280 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17280] == bool(mem[_17280])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3862 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4299 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4299
                                require _3862 + (32 * _4299) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3862 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4299:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14207 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14207] == mem[_14207]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14207] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17279 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17279] == bool(mem[_17279])
                    else:
                        require ext_call.return_data[0] - totalDeposited
                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                            revert with 0, 'SafeMath: multiplication overflow'
                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3858 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4295 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3858 + (32 * _4295) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3858 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4295:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14203] == mem[_14203]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14203] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17275 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17275] == bool(mem[_17275])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3860 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4297 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3860 + (32 * _4297) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3860 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4297:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14205 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14205] == mem[_14205]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14205] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17277 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17277] == bool(mem[_17277])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3859 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4296 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4296
                                require _3859 + (32 * _4296) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3859 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4296:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14204 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14204] == mem[_14204]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14204] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17276 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17276] == bool(mem[_17276])
                else:
                    require ext_call.return_data[0] - totalDeposited
                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                        revert with 0, 'SafeMath: multiplication overflow'
                    if not ext_call.return_data[0] - totalDeposited:
                        sub_bf4c8572 = 0
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3855 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4292 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3855 + (32 * _4292) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3855 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4292:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14200 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14200] == mem[_14200]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14200] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17272 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17272] == bool(mem[_17272])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3857 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4294 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3857 + (32 * _4294) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3857 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4294:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14202 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14202] == mem[_14202]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14202] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17274 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17274] == bool(mem[_17274])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3856 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4293 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4293
                                require _3856 + (32 * _4293) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3856 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4293:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14201 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14201] == mem[_14201]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14201] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17273 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17273] == bool(mem[_17273])
                    else:
                        require ext_call.return_data[0] - totalDeposited
                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                            revert with 0, 'SafeMath: multiplication overflow'
                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3852 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4289 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3852 + (32 * _4289) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3852 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4289:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14197 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14197] == mem[_14197]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14197] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = 0
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17269 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17269] == bool(mem[_17269])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3854 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4291 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3854 + (32 * _4291) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3854 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4291:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14199 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14199] == mem[_14199]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14199] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17271 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17271] == bool(mem[_17271])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3853 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4290 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4290
                                require _3853 + (32 * _4290) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3853 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4290:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14198 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14198] == mem[_14198]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14198] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17270 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17270] == bool(mem[_17270])
            else:
                require ext_call.return_data[0] - totalDeposited
                if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                    revert with 0, 'SafeMath: multiplication overflow'
                if not ext_call.return_data[0] - totalDeposited:
                    if not ext_call.return_data[0] - totalDeposited:
                        sub_bf4c8572 = 0
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3849 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4286 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3849 + (32 * _4286) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3849 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4286:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14194 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14194] == mem[_14194]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14194] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17266 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17266] == bool(mem[_17266])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3851 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4288 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3851 + (32 * _4288) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3851 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4288:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14196 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14196] == mem[_14196]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14196] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17268 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17268] == bool(mem[_17268])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3850 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4287 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4287
                                require _3850 + (32 * _4287) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3850 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4287:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14195 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14195] == mem[_14195]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14195] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17267 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17267] == bool(mem[_17267])
                    else:
                        require ext_call.return_data[0] - totalDeposited
                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                            revert with 0, 'SafeMath: multiplication overflow'
                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3846 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4283 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                            require _3846 + (32 * _4283) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3846 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4283:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14191 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14191] == mem[_14191]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14191] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17263 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17263] == bool(mem[_17263])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3848 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4285 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3848 + (32 * _4285) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3848 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4285:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14193 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14193] == mem[_14193]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14193] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17265 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17265] == bool(mem[_17265])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3847 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4284 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4284
                                require _3847 + (32 * _4284) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3847 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4284:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14192 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14192] == mem[_14192]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14192] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17264 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17264] == bool(mem[_17264])
                else:
                    require ext_call.return_data[0] - totalDeposited
                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                        revert with 0, 'SafeMath: multiplication overflow'
                    if not ext_call.return_data[0] - totalDeposited:
                        sub_bf4c8572 = 0
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3843 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4280 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3843 + (32 * _4280) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3843 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4280:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14188 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14188] == mem[_14188]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14188] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17260 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17260] == bool(mem[_17260])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3845 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4282 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3845 + (32 * _4282) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3845 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4282:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14190 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14190] == mem[_14190]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14190] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17262 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17262] == bool(mem[_17262])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3844 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4281 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4281
                                require _3844 + (32 * _4281) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3844 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4281:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14189 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14189] == mem[_14189]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14189] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17261 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17261] == bool(mem[_17261])
                    else:
                        require ext_call.return_data[0] - totalDeposited
                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                            revert with 0, 'SafeMath: multiplication overflow'
                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                        mem[ceil32(return_data.size) + 132] = -1
                        require ext_code.size(sub_b8ab24bdAddress)
                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args lendingPoolAddress, -1
                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                        require ext_code.size(lendingPoolAddress)
                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                             gas gas_remaining wei
                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(assetAddress)
                        call assetAddress.approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args routerAddress, -1
                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if assetAddress == WAVAXAddress:
                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + 128
                            t = (6 * ceil32(return_data.size)) + 388
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                            require ext_code.size(routerAddress)
                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (7 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _3840 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                            _4277 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                            require _3840 + (32 * _4277) + 32 <= return_data.size
                            idx = 0
                            s = (6 * ceil32(return_data.size)) + _3840 + 224
                            t = (7 * ceil32(return_data.size)) + 224
                            while idx < _4277:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(rewardTokenAddress)
                            staticcall rewardTokenAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14185 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14185] == mem[_14185]
                            if sub_0b4b41bc <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require sub_0b4b41bc
                            sub_7f94bf16 = mem[_14185] / sub_0b4b41bc
                            mem[mem[64] + 4] = treasuryAddress
                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            require ext_code.size(assetAddress)
                            call assetAddress.0xa9059cbb with:
                                 gas gas_remaining wei
                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_17257] == bool(mem[_17257])
                        else:
                            if rewardTokenAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3842 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4279 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3842 + (32 * _4279) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3842 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4279:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14187 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14187] == mem[_14187]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14187] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17259 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17259] == bool(mem[_17259])
                            else:
                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 420
                                while idx < 3:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                require return_data.size >= 32
                                _3841 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                _4278 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                mem[(7 * ceil32(return_data.size)) + 224] = _4278
                                require _3841 + (32 * _4278) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3841 + 256
                                t = (7 * ceil32(return_data.size)) + 256
                                while idx < _4278:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14186 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14186] == mem[_14186]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14186] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _17258 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_17258] == bool(mem[_17258])
        else:
            if not totalDeposited:
                lastRewardTimestamp = block.timestamp
                mem[100] = this.address
                require ext_code.size(sub_b8ab24bdAddress)
                staticcall sub_b8ab24bdAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                if not ext_call.return_data[0] - totalDeposited:
                    if not ext_call.return_data[0] - totalDeposited:
                        if not ext_call.return_data[0] - totalDeposited:
                            sub_bf4c8572 = 0
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3678 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4156 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3678 + (32 * _4156) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3678 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4156:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14158 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14158] == mem[_14158]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14158] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16918 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16918] == bool(mem[_16918])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3680 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4158 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3680 + (32 * _4158) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3680 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4158:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14160 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14160] == mem[_14160]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14160] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16920 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16920] == bool(mem[_16920])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3679 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4157 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4157
                                    require _3679 + (32 * _4157) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3679 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4157:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14159 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14159] == mem[_14159]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14159] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16919 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16919] == bool(mem[_16919])
                        else:
                            require ext_call.return_data[0] - totalDeposited
                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                revert with 0, 'SafeMath: multiplication overflow'
                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3675 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4153 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3675 + (32 * _4153) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3675 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14155 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14155] == mem[_14155]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14155] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16915 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16915] == bool(mem[_16915])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3677 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4155 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3677 + (32 * _4155) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3677 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4155:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14157] == mem[_14157]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14157] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16917 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16917] == bool(mem[_16917])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3676 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4154 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4154
                                    require _3676 + (32 * _4154) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3676 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4154:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14156 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14156] == mem[_14156]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14156] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16916 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16916] == bool(mem[_16916])
                    else:
                        require ext_call.return_data[0] - totalDeposited
                        if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                            revert with 0, 'SafeMath: multiplication overflow'
                        if not ext_call.return_data[0] - totalDeposited:
                            sub_bf4c8572 = 0
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3672 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4150 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3672 + (32 * _4150) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3672 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4150:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14152 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14152] == mem[_14152]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14152] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16912 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16912] == bool(mem[_16912])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3674 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4152 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3674 + (32 * _4152) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3674 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4152:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14154 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14154] == mem[_14154]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14154] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16914 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16914] == bool(mem[_16914])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3673 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4151 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4151
                                    require _3673 + (32 * _4151) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3673 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4151:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14153 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14153] == mem[_14153]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14153] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16913 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16913] == bool(mem[_16913])
                        else:
                            require ext_call.return_data[0] - totalDeposited
                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                revert with 0, 'SafeMath: multiplication overflow'
                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3669 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4147 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3669 + (32 * _4147) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3669 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14149 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14149] == mem[_14149]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14149] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = 0
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16909 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16909] == bool(mem[_16909])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3671 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4149 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3671 + (32 * _4149) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3671 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4149:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14151 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14151] == mem[_14151]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14151] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16911 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16911] == bool(mem[_16911])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3670 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4148 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4148
                                    require _3670 + (32 * _4148) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3670 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4148:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14150 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14150] == mem[_14150]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14150] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16910 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16910] == bool(mem[_16910])
                else:
                    require ext_call.return_data[0] - totalDeposited
                    if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                        revert with 0, 'SafeMath: multiplication overflow'
                    if not ext_call.return_data[0] - totalDeposited:
                        if not ext_call.return_data[0] - totalDeposited:
                            sub_bf4c8572 = 0
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3666 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4144 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3666 + (32 * _4144) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3666 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4144:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14146 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14146] == mem[_14146]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14146] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16906 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16906] == bool(mem[_16906])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3668 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4146 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3668 + (32 * _4146) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3668 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4146:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14148 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14148] == mem[_14148]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14148] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16908 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16908] == bool(mem[_16908])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3667 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4145 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4145
                                    require _3667 + (32 * _4145) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3667 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4145:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14147 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14147] == mem[_14147]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14147] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16907 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16907] == bool(mem[_16907])
                        else:
                            require ext_call.return_data[0] - totalDeposited
                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                revert with 0, 'SafeMath: multiplication overflow'
                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3663 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4141 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                require _3663 + (32 * _4141) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3663 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14143 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14143] == mem[_14143]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14143] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16903 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16903] == bool(mem[_16903])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3665 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4143 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3665 + (32 * _4143) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3665 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4143:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14145 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14145] == mem[_14145]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14145] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16905 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16905] == bool(mem[_16905])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3664 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4142 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4142
                                    require _3664 + (32 * _4142) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3664 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4142:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14144 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14144] == mem[_14144]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14144] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16904 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16904] == bool(mem[_16904])
                    else:
                        require ext_call.return_data[0] - totalDeposited
                        if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                            revert with 0, 'SafeMath: multiplication overflow'
                        if not ext_call.return_data[0] - totalDeposited:
                            sub_bf4c8572 = 0
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3660 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4138 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3660 + (32 * _4138) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3660 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4138:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14140 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14140] == mem[_14140]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14140] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16900 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16900] == bool(mem[_16900])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3662 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4140 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3662 + (32 * _4140) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3662 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4140:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14142 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14142] == mem[_14142]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14142] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16902 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16902] == bool(mem[_16902])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3661 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4139 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4139
                                    require _3661 + (32 * _4139) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3661 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4139:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14141 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14141] == mem[_14141]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14141] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16901 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16901] == bool(mem[_16901])
                        else:
                            require ext_call.return_data[0] - totalDeposited
                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                revert with 0, 'SafeMath: multiplication overflow'
                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                            mem[ceil32(return_data.size) + 132] = -1
                            require ext_code.size(sub_b8ab24bdAddress)
                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args lendingPoolAddress, -1
                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                            require ext_code.size(lendingPoolAddress)
                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                 gas gas_remaining wei
                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(assetAddress)
                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args routerAddress, -1
                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if assetAddress == WAVAXAddress:
                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + 128
                                t = (6 * ceil32(return_data.size)) + 388
                                while idx < 2:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                require ext_code.size(routerAddress)
                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                require return_data.size >= 32
                                _3657 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                _4135 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                require _3657 + (32 * _4135) + 32 <= return_data.size
                                idx = 0
                                s = (6 * ceil32(return_data.size)) + _3657 + 224
                                t = (7 * ceil32(return_data.size)) + 224
                                while idx < _4135:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(rewardTokenAddress)
                                staticcall rewardTokenAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14137 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14137] == mem[_14137]
                                if sub_0b4b41bc <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require sub_0b4b41bc
                                sub_7f94bf16 = mem[_14137] / sub_0b4b41bc
                                mem[mem[64] + 4] = treasuryAddress
                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                require ext_code.size(assetAddress)
                                call assetAddress.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16897 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16897] == bool(mem[_16897])
                            else:
                                if rewardTokenAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3659 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4137 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3659 + (32 * _4137) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3659 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4137:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14139 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14139] == mem[_14139]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14139] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16899 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16899] == bool(mem[_16899])
                                else:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 420
                                    while idx < 3:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                    require return_data.size >= 32
                                    _3658 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                    _4136 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                    mem[(7 * ceil32(return_data.size)) + 224] = _4136
                                    require _3658 + (32 * _4136) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3658 + 256
                                    t = (7 * ceil32(return_data.size)) + 256
                                    while idx < _4136:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14138 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14138] == mem[_14138]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14138] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _16898 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_16898] == bool(mem[_16898])
            else:
                if not sub_f12c8e0d + sub_7f94bf16:
                    lastRewardTimestamp = block.timestamp
                    mem[100] = this.address
                    require ext_code.size(sub_b8ab24bdAddress)
                    staticcall sub_b8ab24bdAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    if not ext_call.return_data[0] - totalDeposited:
                        if not ext_call.return_data[0] - totalDeposited:
                            if not ext_call.return_data[0] - totalDeposited:
                                sub_bf4c8572 = 0
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3837 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4274 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3837 + (32 * _4274) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3837 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4274:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14182 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14182] == mem[_14182]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14182] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17254 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17254] == bool(mem[_17254])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3839 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4276 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _3839 + (32 * _4276) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3839 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4276:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14184 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14184] == mem[_14184]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14184] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17256 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17256] == bool(mem[_17256])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3838 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4275 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4275
                                        require _3838 + (32 * _4275) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3838 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4275:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14183 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14183] == mem[_14183]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14183] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17255 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17255] == bool(mem[_17255])
                            else:
                                require ext_call.return_data[0] - totalDeposited
                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3834 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4271 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3834 + (32 * _4271) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3834 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4271:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14179 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14179] == mem[_14179]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14179] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17251 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17251] == bool(mem[_17251])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3836 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4273 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _3836 + (32 * _4273) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3836 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4273:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14181 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14181] == mem[_14181]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14181] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17253 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17253] == bool(mem[_17253])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3835 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4272 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4272
                                        require _3835 + (32 * _4272) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3835 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4272:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14180 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14180] == mem[_14180]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14180] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17252 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17252] == bool(mem[_17252])
                        else:
                            require ext_call.return_data[0] - totalDeposited
                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not ext_call.return_data[0] - totalDeposited:
                                sub_bf4c8572 = 0
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3831 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4268 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3831 + (32 * _4268) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3831 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4268:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14176 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14176] == mem[_14176]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14176] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17248 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17248] == bool(mem[_17248])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3833 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4270 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _3833 + (32 * _4270) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3833 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4270:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14178 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14178] == mem[_14178]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14178] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17250 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17250] == bool(mem[_17250])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3832 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4269 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4269
                                        require _3832 + (32 * _4269) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3832 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4269:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14177 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14177] == mem[_14177]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14177] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17249 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17249] == bool(mem[_17249])
                            else:
                                require ext_call.return_data[0] - totalDeposited
                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3828 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4265 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3828 + (32 * _4265) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3828 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4265:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14173 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14173] == mem[_14173]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14173] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17245 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17245] == bool(mem[_17245])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3830 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4267 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _3830 + (32 * _4267) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3830 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4267:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14175 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14175] == mem[_14175]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14175] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17247 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17247] == bool(mem[_17247])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3829 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4266 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4266
                                        require _3829 + (32 * _4266) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3829 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4266:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14174 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14174] == mem[_14174]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14174] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17246 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17246] == bool(mem[_17246])
                    else:
                        require ext_call.return_data[0] - totalDeposited
                        if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                            revert with 0, 'SafeMath: multiplication overflow'
                        if not ext_call.return_data[0] - totalDeposited:
                            if not ext_call.return_data[0] - totalDeposited:
                                sub_bf4c8572 = 0
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3825 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4262 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3825 + (32 * _4262) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3825 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4262:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14170 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14170] == mem[_14170]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14170] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17242 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17242] == bool(mem[_17242])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3827 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4264 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _3827 + (32 * _4264) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3827 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4264:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14172 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14172] == mem[_14172]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14172] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17244 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17244] == bool(mem[_17244])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3826 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4263 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4263
                                        require _3826 + (32 * _4263) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3826 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4263:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14171 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14171] == mem[_14171]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14171] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17243 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17243] == bool(mem[_17243])
                            else:
                                require ext_call.return_data[0] - totalDeposited
                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3822 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4259 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                    require _3822 + (32 * _4259) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3822 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4259:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14167 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14167] == mem[_14167]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14167] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17239 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17239] == bool(mem[_17239])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3824 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4261 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _3824 + (32 * _4261) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3824 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4261:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14169 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14169] == mem[_14169]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14169] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17241 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17241] == bool(mem[_17241])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3823 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4260 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4260
                                        require _3823 + (32 * _4260) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3823 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4260:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14168 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14168] == mem[_14168]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14168] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17240 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17240] == bool(mem[_17240])
                        else:
                            require ext_call.return_data[0] - totalDeposited
                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not ext_call.return_data[0] - totalDeposited:
                                sub_bf4c8572 = 0
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3819 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4256 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3819 + (32 * _4256) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3819 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4256:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14164 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14164] == mem[_14164]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14164] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17236 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17236] == bool(mem[_17236])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3821 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4258 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _3821 + (32 * _4258) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3821 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4258:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14166 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14166] == mem[_14166]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14166] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17238 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17238] == bool(mem[_17238])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3820 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4257 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4257
                                        require _3820 + (32 * _4257) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3820 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4257:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14165 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14165] == mem[_14165]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14165] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17237 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17237] == bool(mem[_17237])
                            else:
                                require ext_call.return_data[0] - totalDeposited
                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                mem[ceil32(return_data.size) + 132] = -1
                                require ext_code.size(sub_b8ab24bdAddress)
                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args lendingPoolAddress, -1
                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                require ext_code.size(lendingPoolAddress)
                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(assetAddress)
                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args routerAddress, -1
                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if assetAddress == WAVAXAddress:
                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + 128
                                    t = (6 * ceil32(return_data.size)) + 388
                                    while idx < 2:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                    require ext_code.size(routerAddress)
                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                    require return_data.size >= 32
                                    _3816 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                    _4253 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                    require _3816 + (32 * _4253) + 32 <= return_data.size
                                    idx = 0
                                    s = (6 * ceil32(return_data.size)) + _3816 + 224
                                    t = (7 * ceil32(return_data.size)) + 224
                                    while idx < _4253:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(rewardTokenAddress)
                                    staticcall rewardTokenAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14161 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14161] == mem[_14161]
                                    if sub_0b4b41bc <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require sub_0b4b41bc
                                    sub_7f94bf16 = mem[_14161] / sub_0b4b41bc
                                    mem[mem[64] + 4] = treasuryAddress
                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    require ext_code.size(assetAddress)
                                    call assetAddress.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _17233 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_17233] == bool(mem[_17233])
                                else:
                                    if rewardTokenAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _3818 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _4255 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _3818 + (32 * _4255) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3818 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _4255:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14163 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14163] == mem[_14163]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14163] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17235 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17235] == bool(mem[_17235])
                                    else:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 420
                                        while idx < 3:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                        require return_data.size >= 32
                                        _3817 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                        _4254 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                        mem[(7 * ceil32(return_data.size)) + 224] = _4254
                                        require _3817 + (32 * _4254) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _3817 + 256
                                        t = (7 * ceil32(return_data.size)) + 256
                                        while idx < _4254:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _14162 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_14162] == mem[_14162]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_14162] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _17234 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_17234] == bool(mem[_17234])
                else:
                    if lastRewardTimestamp > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not block.timestamp - lastRewardTimestamp:
                        require ext_code.size(rewardWalletAddress)
                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if totalDeposited <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require totalDeposited
                        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_a9ac33dd += 0 / totalDeposited
                        lastRewardTimestamp = block.timestamp
                        mem[100] = this.address
                        require ext_code.size(sub_b8ab24bdAddress)
                        staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if not ext_call.return_data[0] - totalDeposited:
                            if not ext_call.return_data[0] - totalDeposited:
                                if not ext_call.return_data[0] - totalDeposited:
                                    sub_bf4c8572 = 0
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14878 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15262 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _14878 + (32 * _15262) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14878 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15262:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22462 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22462] == mem[_22462]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22462] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24334 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24334] == bool(mem[_24334])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14880 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15264 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require _14880 + (32 * _15264) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14880 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15264:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22464 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22464] == mem[_22464]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22464] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24336 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24336] == bool(mem[_24336])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14879 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15263 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15263
                                            require _14879 + (32 * _15263) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14879 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15263:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22463 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22463] == mem[_22463]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22463] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24335 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24335] == bool(mem[_24335])
                                else:
                                    require ext_call.return_data[0] - totalDeposited
                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14875 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15259 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _14875 + (32 * _15259) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14875 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15259:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22459 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22459] == mem[_22459]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22459] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24331 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24331] == bool(mem[_24331])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14877 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15261 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require _14877 + (32 * _15261) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14877 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15261:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22461 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22461] == mem[_22461]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22461] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24333 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24333] == bool(mem[_24333])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14876 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15260 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15260
                                            require _14876 + (32 * _15260) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14876 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15260:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22460 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22460] == mem[_22460]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22460] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24332 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24332] == bool(mem[_24332])
                            else:
                                require ext_call.return_data[0] - totalDeposited
                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not ext_call.return_data[0] - totalDeposited:
                                    sub_bf4c8572 = 0
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14872 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15256 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _14872 + (32 * _15256) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14872 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15256:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22456 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22456] == mem[_22456]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22456] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24328 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24328] == bool(mem[_24328])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14874 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15258 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require _14874 + (32 * _15258) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14874 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15258:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22458 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22458] == mem[_22458]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22458] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24330 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24330] == bool(mem[_24330])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14873 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15257 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15257
                                            require _14873 + (32 * _15257) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14873 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15257:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22457 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22457] == mem[_22457]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22457] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24329 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24329] == bool(mem[_24329])
                                else:
                                    require ext_call.return_data[0] - totalDeposited
                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14869 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15253 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _14869 + (32 * _15253) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14869 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15253:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22453 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22453] == mem[_22453]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22453] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24325 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24325] == bool(mem[_24325])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14871 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15255 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require _14871 + (32 * _15255) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14871 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15255:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22455 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22455] == mem[_22455]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22455] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24327 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24327] == bool(mem[_24327])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14870 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15254 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15254
                                            require _14870 + (32 * _15254) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14870 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15254:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22454 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22454] == mem[_22454]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22454] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = 0
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, 0
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24326 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24326] == bool(mem[_24326])
                        else:
                            require ext_call.return_data[0] - totalDeposited
                            if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not ext_call.return_data[0] - totalDeposited:
                                if not ext_call.return_data[0] - totalDeposited:
                                    sub_bf4c8572 = 0
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14866 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15250 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _14866 + (32 * _15250) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14866 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15250:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22450 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22450] == mem[_22450]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22450] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24322 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24322] == bool(mem[_24322])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14868 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15252 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require _14868 + (32 * _15252) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14868 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15252:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22452 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22452] == mem[_22452]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22452] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24324 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24324] == bool(mem[_24324])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14867 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15251 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15251
                                            require _14867 + (32 * _15251) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14867 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15251:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22451 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22451] == mem[_22451]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22451] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24323 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24323] == bool(mem[_24323])
                                else:
                                    require ext_call.return_data[0] - totalDeposited
                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14863 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15247 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                        require _14863 + (32 * _15247) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14863 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15247:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22447 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22447] == mem[_22447]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22447] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24319 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24319] == bool(mem[_24319])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14865 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15249 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                            require _14865 + (32 * _15249) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14865 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15249:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22449 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22449] == mem[_22449]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22449] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24321 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24321] == bool(mem[_24321])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14864 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15248 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15248
                                            require _14864 + (32 * _15248) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14864 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15248:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22448 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22448] == mem[_22448]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22448] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24320 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24320] == bool(mem[_24320])
                            else:
                                require ext_call.return_data[0] - totalDeposited
                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not ext_call.return_data[0] - totalDeposited:
                                    sub_bf4c8572 = 0
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14860 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15244 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _14860 + (32 * _15244) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14860 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15244:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22444 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22444] == mem[_22444]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22444] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24316 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24316] == bool(mem[_24316])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14862 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15246 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require _14862 + (32 * _15246) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14862 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15246:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22446 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22446] == mem[_22446]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22446] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24318 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24318] == bool(mem[_24318])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14861 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15245 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15245
                                            require _14861 + (32 * _15245) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14861 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15245:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22445 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22445] == mem[_22445]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22445] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24317 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24317] == bool(mem[_24317])
                                else:
                                    require ext_call.return_data[0] - totalDeposited
                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                    mem[ceil32(return_data.size) + 132] = -1
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args lendingPoolAddress, -1
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                    require ext_code.size(lendingPoolAddress)
                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                    require ext_code.size(assetAddress)
                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args routerAddress, -1
                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if assetAddress == WAVAXAddress:
                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + 128
                                        t = (6 * ceil32(return_data.size)) + 388
                                        while idx < 2:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                        require ext_code.size(routerAddress)
                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                        require return_data.size >= 32
                                        _14857 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                        _15241 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                        require _14857 + (32 * _15241) + 32 <= return_data.size
                                        idx = 0
                                        s = (6 * ceil32(return_data.size)) + _14857 + 224
                                        t = (7 * ceil32(return_data.size)) + 224
                                        while idx < _15241:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(rewardTokenAddress)
                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22441 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_22441] == mem[_22441]
                                        if sub_0b4b41bc <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require sub_0b4b41bc
                                        sub_7f94bf16 = mem[_22441] / sub_0b4b41bc
                                        mem[mem[64] + 4] = treasuryAddress
                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        require ext_code.size(assetAddress)
                                        call assetAddress.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _24313 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_24313] == bool(mem[_24313])
                                    else:
                                        if rewardTokenAddress == WAVAXAddress:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 388
                                            while idx < 2:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                            require return_data.size >= 32
                                            _14859 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                            _15243 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                            require _14859 + (32 * _15243) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14859 + 224
                                            t = (7 * ceil32(return_data.size)) + 224
                                            while idx < _15243:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22443 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22443] == mem[_22443]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22443] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24315 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24315] == bool(mem[_24315])
                                        else:
                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + 128
                                            t = (6 * ceil32(return_data.size)) + 420
                                            while idx < 3:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                            require ext_code.size(routerAddress)
                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                            require return_data.size >= 32
                                            _14858 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                            _15242 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                            mem[(7 * ceil32(return_data.size)) + 224] = _15242
                                            require _14858 + (32 * _15242) + 32 <= return_data.size
                                            idx = 0
                                            s = (6 * ceil32(return_data.size)) + _14858 + 256
                                            t = (7 * ceil32(return_data.size)) + 256
                                            while idx < _15242:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(rewardTokenAddress)
                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _22442 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_22442] == mem[_22442]
                                            if sub_0b4b41bc <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require sub_0b4b41bc
                                            sub_7f94bf16 = mem[_22442] / sub_0b4b41bc
                                            mem[mem[64] + 4] = treasuryAddress
                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            require ext_code.size(assetAddress)
                                            call assetAddress.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _24314 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_24314] == bool(mem[_24314])
                    else:
                        require block.timestamp - lastRewardTimestamp
                        if block.timestamp - lastRewardTimestamp / block.timestamp - lastRewardTimestamp != 1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                        if not block.timestamp - lastRewardTimestamp:
                            if not block.timestamp - lastRewardTimestamp:
                                require ext_code.size(rewardWalletAddress)
                                call rewardWalletAddress.requestReward(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args 0
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if totalDeposited <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require totalDeposited
                                if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                    revert with 0, 'SafeMath: addition overflow'
                                sub_a9ac33dd += 0 / totalDeposited
                                lastRewardTimestamp = block.timestamp
                                mem[100] = this.address
                                require ext_code.size(sub_b8ab24bdAddress)
                                staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if not ext_call.return_data[0] - totalDeposited:
                                    if not ext_call.return_data[0] - totalDeposited:
                                        if not ext_call.return_data[0] - totalDeposited:
                                            sub_bf4c8572 = 0
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14854 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15238 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require _14854 + (32 * _15238) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14854 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15238:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22438 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22438] == mem[_22438]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22438] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = 0
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24310 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24310] == bool(mem[_24310])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14856 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15240 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14856 + (32 * _15240) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14856 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15240:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22440 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22440] == mem[_22440]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22440] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24312 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24312] == bool(mem[_24312])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14855 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15239 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15239
                                                    require _14855 + (32 * _15239) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14855 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15239:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22439 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22439] == mem[_22439]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22439] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24311 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24311] == bool(mem[_24311])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14851 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15235 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require _14851 + (32 * _15235) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14851 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15235:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22435 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22435] == mem[_22435]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22435] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = 0
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24307 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24307] == bool(mem[_24307])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14853 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15237 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14853 + (32 * _15237) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14853 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15237:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22437 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22437] == mem[_22437]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22437] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24309 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24309] == bool(mem[_24309])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14852 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15236 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15236
                                                    require _14852 + (32 * _15236) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14852 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15236:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22436 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22436] == mem[_22436]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22436] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24308 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24308] == bool(mem[_24308])
                                    else:
                                        require ext_call.return_data[0] - totalDeposited
                                        if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not ext_call.return_data[0] - totalDeposited:
                                            sub_bf4c8572 = 0
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14848 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15232 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require _14848 + (32 * _15232) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14848 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15232:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22432 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22432] == mem[_22432]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22432] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = 0
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24304 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24304] == bool(mem[_24304])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14850 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15234 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14850 + (32 * _15234) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14850 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15234:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22434 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22434] == mem[_22434]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22434] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24306 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24306] == bool(mem[_24306])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14849 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15233 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15233
                                                    require _14849 + (32 * _15233) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14849 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15233:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22433 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22433] == mem[_22433]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22433] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24305 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24305] == bool(mem[_24305])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14845 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15229 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require _14845 + (32 * _15229) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14845 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15229:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22429 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22429] == mem[_22429]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22429] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = 0
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, 0
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24301 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24301] == bool(mem[_24301])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14847 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15231 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14847 + (32 * _15231) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14847 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15231:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22431 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22431] == mem[_22431]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22431] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24303 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24303] == bool(mem[_24303])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14846 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15230 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15230
                                                    require _14846 + (32 * _15230) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14846 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15230:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22430 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22430] == mem[_22430]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22430] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24302 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24302] == bool(mem[_24302])
                                else:
                                    require ext_call.return_data[0] - totalDeposited
                                    if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not ext_call.return_data[0] - totalDeposited:
                                        if not ext_call.return_data[0] - totalDeposited:
                                            sub_bf4c8572 = 0
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14842 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15226 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require _14842 + (32 * _15226) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14842 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15226:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22426 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22426] == mem[_22426]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22426] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24298 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24298] == bool(mem[_24298])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14844 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15228 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14844 + (32 * _15228) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14844 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15228:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22428 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22428] == mem[_22428]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22428] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24300 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24300] == bool(mem[_24300])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14843 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15227 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15227
                                                    require _14843 + (32 * _15227) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14843 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15227:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22427 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22427] == mem[_22427]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22427] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24299 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24299] == bool(mem[_24299])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14839 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15223 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                require _14839 + (32 * _15223) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14839 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15223:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22423 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22423] == mem[_22423]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22423] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24295 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24295] == bool(mem[_24295])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14841 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15225 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14841 + (32 * _15225) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14841 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15225:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22425 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22425] == mem[_22425]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22425] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24297 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24297] == bool(mem[_24297])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14840 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15224 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15224
                                                    require _14840 + (32 * _15224) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14840 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15224:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22424 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22424] == mem[_22424]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22424] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24296 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24296] == bool(mem[_24296])
                                    else:
                                        require ext_call.return_data[0] - totalDeposited
                                        if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not ext_call.return_data[0] - totalDeposited:
                                            sub_bf4c8572 = 0
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14836 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15220 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require _14836 + (32 * _15220) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14836 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15220:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22420 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22420] == mem[_22420]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22420] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24292 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24292] == bool(mem[_24292])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14838 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15222 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14838 + (32 * _15222) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14838 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15222:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22422 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22422] == mem[_22422]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22422] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24294 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24294] == bool(mem[_24294])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14837 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15221 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15221
                                                    require _14837 + (32 * _15221) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14837 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15221:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22421 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22421] == mem[_22421]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22421] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24293 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24293] == bool(mem[_24293])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                            mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                            mem[ceil32(return_data.size) + 132] = -1
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args lendingPoolAddress, -1
                                            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                            mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                            mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                            require ext_code.size(lendingPoolAddress)
                                            call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                 gas gas_remaining wei
                                                args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                            mem[(4 * ceil32(return_data.size)) + 132] = -1
                                            require ext_code.size(assetAddress)
                                            call assetAddress.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args routerAddress, -1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if assetAddress == WAVAXAddress:
                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + 128
                                                t = (6 * ceil32(return_data.size)) + 388
                                                while idx < 2:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                require ext_code.size(routerAddress)
                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                require return_data.size >= 32
                                                _14833 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                _15217 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                require _14833 + (32 * _15217) + 32 <= return_data.size
                                                idx = 0
                                                s = (6 * ceil32(return_data.size)) + _14833 + 224
                                                t = (7 * ceil32(return_data.size)) + 224
                                                while idx < _15217:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(rewardTokenAddress)
                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _22417 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_22417] == mem[_22417]
                                                if sub_0b4b41bc <= 0:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require sub_0b4b41bc
                                                sub_7f94bf16 = mem[_22417] / sub_0b4b41bc
                                                mem[mem[64] + 4] = treasuryAddress
                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                require ext_code.size(assetAddress)
                                                call assetAddress.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _24289 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_24289] == bool(mem[_24289])
                                            else:
                                                if rewardTokenAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14835 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15219 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14835 + (32 * _15219) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14835 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15219:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22419 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22419] == mem[_22419]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22419] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24291 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24291] == bool(mem[_24291])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 420
                                                    while idx < 3:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 224
                                                    require return_data.size >= 32
                                                    _14834 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                    _15218 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                    mem[(7 * ceil32(return_data.size)) + 224] = _15218
                                                    require _14834 + (32 * _15218) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14834 + 256
                                                    t = (7 * ceil32(return_data.size)) + 256
                                                    while idx < _15218:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22418 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22418] == mem[_22418]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22418] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24290 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24290] == bool(mem[_24290])
                            else:
                                require block.timestamp - lastRewardTimestamp
                                if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if totalDeposited <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalDeposited
                                    if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                        revert with 0, 'SafeMath: addition overflow'
                                    sub_a9ac33dd += 0 / totalDeposited
                                    lastRewardTimestamp = block.timestamp
                                    mem[100] = this.address
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    if not ext_call.return_data[0] - totalDeposited:
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14830 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15214 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14830 + (32 * _15214) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14830 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15214:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22414 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22414] == mem[_22414]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22414] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24286 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24286] == bool(mem[_24286])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14832 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15216 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14832 + (32 * _15216) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14832 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15216:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22416 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22416] == mem[_22416]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22416] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24288 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24288] == bool(mem[_24288])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14831 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15215 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15215
                                                        require _14831 + (32 * _15215) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14831 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15215:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22415 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22415] == mem[_22415]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22415] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24287 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24287] == bool(mem[_24287])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14827 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15211 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14827 + (32 * _15211) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14827 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15211:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22411 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22411] == mem[_22411]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22411] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24283 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24283] == bool(mem[_24283])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14829 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15213 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14829 + (32 * _15213) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14829 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15213:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22413 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22413] == mem[_22413]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22413] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24285 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24285] == bool(mem[_24285])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14828 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15212 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15212
                                                        require _14828 + (32 * _15212) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14828 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15212:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22412 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22412] == mem[_22412]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22412] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24284 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24284] == bool(mem[_24284])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14824 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15208 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14824 + (32 * _15208) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14824 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15208:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22408 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22408] == mem[_22408]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22408] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24280 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24280] == bool(mem[_24280])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14826 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15210 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14826 + (32 * _15210) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14826 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15210:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22410 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22410] == mem[_22410]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22410] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24282 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24282] == bool(mem[_24282])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14825 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15209 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15209
                                                        require _14825 + (32 * _15209) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14825 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15209:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22409 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22409] == mem[_22409]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22409] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24281 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24281] == bool(mem[_24281])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14821 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15205 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14821 + (32 * _15205) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14821 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15205:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22405 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22405] == mem[_22405]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22405] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24277 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24277] == bool(mem[_24277])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14823 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15207 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14823 + (32 * _15207) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14823 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15207:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22407 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22407] == mem[_22407]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22407] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24279 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24279] == bool(mem[_24279])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14822 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15206 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15206
                                                        require _14822 + (32 * _15206) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14822 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15206:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22406 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22406] == mem[_22406]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22406] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24278 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24278] == bool(mem[_24278])
                                    else:
                                        require ext_call.return_data[0] - totalDeposited
                                        if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14818 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15202 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14818 + (32 * _15202) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14818 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15202:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22402 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22402] == mem[_22402]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22402] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24274 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24274] == bool(mem[_24274])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14820 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15204 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14820 + (32 * _15204) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14820 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15204:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22404 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22404] == mem[_22404]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22404] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24276 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24276] == bool(mem[_24276])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14819 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15203 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15203
                                                        require _14819 + (32 * _15203) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14819 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15203:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22403 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22403] == mem[_22403]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22403] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24275 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24275] == bool(mem[_24275])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14815 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15199 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14815 + (32 * _15199) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14815 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15199:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22399 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22399] == mem[_22399]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22399] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24271 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24271] == bool(mem[_24271])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14817 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15201 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14817 + (32 * _15201) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14817 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15201:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22401 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22401] == mem[_22401]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22401] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24273 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24273] == bool(mem[_24273])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14816 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15200 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15200
                                                        require _14816 + (32 * _15200) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14816 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15200:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22400 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22400] == mem[_22400]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22400] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24272 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24272] == bool(mem[_24272])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14812 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15196 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14812 + (32 * _15196) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14812 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15196:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22396 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22396] == mem[_22396]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22396] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24268 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24268] == bool(mem[_24268])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14814 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15198 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14814 + (32 * _15198) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14814 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15198:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22398 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22398] == mem[_22398]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22398] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24270 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24270] == bool(mem[_24270])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14813 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15197 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15197
                                                        require _14813 + (32 * _15197) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14813 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15197:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22397 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22397] == mem[_22397]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22397] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24269 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24269] == bool(mem[_24269])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14809 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15193 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14809 + (32 * _15193) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14809 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15193:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22393 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22393] == mem[_22393]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22393] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24265 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24265] == bool(mem[_24265])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14811 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15195 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14811 + (32 * _15195) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14811 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15195:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22395 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22395] == mem[_22395]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22395] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24267 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24267] == bool(mem[_24267])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14810 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15194 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15194
                                                        require _14810 + (32 * _15194) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14810 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15194:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22394 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22394] == mem[_22394]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22394] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24266 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24266] == bool(mem[_24266])
                                else:
                                    require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if totalDeposited <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalDeposited
                                    if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                        revert with 0, 'SafeMath: addition overflow'
                                    sub_a9ac33dd += 0 / totalDeposited
                                    lastRewardTimestamp = block.timestamp
                                    mem[100] = this.address
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    if not ext_call.return_data[0] - totalDeposited:
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14806 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15190 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14806 + (32 * _15190) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14806 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15190:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22390 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22390] == mem[_22390]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22390] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24262 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24262] == bool(mem[_24262])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14808 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15192 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14808 + (32 * _15192) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14808 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15192:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22392 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22392] == mem[_22392]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22392] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24264 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24264] == bool(mem[_24264])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14807 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15191 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15191
                                                        require _14807 + (32 * _15191) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14807 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15191:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22391 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22391] == mem[_22391]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22391] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24263 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24263] == bool(mem[_24263])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14803 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15187 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14803 + (32 * _15187) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14803 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15187:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22387 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22387] == mem[_22387]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22387] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24259 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24259] == bool(mem[_24259])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14805 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15189 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14805 + (32 * _15189) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14805 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15189:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22389 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22389] == mem[_22389]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22389] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24261 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24261] == bool(mem[_24261])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14804 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15188 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15188
                                                        require _14804 + (32 * _15188) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14804 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15188:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22388 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22388] == mem[_22388]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22388] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24260 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24260] == bool(mem[_24260])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14800 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15184 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14800 + (32 * _15184) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14800 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15184:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22384 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22384] == mem[_22384]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22384] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24256 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24256] == bool(mem[_24256])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14802 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15186 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14802 + (32 * _15186) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14802 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15186:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22386 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22386] == mem[_22386]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22386] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24258 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24258] == bool(mem[_24258])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14801 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15185 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15185
                                                        require _14801 + (32 * _15185) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14801 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15185:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22385 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22385] == mem[_22385]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22385] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24257 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24257] == bool(mem[_24257])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14797 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15181 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14797 + (32 * _15181) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14797 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15181:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22381 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22381] == mem[_22381]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22381] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24253 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24253] == bool(mem[_24253])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14799 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15183 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14799 + (32 * _15183) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14799 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15183:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22383 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22383] == mem[_22383]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22383] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24255 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24255] == bool(mem[_24255])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14798 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15182 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15182
                                                        require _14798 + (32 * _15182) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14798 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15182:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22382 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22382] == mem[_22382]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22382] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24254 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24254] == bool(mem[_24254])
                                    else:
                                        require ext_call.return_data[0] - totalDeposited
                                        if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14794 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15178 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14794 + (32 * _15178) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14794 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15178:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22378 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22378] == mem[_22378]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22378] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24250 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24250] == bool(mem[_24250])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14796 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15180 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14796 + (32 * _15180) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14796 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15180:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22380 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22380] == mem[_22380]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22380] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24252 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24252] == bool(mem[_24252])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14795 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15179 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15179
                                                        require _14795 + (32 * _15179) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14795 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15179:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22379 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22379] == mem[_22379]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22379] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24251 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24251] == bool(mem[_24251])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14791 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15175 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14791 + (32 * _15175) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14791 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15175:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22375 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22375] == mem[_22375]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22375] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24247 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24247] == bool(mem[_24247])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14793 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15177 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14793 + (32 * _15177) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14793 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15177:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22377 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22377] == mem[_22377]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22377] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24249 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24249] == bool(mem[_24249])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14792 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15176 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15176
                                                        require _14792 + (32 * _15176) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14792 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15176:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22376 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22376] == mem[_22376]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22376] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24248 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24248] == bool(mem[_24248])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14788 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15172 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14788 + (32 * _15172) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14788 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15172:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22372 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22372] == mem[_22372]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22372] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24244 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24244] == bool(mem[_24244])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14790 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15174 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14790 + (32 * _15174) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14790 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15174:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22374 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22374] == mem[_22374]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22374] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24246 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24246] == bool(mem[_24246])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14789 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15173 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15173
                                                        require _14789 + (32 * _15173) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14789 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15173:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22373 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22373] == mem[_22373]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22373] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24245 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24245] == bool(mem[_24245])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14785 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15169 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14785 + (32 * _15169) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14785 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15169:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22369 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22369] == mem[_22369]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22369] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24241 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24241] == bool(mem[_24241])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14787 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15171 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14787 + (32 * _15171) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14787 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15171:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22371 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22371] == mem[_22371]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22371] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24243 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24243] == bool(mem[_24243])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14786 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15170 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15170
                                                        require _14786 + (32 * _15170) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14786 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15170:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22370 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22370] == mem[_22370]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22370] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24242 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24242] == bool(mem[_24242])
                        else:
                            require block.timestamp - lastRewardTimestamp
                            if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d + sub_7f94bf16:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                            if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                if not block.timestamp - lastRewardTimestamp:
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if totalDeposited <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require totalDeposited
                                    if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                        revert with 0, 'SafeMath: addition overflow'
                                    sub_a9ac33dd += 0 / totalDeposited
                                    lastRewardTimestamp = block.timestamp
                                    mem[100] = this.address
                                    require ext_code.size(sub_b8ab24bdAddress)
                                    staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    if not ext_call.return_data[0] - totalDeposited:
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14782 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15166 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14782 + (32 * _15166) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14782 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15166:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22366 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22366] == mem[_22366]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22366] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24238 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24238] == bool(mem[_24238])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14784 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15168 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14784 + (32 * _15168) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14784 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15168:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22368 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22368] == mem[_22368]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22368] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24240 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24240] == bool(mem[_24240])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14783 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15167 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15167
                                                        require _14783 + (32 * _15167) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14783 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15167:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22367 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22367] == mem[_22367]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22367] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24239 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24239] == bool(mem[_24239])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14779 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15163 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14779 + (32 * _15163) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14779 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15163:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22363 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22363] == mem[_22363]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22363] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24235 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24235] == bool(mem[_24235])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14781 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15165 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14781 + (32 * _15165) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14781 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15165:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22365 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22365] == mem[_22365]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22365] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24237 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24237] == bool(mem[_24237])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14780 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15164 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15164
                                                        require _14780 + (32 * _15164) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14780 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15164:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22364 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22364] == mem[_22364]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22364] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24236 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24236] == bool(mem[_24236])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14776 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15160 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14776 + (32 * _15160) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14776 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15160:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22360 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22360] == mem[_22360]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22360] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24232 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24232] == bool(mem[_24232])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14778 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15162 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14778 + (32 * _15162) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14778 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15162:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22362 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22362] == mem[_22362]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22362] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24234 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24234] == bool(mem[_24234])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14777 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15161 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15161
                                                        require _14777 + (32 * _15161) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14777 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15161:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22361 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22361] == mem[_22361]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22361] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24233 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24233] == bool(mem[_24233])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14773 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15157 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14773 + (32 * _15157) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14773 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15157:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22357 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22357] == mem[_22357]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22357] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = 0
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, 0
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24229 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24229] == bool(mem[_24229])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14775 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15159 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14775 + (32 * _15159) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14775 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15159:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22359 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22359] == mem[_22359]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22359] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24231 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24231] == bool(mem[_24231])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14774 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15158 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15158
                                                        require _14774 + (32 * _15158) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14774 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15158:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22358 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22358] == mem[_22358]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22358] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24230 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24230] == bool(mem[_24230])
                                    else:
                                        require ext_call.return_data[0] - totalDeposited
                                        if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14770 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15154 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14770 + (32 * _15154) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14770 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15154:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22354 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22354] == mem[_22354]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22354] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24226 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24226] == bool(mem[_24226])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14772 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15156 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14772 + (32 * _15156) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14772 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15156:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22356 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22356] == mem[_22356]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22356] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24228 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24228] == bool(mem[_24228])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14771 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15155 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15155
                                                        require _14771 + (32 * _15155) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14771 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15155:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22355 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22355] == mem[_22355]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22355] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24227 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24227] == bool(mem[_24227])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14767 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15151 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                    require _14767 + (32 * _15151) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14767 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15151:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22351 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22351] == mem[_22351]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22351] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24223 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24223] == bool(mem[_24223])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14769 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15153 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14769 + (32 * _15153) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14769 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15153:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22353 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22353] == mem[_22353]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22353] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24225 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24225] == bool(mem[_24225])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14768 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15152 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15152
                                                        require _14768 + (32 * _15152) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14768 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15152:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22352 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22352] == mem[_22352]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22352] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24224 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24224] == bool(mem[_24224])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                sub_bf4c8572 = 0
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14764 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15148 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14764 + (32 * _15148) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14764 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15148:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22348 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22348] == mem[_22348]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22348] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24220 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24220] == bool(mem[_24220])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14766 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15150 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14766 + (32 * _15150) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14766 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15150:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22350 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22350] == mem[_22350]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22350] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24222 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24222] == bool(mem[_24222])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14765 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15149 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15149
                                                        require _14765 + (32 * _15149) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14765 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15149:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22349 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22349] == mem[_22349]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22349] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24221 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24221] == bool(mem[_24221])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                mem[ceil32(return_data.size) + 132] = -1
                                                require ext_code.size(sub_b8ab24bdAddress)
                                                call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args lendingPoolAddress, -1
                                                mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                require ext_code.size(lendingPoolAddress)
                                                call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                     gas gas_remaining wei
                                                    args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                require ext_code.size(assetAddress)
                                                call assetAddress.approve(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args routerAddress, -1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if assetAddress == WAVAXAddress:
                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                    mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                    mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                    mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                    mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                    mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                    mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                    mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + 128
                                                    t = (6 * ceil32(return_data.size)) + 388
                                                    while idx < 2:
                                                        mem[t] = mem[s + 12 len 20]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                    mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                    require ext_code.size(routerAddress)
                                                    call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 192
                                                    require return_data.size >= 32
                                                    _14761 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                    require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                    require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                    _15145 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                    require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                    mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                    mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                    require _14761 + (32 * _15145) + 32 <= return_data.size
                                                    idx = 0
                                                    s = (6 * ceil32(return_data.size)) + _14761 + 224
                                                    t = (7 * ceil32(return_data.size)) + 224
                                                    while idx < _15145:
                                                        require mem[s] == mem[s]
                                                        mem[t] = mem[s]
                                                        idx = idx + 1
                                                        s = s + 32
                                                        t = t + 32
                                                        continue 
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(rewardTokenAddress)
                                                    staticcall rewardTokenAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address)
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _22345 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_22345] == mem[_22345]
                                                    if sub_0b4b41bc <= 0:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require sub_0b4b41bc
                                                    sub_7f94bf16 = mem[_22345] / sub_0b4b41bc
                                                    mem[mem[64] + 4] = treasuryAddress
                                                    mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _24217 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_24217] == bool(mem[_24217])
                                                else:
                                                    if rewardTokenAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14763 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15147 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14763 + (32 * _15147) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14763 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15147:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22347 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22347] == mem[_22347]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22347] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24219 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24219] == bool(mem[_24219])
                                                    else:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 420
                                                        while idx < 3:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 224
                                                        require return_data.size >= 32
                                                        _14762 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                        _15146 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                        mem[(7 * ceil32(return_data.size)) + 224] = _15146
                                                        require _14762 + (32 * _15146) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14762 + 256
                                                        t = (7 * ceil32(return_data.size)) + 256
                                                        while idx < _15146:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22346 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22346] == mem[_22346]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22346] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24218 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24218] == bool(mem[_24218])
                                else:
                                    require block.timestamp - lastRewardTimestamp
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if totalDeposited <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalDeposited
                                        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                            revert with 0, 'SafeMath: addition overflow'
                                        sub_a9ac33dd += 0 / totalDeposited
                                        lastRewardTimestamp = block.timestamp
                                        mem[100] = this.address
                                        require ext_code.size(sub_b8ab24bdAddress)
                                        staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14758 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15142 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14758 + (32 * _15142) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14758 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15142:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22342 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22342] == mem[_22342]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22342] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24214 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24214] == bool(mem[_24214])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14760 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15144 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14760 + (32 * _15144) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14760 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15144:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22344 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22344] == mem[_22344]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22344] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24216 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24216] == bool(mem[_24216])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14759 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15143 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15143
                                                            require _14759 + (32 * _15143) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14759 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15143:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22343 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22343] == mem[_22343]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22343] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24215 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24215] == bool(mem[_24215])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14755 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15139 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14755 + (32 * _15139) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14755 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15139:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22339 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22339] == mem[_22339]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22339] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24211 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24211] == bool(mem[_24211])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14757 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15141 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14757 + (32 * _15141) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14757 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15141:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22341 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22341] == mem[_22341]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22341] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24213 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24213] == bool(mem[_24213])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14756 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15140 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15140
                                                            require _14756 + (32 * _15140) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14756 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15140:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22340 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22340] == mem[_22340]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22340] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24212 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24212] == bool(mem[_24212])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14752 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15136 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14752 + (32 * _15136) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14752 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15136:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22336 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22336] == mem[_22336]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22336] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24208 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24208] == bool(mem[_24208])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14754 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15138 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14754 + (32 * _15138) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14754 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15138:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22338 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22338] == mem[_22338]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22338] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24210 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24210] == bool(mem[_24210])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14753 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15137 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15137
                                                            require _14753 + (32 * _15137) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14753 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15137:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22337 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22337] == mem[_22337]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22337] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24209 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24209] == bool(mem[_24209])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14749 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15133 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14749 + (32 * _15133) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14749 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15133:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22333 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22333] == mem[_22333]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22333] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24205 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24205] == bool(mem[_24205])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14751 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15135 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14751 + (32 * _15135) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14751 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15135:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22335 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22335] == mem[_22335]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22335] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24207 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24207] == bool(mem[_24207])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14750 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15134 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15134
                                                            require _14750 + (32 * _15134) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14750 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15134:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22334 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22334] == mem[_22334]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22334] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24206 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24206] == bool(mem[_24206])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14746 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15130 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14746 + (32 * _15130) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14746 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15130:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22330 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22330] == mem[_22330]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22330] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24202 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24202] == bool(mem[_24202])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14748 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15132 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14748 + (32 * _15132) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14748 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15132:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22332 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22332] == mem[_22332]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22332] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24204 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24204] == bool(mem[_24204])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14747 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15131 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15131
                                                            require _14747 + (32 * _15131) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14747 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15131:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22331 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22331] == mem[_22331]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22331] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24203 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24203] == bool(mem[_24203])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14743 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15127 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14743 + (32 * _15127) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14743 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15127:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22327 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22327] == mem[_22327]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22327] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24199 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24199] == bool(mem[_24199])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14745 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15129 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14745 + (32 * _15129) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14745 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15129:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22329 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22329] == mem[_22329]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22329] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24201 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24201] == bool(mem[_24201])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14744 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15128 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15128
                                                            require _14744 + (32 * _15128) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14744 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15128:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22328 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22328] == mem[_22328]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22328] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24200 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24200] == bool(mem[_24200])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14740 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15124 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14740 + (32 * _15124) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14740 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15124:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22324 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22324] == mem[_22324]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22324] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24196 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24196] == bool(mem[_24196])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14742 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15126 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14742 + (32 * _15126) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14742 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15126:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22326 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22326] == mem[_22326]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22326] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24198 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24198] == bool(mem[_24198])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14741 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15125 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15125
                                                            require _14741 + (32 * _15125) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14741 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15125:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22325 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22325] == mem[_22325]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22325] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24197 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24197] == bool(mem[_24197])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14737 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15121 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14737 + (32 * _15121) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14737 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15121:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22321 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22321] == mem[_22321]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22321] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24193 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24193] == bool(mem[_24193])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14739 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15123 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14739 + (32 * _15123) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14739 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15123:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22323 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22323] == mem[_22323]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22323] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24195 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24195] == bool(mem[_24195])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14738 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15122 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15122
                                                            require _14738 + (32 * _15122) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14738 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15122:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22322 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22322] == mem[_22322]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22322] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24194 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24194] == bool(mem[_24194])
                                    else:
                                        require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                        if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if totalDeposited <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalDeposited
                                        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                            revert with 0, 'SafeMath: addition overflow'
                                        sub_a9ac33dd += 0 / totalDeposited
                                        lastRewardTimestamp = block.timestamp
                                        mem[100] = this.address
                                        require ext_code.size(sub_b8ab24bdAddress)
                                        staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14734 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15118 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14734 + (32 * _15118) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14734 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15118:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22318 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22318] == mem[_22318]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22318] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24190 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24190] == bool(mem[_24190])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14736 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15120 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14736 + (32 * _15120) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14736 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15120:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22320 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22320] == mem[_22320]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22320] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24192 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24192] == bool(mem[_24192])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14735 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15119 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15119
                                                            require _14735 + (32 * _15119) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14735 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15119:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22319 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22319] == mem[_22319]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22319] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24191 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24191] == bool(mem[_24191])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14731 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15115 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14731 + (32 * _15115) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14731 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15115:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22315 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22315] == mem[_22315]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22315] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24187 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24187] == bool(mem[_24187])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14733 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15117 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14733 + (32 * _15117) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14733 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15117:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22317 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22317] == mem[_22317]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22317] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24189 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24189] == bool(mem[_24189])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14732 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15116 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15116
                                                            require _14732 + (32 * _15116) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14732 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15116:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22316 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22316] == mem[_22316]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22316] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24188 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24188] == bool(mem[_24188])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14728 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15112 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14728 + (32 * _15112) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14728 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15112:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22312 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22312] == mem[_22312]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22312] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24184 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24184] == bool(mem[_24184])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14730 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15114 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14730 + (32 * _15114) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14730 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15114:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22314 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22314] == mem[_22314]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22314] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24186 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24186] == bool(mem[_24186])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14729 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15113 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15113
                                                            require _14729 + (32 * _15113) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14729 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15113:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22313 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22313] == mem[_22313]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22313] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24185 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24185] == bool(mem[_24185])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14725 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15109 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14725 + (32 * _15109) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14725 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15109:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22309 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22309] == mem[_22309]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22309] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24181 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24181] == bool(mem[_24181])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14727 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15111 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14727 + (32 * _15111) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14727 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15111:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22311 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22311] == mem[_22311]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22311] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24183 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24183] == bool(mem[_24183])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14726 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15110 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15110
                                                            require _14726 + (32 * _15110) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14726 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15110:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22310 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22310] == mem[_22310]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22310] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24182 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24182] == bool(mem[_24182])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14722 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15106 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14722 + (32 * _15106) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14722 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15106:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22306 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22306] == mem[_22306]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22306] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24178 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24178] == bool(mem[_24178])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14724 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15108 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14724 + (32 * _15108) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14724 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15108:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22308 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22308] == mem[_22308]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22308] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24180 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24180] == bool(mem[_24180])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14723 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15107 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15107
                                                            require _14723 + (32 * _15107) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14723 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15107:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22307 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22307] == mem[_22307]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22307] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24179 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24179] == bool(mem[_24179])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14719 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15103 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14719 + (32 * _15103) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14719 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15103:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22303 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22303] == mem[_22303]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22303] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24175 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24175] == bool(mem[_24175])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14721 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15105 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14721 + (32 * _15105) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14721 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15105:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22305 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22305] == mem[_22305]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22305] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24177 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24177] == bool(mem[_24177])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14720 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15104 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15104
                                                            require _14720 + (32 * _15104) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14720 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15104:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22304 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22304] == mem[_22304]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22304] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24176 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24176] == bool(mem[_24176])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14716 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15100 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14716 + (32 * _15100) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14716 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15100:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22300 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22300] == mem[_22300]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22300] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24172 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24172] == bool(mem[_24172])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14718 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15102 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14718 + (32 * _15102) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14718 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15102:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22302 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22302] == mem[_22302]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22302] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24174 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24174] == bool(mem[_24174])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14717 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15101 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15101
                                                            require _14717 + (32 * _15101) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14717 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15101:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22301 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22301] == mem[_22301]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22301] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24173 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24173] == bool(mem[_24173])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14713 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15097 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14713 + (32 * _15097) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14713 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15097:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22297 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22297] == mem[_22297]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22297] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24169 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24169] == bool(mem[_24169])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14715 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15099 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14715 + (32 * _15099) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14715 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15099:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22299 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22299] == mem[_22299]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22299] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24171 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24171] == bool(mem[_24171])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14714 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15098 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15098
                                                            require _14714 + (32 * _15098) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14714 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15098:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22298 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22298] == mem[_22298]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22298] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24170 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24170] == bool(mem[_24170])
                            else:
                                require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                if (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                if not block.timestamp - lastRewardTimestamp:
                                    require ext_code.size(rewardWalletAddress)
                                    call rewardWalletAddress.requestReward(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                        if totalDeposited <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalDeposited
                                        if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                            revert with 0, 'SafeMath: addition overflow'
                                        sub_a9ac33dd += 0 / totalDeposited
                                        lastRewardTimestamp = block.timestamp
                                        mem[100] = this.address
                                        require ext_code.size(sub_b8ab24bdAddress)
                                        staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14710 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15094 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14710 + (32 * _15094) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14710 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15094:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22294 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22294] == mem[_22294]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22294] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24166 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24166] == bool(mem[_24166])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14712 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15096 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14712 + (32 * _15096) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14712 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15096:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22296 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22296] == mem[_22296]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22296] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24168 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24168] == bool(mem[_24168])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14711 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15095 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15095
                                                            require _14711 + (32 * _15095) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14711 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15095:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22295 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22295] == mem[_22295]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22295] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24167 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24167] == bool(mem[_24167])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14707 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15091 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14707 + (32 * _15091) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14707 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15091:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22291 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22291] == mem[_22291]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22291] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24163 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24163] == bool(mem[_24163])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14709 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15093 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14709 + (32 * _15093) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14709 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15093:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22293 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22293] == mem[_22293]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22293] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24165 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24165] == bool(mem[_24165])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14708 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15092 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15092
                                                            require _14708 + (32 * _15092) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14708 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15092:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22292 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22292] == mem[_22292]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22292] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24164 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24164] == bool(mem[_24164])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14704 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15088 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14704 + (32 * _15088) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14704 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15088:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22288 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22288] == mem[_22288]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22288] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24160 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24160] == bool(mem[_24160])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14706 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15090 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14706 + (32 * _15090) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14706 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15090:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22290 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22290] == mem[_22290]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22290] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24162 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24162] == bool(mem[_24162])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14705 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15089 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15089
                                                            require _14705 + (32 * _15089) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14705 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15089:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22289 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22289] == mem[_22289]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22289] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24161 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24161] == bool(mem[_24161])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14701 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15085 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14701 + (32 * _15085) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14701 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15085:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22285 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22285] == mem[_22285]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22285] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24157 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24157] == bool(mem[_24157])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14703 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15087 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14703 + (32 * _15087) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14703 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15087:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22287 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22287] == mem[_22287]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22287] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24159 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24159] == bool(mem[_24159])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14702 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15086 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15086
                                                            require _14702 + (32 * _15086) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14702 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15086:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22286 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22286] == mem[_22286]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22286] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24158 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24158] == bool(mem[_24158])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14698 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15082 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14698 + (32 * _15082) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14698 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15082:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22282 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22282] == mem[_22282]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22282] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24154 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24154] == bool(mem[_24154])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14700 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15084 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14700 + (32 * _15084) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14700 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15084:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22284 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22284] == mem[_22284]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22284] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24156 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24156] == bool(mem[_24156])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14699 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15083 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15083
                                                            require _14699 + (32 * _15083) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14699 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15083:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22283 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22283] == mem[_22283]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22283] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24155 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24155] == bool(mem[_24155])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14695 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15079 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14695 + (32 * _15079) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14695 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15079:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22279 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22279] == mem[_22279]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22279] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24151 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24151] == bool(mem[_24151])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14697 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15081 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14697 + (32 * _15081) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14697 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15081:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22281 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22281] == mem[_22281]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22281] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24153 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24153] == bool(mem[_24153])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14696 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15080 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15080
                                                            require _14696 + (32 * _15080) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14696 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15080:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22280 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22280] == mem[_22280]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22280] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24152 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24152] == bool(mem[_24152])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14692 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15076 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14692 + (32 * _15076) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14692 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15076:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22276 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22276] == mem[_22276]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22276] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24148 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24148] == bool(mem[_24148])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14694 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15078 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14694 + (32 * _15078) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14694 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15078:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22278 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22278] == mem[_22278]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22278] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24150 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24150] == bool(mem[_24150])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14693 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15077 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15077
                                                            require _14693 + (32 * _15077) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14693 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15077:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22277 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22277] == mem[_22277]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22277] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24149 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24149] == bool(mem[_24149])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14689 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15073 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14689 + (32 * _15073) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14689 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15073:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22273 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22273] == mem[_22273]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22273] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24145 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24145] == bool(mem[_24145])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14691 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15075 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14691 + (32 * _15075) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14691 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15075:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22275 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22275] == mem[_22275]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22275] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24147 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24147] == bool(mem[_24147])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14690 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15074 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15074
                                                            require _14690 + (32 * _15074) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14690 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15074:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22274 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22274] == mem[_22274]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22274] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24146 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24146] == bool(mem[_24146])
                                    else:
                                        require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                        if (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 10^12:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                        if totalDeposited <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require totalDeposited
                                        if sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited) < sub_a9ac33dd:
                                            revert with 0, 'SafeMath: addition overflow'
                                        sub_a9ac33dd += (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited
                                        lastRewardTimestamp = block.timestamp
                                        mem[100] = this.address
                                        require ext_code.size(sub_b8ab24bdAddress)
                                        staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if not ext_call.return_data[0] - totalDeposited:
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14686 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15070 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14686 + (32 * _15070) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14686 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15070:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22270 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22270] == mem[_22270]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22270] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24142 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24142] == bool(mem[_24142])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14688 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15072 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14688 + (32 * _15072) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14688 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15072:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22272 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22272] == mem[_22272]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22272] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24144 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24144] == bool(mem[_24144])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14687 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15071 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15071
                                                            require _14687 + (32 * _15071) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14687 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15071:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22271 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22271] == mem[_22271]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22271] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24143 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24143] == bool(mem[_24143])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14683 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15067 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14683 + (32 * _15067) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14683 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15067:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22267 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22267] == mem[_22267]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22267] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24139 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24139] == bool(mem[_24139])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14685 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15069 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14685 + (32 * _15069) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14685 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15069:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22269 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22269] == mem[_22269]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22269] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24141 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24141] == bool(mem[_24141])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14684 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15068 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15068
                                                            require _14684 + (32 * _15068) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14684 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15068:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22268 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22268] == mem[_22268]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22268] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24140 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24140] == bool(mem[_24140])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14680 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15064 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14680 + (32 * _15064) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14680 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15064:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22264 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22264] == mem[_22264]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22264] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24136 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24136] == bool(mem[_24136])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14682 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15066 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14682 + (32 * _15066) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14682 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15066:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22266 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22266] == mem[_22266]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22266] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24138 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24138] == bool(mem[_24138])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14681 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15065 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15065
                                                            require _14681 + (32 * _15065) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14681 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15065:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22265 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22265] == mem[_22265]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22265] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24137 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24137] == bool(mem[_24137])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14677 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15061 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14677 + (32 * _15061) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14677 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15061:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22261 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22261] == mem[_22261]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22261] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = 0
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, 0
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24133 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24133] == bool(mem[_24133])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14679 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15063 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14679 + (32 * _15063) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14679 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15063:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22263 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22263] == mem[_22263]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22263] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24135 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24135] == bool(mem[_24135])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14678 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15062 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15062
                                                            require _14678 + (32 * _15062) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14678 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15062:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22262 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22262] == mem[_22262]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22262] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24134 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24134] == bool(mem[_24134])
                                        else:
                                            require ext_call.return_data[0] - totalDeposited
                                            if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14674 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15058 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14674 + (32 * _15058) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14674 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15058:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22258 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22258] == mem[_22258]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22258] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24130 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24130] == bool(mem[_24130])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14676 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15060 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14676 + (32 * _15060) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14676 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15060:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22260 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22260] == mem[_22260]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22260] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24132 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24132] == bool(mem[_24132])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14675 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15059 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15059
                                                            require _14675 + (32 * _15059) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14675 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15059:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22259 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22259] == mem[_22259]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22259] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24131 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24131] == bool(mem[_24131])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14671 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15055 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                        require _14671 + (32 * _15055) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14671 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15055:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22255 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22255] == mem[_22255]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22255] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24127 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24127] == bool(mem[_24127])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14673 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15057 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14673 + (32 * _15057) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14673 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15057:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22257 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22257] == mem[_22257]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22257] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24129 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24129] == bool(mem[_24129])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14672 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15056 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15056
                                                            require _14672 + (32 * _15056) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14672 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15056:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22256 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22256] == mem[_22256]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22256] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24128 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24128] == bool(mem[_24128])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    sub_bf4c8572 = 0
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14668 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15052 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14668 + (32 * _15052) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14668 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15052:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22252 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22252] == mem[_22252]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22252] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24124 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24124] == bool(mem[_24124])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14670 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15054 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14670 + (32 * _15054) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14670 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15054:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22254 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22254] == mem[_22254]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22254] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24126 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24126] == bool(mem[_24126])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14669 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15053 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15053
                                                            require _14669 + (32 * _15053) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14669 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15053:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22253 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22253] == mem[_22253]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22253] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24125 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24125] == bool(mem[_24125])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                    mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                    mem[ceil32(return_data.size) + 132] = -1
                                                    require ext_code.size(sub_b8ab24bdAddress)
                                                    call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args lendingPoolAddress, -1
                                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                    mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                    mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                    require ext_code.size(lendingPoolAddress)
                                                    call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                         gas gas_remaining wei
                                                        args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                                    mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                    mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                    require ext_code.size(assetAddress)
                                                    call assetAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args routerAddress, -1
                                                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if assetAddress == WAVAXAddress:
                                                        mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                        mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                        mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                        mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                        mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                        mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                        mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                        mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + 128
                                                        t = (6 * ceil32(return_data.size)) + 388
                                                        while idx < 2:
                                                            mem[t] = mem[s + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                        mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                        require ext_code.size(routerAddress)
                                                        call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = (7 * ceil32(return_data.size)) + 192
                                                        require return_data.size >= 32
                                                        _14665 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                        require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                        require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                        _15049 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                        require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                        mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                        mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                        require _14665 + (32 * _15049) + 32 <= return_data.size
                                                        idx = 0
                                                        s = (6 * ceil32(return_data.size)) + _14665 + 224
                                                        t = (7 * ceil32(return_data.size)) + 224
                                                        while idx < _15049:
                                                            require mem[s] == mem[s]
                                                            mem[t] = mem[s]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(rewardTokenAddress)
                                                        staticcall rewardTokenAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address)
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _22249 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_22249] == mem[_22249]
                                                        if sub_0b4b41bc <= 0:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require sub_0b4b41bc
                                                        sub_7f94bf16 = mem[_22249] / sub_0b4b41bc
                                                        mem[mem[64] + 4] = treasuryAddress
                                                        mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _24121 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_24121] == bool(mem[_24121])
                                                    else:
                                                        if rewardTokenAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14667 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15051 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14667 + (32 * _15051) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14667 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15051:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22251 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22251] == mem[_22251]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22251] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24123 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24123] == bool(mem[_24123])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 420
                                                            while idx < 3:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 224
                                                            require return_data.size >= 32
                                                            _14666 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                            _15050 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                            mem[(7 * ceil32(return_data.size)) + 224] = _15050
                                                            require _14666 + (32 * _15050) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14666 + 256
                                                            t = (7 * ceil32(return_data.size)) + 256
                                                            while idx < _15050:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22250 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22250] == mem[_22250]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22250] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24122 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24122] == bool(mem[_24122])
                                else:
                                    require block.timestamp - lastRewardTimestamp
                                    if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / block.timestamp - lastRewardTimestamp != sub_f12c8e0d:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                    if not (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d):
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                            if totalDeposited <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require totalDeposited
                                            if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                                revert with 0, 'SafeMath: addition overflow'
                                            sub_a9ac33dd += 0 / totalDeposited
                                            lastRewardTimestamp = block.timestamp
                                            mem[100] = this.address
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14662 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15046 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14662 + (32 * _15046) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14662 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15046:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22246 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22246] == mem[_22246]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22246] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24118 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24118] == bool(mem[_24118])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14664 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15048 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14664 + (32 * _15048) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14664 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15048:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22248 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22248] == mem[_22248]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22248] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24120 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24120] == bool(mem[_24120])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14663 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15047 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15047
                                                                require _14663 + (32 * _15047) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14663 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15047:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22247 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22247] == mem[_22247]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22247] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24119 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24119] == bool(mem[_24119])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14659 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15043 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14659 + (32 * _15043) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14659 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15043:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22243 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22243] == mem[_22243]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22243] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24115 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24115] == bool(mem[_24115])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14661 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15045 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14661 + (32 * _15045) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14661 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15045:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22245 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22245] == mem[_22245]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22245] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24117 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24117] == bool(mem[_24117])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14660 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15044 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15044
                                                                require _14660 + (32 * _15044) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14660 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15044:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22244 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22244] == mem[_22244]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22244] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24116 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24116] == bool(mem[_24116])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14656 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15040 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14656 + (32 * _15040) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14656 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15040:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22240 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22240] == mem[_22240]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22240] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24112 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24112] == bool(mem[_24112])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14658 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15042 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14658 + (32 * _15042) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14658 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15042:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22242 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22242] == mem[_22242]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22242] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24114 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24114] == bool(mem[_24114])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14657 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15041 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15041
                                                                require _14657 + (32 * _15041) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14657 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15041:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22241 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22241] == mem[_22241]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22241] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24113 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24113] == bool(mem[_24113])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14653 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15037 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14653 + (32 * _15037) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14653 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15037:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22237 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22237] == mem[_22237]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22237] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24109 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24109] == bool(mem[_24109])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14655 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15039 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14655 + (32 * _15039) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14655 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15039:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22239 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22239] == mem[_22239]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22239] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24111 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24111] == bool(mem[_24111])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14654 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15038 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15038
                                                                require _14654 + (32 * _15038) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14654 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15038:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22238 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22238] == mem[_22238]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22238] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24110 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24110] == bool(mem[_24110])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14650 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15034 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14650 + (32 * _15034) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14650 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15034:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22234 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22234] == mem[_22234]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22234] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24106 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24106] == bool(mem[_24106])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14652 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15036 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14652 + (32 * _15036) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14652 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15036:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22236 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22236] == mem[_22236]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22236] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24108 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24108] == bool(mem[_24108])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14651 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15035 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15035
                                                                require _14651 + (32 * _15035) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14651 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15035:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22235 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22235] == mem[_22235]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22235] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24107 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24107] == bool(mem[_24107])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14647 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15031 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14647 + (32 * _15031) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14647 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15031:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22231 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22231] == mem[_22231]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22231] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24103 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24103] == bool(mem[_24103])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14649 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15033 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14649 + (32 * _15033) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14649 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15033:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22233 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22233] == mem[_22233]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22233] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24105 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24105] == bool(mem[_24105])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14648 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15032 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15032
                                                                require _14648 + (32 * _15032) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14648 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15032:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22232 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22232] == mem[_22232]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22232] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24104 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24104] == bool(mem[_24104])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14644 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15028 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14644 + (32 * _15028) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14644 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15028:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22228 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22228] == mem[_22228]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22228] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24100 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24100] == bool(mem[_24100])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14646 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15030 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14646 + (32 * _15030) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14646 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15030:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22230 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22230] == mem[_22230]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22230] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24102 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24102] == bool(mem[_24102])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14645 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15029 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15029
                                                                require _14645 + (32 * _15029) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14645 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15029:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22229 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22229] == mem[_22229]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22229] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24101 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24101] == bool(mem[_24101])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14641 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15025 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14641 + (32 * _15025) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14641 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15025:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22225 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22225] == mem[_22225]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22225] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24097 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24097] == bool(mem[_24097])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14643 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15027 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14643 + (32 * _15027) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14643 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15027:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22227 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22227] == mem[_22227]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22227] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24099 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24099] == bool(mem[_24099])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14642 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15026 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15026
                                                                require _14642 + (32 * _15026) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14642 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15026:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22226 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22226] == mem[_22226]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22226] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24098 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24098] == bool(mem[_24098])
                                        else:
                                            require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                            if (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 10^12:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                            if totalDeposited <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require totalDeposited
                                            if sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited) < sub_a9ac33dd:
                                                revert with 0, 'SafeMath: addition overflow'
                                            sub_a9ac33dd += (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited
                                            lastRewardTimestamp = block.timestamp
                                            mem[100] = this.address
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14638 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15022 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14638 + (32 * _15022) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14638 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15022:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22222 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22222] == mem[_22222]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22222] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24094 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24094] == bool(mem[_24094])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14640 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15024 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14640 + (32 * _15024) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14640 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15024:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22224 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22224] == mem[_22224]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22224] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24096 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24096] == bool(mem[_24096])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14639 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15023 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15023
                                                                require _14639 + (32 * _15023) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14639 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15023:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22223 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22223] == mem[_22223]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22223] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24095 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24095] == bool(mem[_24095])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14635 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15019 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14635 + (32 * _15019) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14635 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15019:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22219 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22219] == mem[_22219]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22219] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24091 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24091] == bool(mem[_24091])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14637 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15021 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14637 + (32 * _15021) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14637 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15021:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22221 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22221] == mem[_22221]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22221] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24093 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24093] == bool(mem[_24093])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14636 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15020 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15020
                                                                require _14636 + (32 * _15020) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14636 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15020:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22220 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22220] == mem[_22220]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22220] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24092 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24092] == bool(mem[_24092])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14632 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15016 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14632 + (32 * _15016) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14632 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15016:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22216 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22216] == mem[_22216]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22216] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24088 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24088] == bool(mem[_24088])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14634 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15018 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14634 + (32 * _15018) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14634 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15018:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22218 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22218] == mem[_22218]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22218] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24090 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24090] == bool(mem[_24090])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14633 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15017 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15017
                                                                require _14633 + (32 * _15017) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14633 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15017:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22217 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22217] == mem[_22217]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22217] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24089 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24089] == bool(mem[_24089])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14629 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15013 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14629 + (32 * _15013) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14629 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15013:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22213 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22213] == mem[_22213]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22213] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24085 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24085] == bool(mem[_24085])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14631 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15015 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14631 + (32 * _15015) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14631 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15015:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22215 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22215] == mem[_22215]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22215] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24087 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24087] == bool(mem[_24087])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14630 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15014 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15014
                                                                require _14630 + (32 * _15014) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14630 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15014:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22214 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22214] == mem[_22214]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22214] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24086 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24086] == bool(mem[_24086])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14626 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15010 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14626 + (32 * _15010) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14626 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15010:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22210 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22210] == mem[_22210]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22210] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24082 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24082] == bool(mem[_24082])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14628 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15012 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14628 + (32 * _15012) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14628 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15012:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22212 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22212] == mem[_22212]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22212] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24084 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24084] == bool(mem[_24084])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14627 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15011 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15011
                                                                require _14627 + (32 * _15011) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14627 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15011:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22211 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22211] == mem[_22211]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22211] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24083 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24083] == bool(mem[_24083])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14623 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15007 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14623 + (32 * _15007) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14623 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15007:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22207 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22207] == mem[_22207]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22207] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24079 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24079] == bool(mem[_24079])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14625 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15009 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14625 + (32 * _15009) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14625 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15009:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22209 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22209] == mem[_22209]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22209] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24081 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24081] == bool(mem[_24081])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14624 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15008 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15008
                                                                require _14624 + (32 * _15008) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14624 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15008:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22208 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22208] == mem[_22208]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22208] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24080 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24080] == bool(mem[_24080])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14620 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15004 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14620 + (32 * _15004) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14620 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15004:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22204 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22204] == mem[_22204]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22204] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24076 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24076] == bool(mem[_24076])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14622 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15006 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14622 + (32 * _15006) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14622 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15006:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22206 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22206] == mem[_22206]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22206] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24078 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24078] == bool(mem[_24078])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14621 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15005 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15005
                                                                require _14621 + (32 * _15005) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14621 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15005:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22205 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22205] == mem[_22205]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22205] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24077 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24077] == bool(mem[_24077])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14617 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _15001 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14617 + (32 * _15001) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14617 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _15001:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22201 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22201] == mem[_22201]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22201] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24073 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24073] == bool(mem[_24073])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14619 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15003 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14619 + (32 * _15003) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14619 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15003:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22203 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22203] == mem[_22203]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22203] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24075 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24075] == bool(mem[_24075])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14618 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _15002 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _15002
                                                                require _14618 + (32 * _15002) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14618 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _15002:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22202 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22202] == mem[_22202]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22202] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24074 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24074] == bool(mem[_24074])
                                    else:
                                        require (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d)
                                        if (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) / (block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d) != 1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                        require ext_code.size(rewardWalletAddress)
                                        call rewardWalletAddress.requestReward(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args ((block.timestamp * sub_f12c8e0d) - (lastRewardTimestamp * sub_f12c8e0d))
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if not (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp):
                                            if totalDeposited <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require totalDeposited
                                            if sub_a9ac33dd + (0 / totalDeposited) < sub_a9ac33dd:
                                                revert with 0, 'SafeMath: addition overflow'
                                            sub_a9ac33dd += 0 / totalDeposited
                                            lastRewardTimestamp = block.timestamp
                                            mem[100] = this.address
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14614 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14998 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14614 + (32 * _14998) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14614 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14998:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22198 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22198] == mem[_22198]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22198] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24070 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24070] == bool(mem[_24070])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14616 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _15000 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14616 + (32 * _15000) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14616 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _15000:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22200 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22200] == mem[_22200]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22200] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24072 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24072] == bool(mem[_24072])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14615 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14999 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14999
                                                                require _14615 + (32 * _14999) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14615 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14999:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22199 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22199] == mem[_22199]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22199] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24071 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24071] == bool(mem[_24071])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14611 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14995 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14611 + (32 * _14995) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14611 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14995:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22195 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22195] == mem[_22195]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22195] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24067 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24067] == bool(mem[_24067])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14613 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14997 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14613 + (32 * _14997) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14613 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14997:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22197 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22197] == mem[_22197]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22197] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24069 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24069] == bool(mem[_24069])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14612 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14996 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14996
                                                                require _14612 + (32 * _14996) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14612 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14996:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22196 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22196] == mem[_22196]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22196] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24068 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24068] == bool(mem[_24068])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14608 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14992 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14608 + (32 * _14992) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14608 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14992:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22192 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22192] == mem[_22192]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22192] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24064 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24064] == bool(mem[_24064])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14610 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14994 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14610 + (32 * _14994) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14610 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14994:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22194 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22194] == mem[_22194]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22194] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24066 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24066] == bool(mem[_24066])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14609 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14993 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14993
                                                                require _14609 + (32 * _14993) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14609 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14993:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22193 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22193] == mem[_22193]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22193] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24065 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24065] == bool(mem[_24065])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14605 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14989 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14605 + (32 * _14989) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14605 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14989:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22189 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22189] == mem[_22189]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22189] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24061 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24061] == bool(mem[_24061])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14607 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14991 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14607 + (32 * _14991) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14607 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14991:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22191 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22191] == mem[_22191]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22191] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24063 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24063] == bool(mem[_24063])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14606 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14990 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14990
                                                                require _14606 + (32 * _14990) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14606 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14990:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22190 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22190] == mem[_22190]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22190] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24062 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24062] == bool(mem[_24062])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14602 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14986 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14602 + (32 * _14986) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14602 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14986:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22186 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22186] == mem[_22186]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22186] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24058 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24058] == bool(mem[_24058])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14604 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14988 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14604 + (32 * _14988) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14604 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14988:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22188 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22188] == mem[_22188]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22188] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24060 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24060] == bool(mem[_24060])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14603 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14987 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14987
                                                                require _14603 + (32 * _14987) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14603 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14987:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22187 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22187] == mem[_22187]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22187] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24059 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24059] == bool(mem[_24059])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14599 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14983 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14599 + (32 * _14983) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14599 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14983:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22183 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22183] == mem[_22183]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22183] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24055 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24055] == bool(mem[_24055])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14601 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14985 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14601 + (32 * _14985) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14601 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14985:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22185 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22185] == mem[_22185]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22185] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24057 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24057] == bool(mem[_24057])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14600 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14984 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14984
                                                                require _14600 + (32 * _14984) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14600 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14984:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22184 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22184] == mem[_22184]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22184] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24056 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24056] == bool(mem[_24056])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14596 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14980 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14596 + (32 * _14980) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14596 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14980:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22180 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22180] == mem[_22180]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22180] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24052 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24052] == bool(mem[_24052])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14598 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14982 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14598 + (32 * _14982) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14598 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14982:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22182 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22182] == mem[_22182]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22182] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24054 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24054] == bool(mem[_24054])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14597 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14981 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14981
                                                                require _14597 + (32 * _14981) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14597 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14981:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22181 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22181] == mem[_22181]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22181] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24053 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24053] == bool(mem[_24053])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14593 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14977 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14593 + (32 * _14977) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14593 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14977:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22177 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22177] == mem[_22177]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22177] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24049 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24049] == bool(mem[_24049])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14595 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14979 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14595 + (32 * _14979) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14595 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14979:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22179 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22179] == mem[_22179]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22179] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24051 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24051] == bool(mem[_24051])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14594 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14978 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14978
                                                                require _14594 + (32 * _14978) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14594 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14978:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22178 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22178] == mem[_22178]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22178] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24050 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24050] == bool(mem[_24050])
                                        else:
                                            require (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp)
                                            if (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / (sub_f12c8e0d * block.timestamp) + (sub_7f94bf16 * block.timestamp) - (sub_f12c8e0d * lastRewardTimestamp) - (sub_7f94bf16 * lastRewardTimestamp) != 10^12:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'SafeMath: multiplication overflow'
                                            if totalDeposited <= 0:
                                                revert with 0, 'SafeMath: division by zero'
                                            require totalDeposited
                                            if sub_a9ac33dd + ((10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited) < sub_a9ac33dd:
                                                revert with 0, 'SafeMath: addition overflow'
                                            sub_a9ac33dd += (10^12 * sub_f12c8e0d * block.timestamp) + (10^12 * sub_7f94bf16 * block.timestamp) - (10^12 * sub_f12c8e0d * lastRewardTimestamp) - (10^12 * sub_7f94bf16 * lastRewardTimestamp) / totalDeposited
                                            lastRewardTimestamp = block.timestamp
                                            mem[100] = this.address
                                            require ext_code.size(sub_b8ab24bdAddress)
                                            staticcall sub_b8ab24bdAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if not ext_call.return_data[0] - totalDeposited:
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14590 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14974 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14590 + (32 * _14974) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14590 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14974:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22174 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22174] == mem[_22174]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22174] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24046 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24046] == bool(mem[_24046])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14592 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14976 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14592 + (32 * _14976) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14592 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14976:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22176 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22176] == mem[_22176]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22176] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24048 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24048] == bool(mem[_24048])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14591 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14975 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14975
                                                                require _14591 + (32 * _14975) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14591 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14975:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22175 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22175] == mem[_22175]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22175] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24047 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24047] == bool(mem[_24047])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14587 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14971 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14587 + (32 * _14971) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14587 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14971:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22171 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22171] == mem[_22171]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22171] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24043 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24043] == bool(mem[_24043])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14589 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14973 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14589 + (32 * _14973) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14589 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14973:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22173 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22173] == mem[_22173]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22173] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24045 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24045] == bool(mem[_24045])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14588 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14972 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14972
                                                                require _14588 + (32 * _14972) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14588 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14972:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22172 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22172] == mem[_22172]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22172] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24044 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24044] == bool(mem[_24044])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14584 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14968 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14584 + (32 * _14968) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14584 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14968:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22168 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22168] == mem[_22168]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22168] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24040 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24040] == bool(mem[_24040])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14586 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14970 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14586 + (32 * _14970) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14586 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14970:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22170 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22170] == mem[_22170]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22170] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24042 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24042] == bool(mem[_24042])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14585 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14969 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14969
                                                                require _14585 + (32 * _14969) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14585 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14969:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22169 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22169] == mem[_22169]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22169] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24041 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24041] == bool(mem[_24041])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14581 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14965 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14581 + (32 * _14965) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14581 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14965:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22165 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22165] == mem[_22165]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22165] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = 0
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, 0
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24037 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24037] == bool(mem[_24037])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14583 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14967 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14583 + (32 * _14967) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14583 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14967:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22167 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22167] == mem[_22167]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22167] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24039 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24039] == bool(mem[_24039])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14582 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14966 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14966
                                                                require _14582 + (32 * _14966) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14582 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14966:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22166 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22166] == mem[_22166]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22166] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = 0
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, 0
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24038 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24038] == bool(mem[_24038])
                                            else:
                                                require ext_call.return_data[0] - totalDeposited
                                                if (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / ext_call.return_data[0] - totalDeposited != sub_7796ff37:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not ext_call.return_data[0] - totalDeposited:
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14578 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14962 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14578 + (32 * _14962) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14578 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14962:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22162 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22162] == mem[_22162]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22162] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24034 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24034] == bool(mem[_24034])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14580 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14964 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14580 + (32 * _14964) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14580 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14964:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22164 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22164] == mem[_22164]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22164] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24036 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24036] == bool(mem[_24036])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14579 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14963 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14963
                                                                require _14579 + (32 * _14963) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14579 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14963:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22163 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22163] == mem[_22163]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22163] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24035 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24035] == bool(mem[_24035])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14575 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14959 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                            require _14575 + (32 * _14959) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14575 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14959:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22159 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22159] == mem[_22159]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22159] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24031 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24031] == bool(mem[_24031])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14577 = mem[(6 * ceil32(return_data.size)) + 192 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14961 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                                                                require _14577 + (32 * _14961) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14577 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14961:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22161 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22161] == mem[_22161]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22161] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24033 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24033] == bool(mem[_24033])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args 0, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14576 = mem[(6 * ceil32(return_data.size)) + 224 len 4], 0
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14960 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], 0 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14960
                                                                require _14576 + (32 * _14960) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14576 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14960:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22160 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22160] == mem[_22160]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22160] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24032 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24032] == bool(mem[_24032])
                                                else:
                                                    require ext_call.return_data[0] - totalDeposited
                                                    if (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / ext_call.return_data[0] - totalDeposited != sub_2f6236be:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not ext_call.return_data[0] - totalDeposited:
                                                        sub_bf4c8572 = 0
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14572 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14956 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14572 + (32 * _14956) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14572 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14956:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22156 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22156] == mem[_22156]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22156] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24028 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24028] == bool(mem[_24028])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14574 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14958 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14574 + (32 * _14958) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14574 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14958:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22158 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22158] == mem[_22158]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22158] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24030 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24030] == bool(mem[_24030])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14573 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14957 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14957
                                                                require _14573 + (32 * _14957) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14573 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14957:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22157 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22157] == mem[_22157]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22157] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24029 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24029] == bool(mem[_24029])
                                                    else:
                                                        require ext_call.return_data[0] - totalDeposited
                                                        if (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / ext_call.return_data[0] - totalDeposited != sub_7e72b29f:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        sub_bf4c8572 = (ext_call.return_data[0] * sub_7e72b29f) - (totalDeposited * sub_7e72b29f) / 10000
                                                        mem[ceil32(return_data.size) + 100] = lendingPoolAddress
                                                        mem[ceil32(return_data.size) + 132] = -1
                                                        require ext_code.size(sub_b8ab24bdAddress)
                                                        call sub_b8ab24bdAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args lendingPoolAddress, -1
                                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        mem[(2 * ceil32(return_data.size)) + 100] = assetAddress
                                                        mem[(2 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - totalDeposited
                                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                                        require ext_code.size(lendingPoolAddress)
                                                        call lendingPoolAddress.withdraw(address arg1, uint256 arg2, address arg3) with:
                                                             gas gas_remaining wei
                                                            args assetAddress, ext_call.return_data[0] - totalDeposited, this.address
                                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                                        mem[(4 * ceil32(return_data.size)) + 100] = routerAddress
                                                        mem[(4 * ceil32(return_data.size)) + 132] = -1
                                                        require ext_code.size(assetAddress)
                                                        call assetAddress.approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args routerAddress, -1
                                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if assetAddress == WAVAXAddress:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                            mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                            mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                            mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                            mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                            mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                            mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + 128
                                                            t = (6 * ceil32(return_data.size)) + 388
                                                            while idx < 2:
                                                                mem[t] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                            mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                            require ext_code.size(routerAddress)
                                                            call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (7 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _14569 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                            require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                            require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                            _14953 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                            mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                            mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                            require _14569 + (32 * _14953) + 32 <= return_data.size
                                                            idx = 0
                                                            s = (6 * ceil32(return_data.size)) + _14569 + 224
                                                            t = (7 * ceil32(return_data.size)) + 224
                                                            while idx < _14953:
                                                                require mem[s] == mem[s]
                                                                mem[t] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(rewardTokenAddress)
                                                            staticcall rewardTokenAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address)
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _22153 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_22153] == mem[_22153]
                                                            if sub_0b4b41bc <= 0:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require sub_0b4b41bc
                                                            sub_7f94bf16 = mem[_22153] / sub_0b4b41bc
                                                            mem[mem[64] + 4] = treasuryAddress
                                                            mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            require ext_code.size(assetAddress)
                                                            call assetAddress.0xa9059cbb with:
                                                                 gas gas_remaining wei
                                                                args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _24025 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_24025] == bool(mem[_24025])
                                                        else:
                                                            if rewardTokenAddress == WAVAXAddress:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 196] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 356] = 2
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 388
                                                                while idx < 2:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 292] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 324] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 2, mem[(6 * ceil32(return_data.size)) + 388 len 64]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _14571 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 223 < (6 * ceil32(return_data.size)) + return_data.size + 192
                                                                _14955 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]) + 224
                                                                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 192]
                                                                require _14571 + (32 * _14955) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14571 + 224
                                                                t = (7 * ceil32(return_data.size)) + 224
                                                                while idx < _14955:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22155 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22155] == mem[_22155]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22155] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24027 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24027] == bool(mem[_24027])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 3
                                                                mem[(6 * ceil32(return_data.size)) + 128] = assetAddress
                                                                mem[(6 * ceil32(return_data.size)) + 160] = WAVAXAddress
                                                                mem[(6 * ceil32(return_data.size)) + 192] = rewardTokenAddress
                                                                mem[(6 * ceil32(return_data.size)) + 224] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                                mem[(6 * ceil32(return_data.size)) + 228] = (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000
                                                                mem[(6 * ceil32(return_data.size)) + 260] = 0
                                                                mem[(6 * ceil32(return_data.size)) + 292] = 160
                                                                mem[(6 * ceil32(return_data.size)) + 388] = 3
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + 128
                                                                t = (6 * ceil32(return_data.size)) + 420
                                                                while idx < 3:
                                                                    mem[t] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[(6 * ceil32(return_data.size)) + 324] = this.address
                                                                mem[(6 * ceil32(return_data.size)) + 356] = block.timestamp
                                                                require ext_code.size(routerAddress)
                                                                call routerAddress.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000, 0, 160, address(this.address), block.timestamp, 3, mem[(6 * ceil32(return_data.size)) + 420 len 96]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(6 * ceil32(return_data.size)) + 224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (7 * ceil32(return_data.size)) + 224
                                                                require return_data.size >= 32
                                                                _14570 = mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32
                                                                require mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 <= test266151307()
                                                                require (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 255 < (6 * ceil32(return_data.size)) + return_data.size + 224
                                                                _14954 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]
                                                                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224] <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256 <= test266151307() and (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 32 >= 0
                                                                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 224 len 4], Mask(224, 32, (ext_call.return_data[0] * sub_2f6236be) - (totalDeposited * sub_2f6236be) / 10000) >> 32 + 224]) + 256
                                                                mem[(7 * ceil32(return_data.size)) + 224] = _14954
                                                                require _14570 + (32 * _14954) + 32 <= return_data.size
                                                                idx = 0
                                                                s = (6 * ceil32(return_data.size)) + _14570 + 256
                                                                t = (7 * ceil32(return_data.size)) + 256
                                                                while idx < _14954:
                                                                    require mem[s] == mem[s]
                                                                    mem[t] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(rewardTokenAddress)
                                                                staticcall rewardTokenAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address)
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _22154 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_22154] == mem[_22154]
                                                                if sub_0b4b41bc <= 0:
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                require sub_0b4b41bc
                                                                sub_7f94bf16 = mem[_22154] / sub_0b4b41bc
                                                                mem[mem[64] + 4] = treasuryAddress
                                                                mem[mem[64] + 36] = (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                require ext_code.size(assetAddress)
                                                                call assetAddress.0xa9059cbb with:
                                                                     gas gas_remaining wei
                                                                    args treasuryAddress, (ext_call.return_data[0] * sub_7796ff37) - (totalDeposited * sub_7796ff37) / 10000
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _24026 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_24026] == bool(mem[_24026])
    stor27 = 0
    if players.length < uint256(sub_cde8e5d3) - 1:
        if players.length <= 0:
            revert with 0, 'SafeMath: division by zero'
        require players.length
        sub_9abed90d = sub_bf4c8572 / players.length
        sub_5b4a49f6 = uint8(players.length)
    else:
        if uint256(sub_cde8e5d3) <= 0:
            revert with 0, 'SafeMath: division by zero'
        require uint256(sub_cde8e5d3)
        sub_9abed90d = sub_bf4c8572 / uint256(sub_cde8e5d3)
        sub_5b4a49f6 = uint8(stor13)
    lotteryState = 0
}



}
