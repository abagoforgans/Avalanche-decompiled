contract main {




// =====================  Runtime code  =====================


#
#  - sub_161d7d24(?)
#  - sub_217f057e(?)
#  - sub_25f57cd2(?)
#  - sub_2843337c(?)
#  - sub_af131f50(?)
#  - sub_bd511c30(?)
#  - sub_e4be6814(?)
#
uint8 stor0;
uint8 stor0; offset 8
uint16 stor0;
address owner;
uint8 paused;
mapping of address ownerOf;
mapping of uint256 stor202;
mapping of struct stor203;
mapping of uint256 sub_46b220ff;
array of struct sub_909b2da1;
mapping of uint256 stor206;
mapping of uint256 sub_cde41033;
mapping of uint256 sub_63b5d73e;
mapping of uint256 sub_926ce39a;
address sub_04d2be77Address;
uint256 sub_2e948ffc;
mapping of struct tiers;
mapping of uint8 stor213;
mapping of address tokenFeeds;
address oracleAddress;
address sub_d97cdc9fAddress;
address sub_cefe9d70Address;
address sub_68454595Address;
address sub_d33953baAddress;
address sub_991c0e32Address;
address sub_94290edaAddress;
address sub_0cdd230bAddress;
uint256 sub_0f6def35;
uint256 sub_4539ff42;
uint256 lpRatio;
uint256 burnRatio;
address sub_6303516cAddress;
address treasuryAddress;
uint256 sub_7efa7b9d;
uint256 sub_fdea3657;
uint256 sub_f50e365e;
uint256 sub_3f640df6;
uint256 sub_739f99d4;
uint256 sub_3501a466;
uint256 sub_ac41eba6;
address sub_e7ddd65aAddress;
uint256 sub_5473564a;
uint8 sub_420ff5d5;
mapping of uint8 stor239;
mapping of uint8 stor240;

function tiers(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    return tiers[arg1].field_0, tiers[arg1].field_256, tiers[arg1].field_512, bool(tiers[arg1].field_768)
}

function sub_04d2be77(?) payable {
    return sub_04d2be77Address
}

function sub_0cdd230b(?) payable {
    return sub_0cdd230bAddress
}

function sub_0f6def35(?) payable {
    return sub_0f6def35
}

function sub_2e948ffc(?) payable {
    return sub_2e948ffc
}

function sub_3501a466(?) payable {
    return sub_3501a466
}

function sub_3f640df6(?) payable {
    return sub_3f640df6
}

function sub_420ff5d5(?) payable {
    return bool(sub_420ff5d5)
}

function sub_4539ff42(?) payable {
    return sub_4539ff42
}

function sub_46b220ff(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_46b220ff[arg1]
}

function burnRatio() payable {
    return burnRatio
}

function sub_5473564a(?) payable {
    return sub_5473564a
}

function sub_58cb24b0(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor213[arg1])
}

function paused() payable {
    return bool(paused)
}

function treasury() payable {
    return treasuryAddress
}

function sub_6303516c(?) payable {
    return sub_6303516cAddress
}

function ownerOf(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return ownerOf[arg1]
}

function sub_63b5d73e(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_63b5d73e[arg1]
}

function sub_68454595(?) payable {
    return sub_68454595Address
}

function sub_739f99d4(?) payable {
    return sub_739f99d4
}

function oracle() payable {
    return oracleAddress
}

function sub_7efa7b9d(?) payable {
    return sub_7efa7b9d
}

function transferWhitelist(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor240[arg1])
}

function owner() payable {
    return owner
}

function sub_909b2da1(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 < sub_909b2da1[arg1].field_0
    return sub_909b2da1[arg1][arg2].field_0
}

function sub_926ce39a(?) payable {
    require calldata.size - 4 >= 64
    require arg2 == address(arg2)
    return sub_926ce39a[arg1][arg2]
}

function sub_94290eda(?) payable {
    return sub_94290edaAddress
}

function sub_991c0e32(?) payable {
    return sub_991c0e32Address
}

function sub_ac41eba6(?) payable {
    return sub_ac41eba6
}

function sub_cde41033(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_cde41033[arg1]
}

function sub_cefe9d70(?) payable {
    return sub_cefe9d70Address
}

function sub_d33953ba(?) payable {
    return sub_d33953baAddress
}

function tokenFeeds(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return tokenFeeds[arg1]
}

function sub_d97cdc9f(?) payable {
    return sub_d97cdc9fAddress
}

function sub_e7ddd65a(?) payable {
    return sub_e7ddd65aAddress
}

function isApprovedForAll(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor239[address(arg1)][address(arg2)])
}

function sub_f50e365e(?) payable {
    return sub_f50e365e
}

function lpRatio() payable {
    return lpRatio
}

function sub_fdea3657(?) payable {
    return sub_fdea3657
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_f788af43(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    lpRatio = arg1
    burnRatio = arg2
}

function sub_538c8e89(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_3f640df6 = arg1
    emit 0xe4b4efd6: arg1
}

function sub_59c9eb90(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_fdea3657 = arg1
    emit 0xcb7ee917: arg1
}

function sub_8a1ec7ef(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_0f6def35 = arg1
    emit 0x647c0ddb: arg1
}

function pause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if paused:
        revert with 0, 'Pausable: paused'
    paused = 1
    emit Paused(msg.sender);
}

function setMaxClaimInterval(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_f50e365e = arg1
    emit 0x908809b3: arg1
}

function unpause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not paused:
        revert with 0, 'Pausable: not paused'
    paused = 0
    emit Unpaused(msg.sender);
}

function sub_1ebb4fdc(?) payable {
    require calldata.size - 4 >= 64
    require arg2 == bool(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    tiers[arg1].field_768 = uint8(bool(arg2))
}

function sub_c7e7dc76(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_04d2be77Address = address(arg1)
    sub_2e948ffc = arg2
}

function sub_86788afb(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 10000:
        revert with 0, 'Too high'
    sub_ac41eba6 = arg1
    emit 0x40e40238: arg1
}

function sub_4fa7ae50(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_e7ddd65aAddress = address(arg1)
    emit 0x6cc71d8d: address(arg1)
}

function sub_7532bbbf(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 < sub_7efa7b9d:
        revert with 0, 'Too low'
    sub_7efa7b9d = arg1
    emit 0x327ebce3: arg1
}

function setOracle(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'ZERO'
    oracleAddress = arg1
    emit OracleUpdated(arg1);
}

function sub_f6acd51b(?) payable {
    require calldata.size - 4 >= 64
    require arg2 == bool(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_5473564a = arg1
    sub_420ff5d5 = uint8(bool(arg2))
    emit 0x3f22e2f6: arg1, bool(uint8(bool(arg2)))
}

function setTransferWhitelist(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'Cannot be zero'
    stor240[address(arg1)] = uint8(arg2)
}

function setApprovalForAll(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    stor239[address(msg.sender)][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function sub_2534b57f(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg4 == address(arg4)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_926ce39a[arg2][address(arg1)] = arg3
    if address(arg4):
        tokenFeeds[address(arg1)] = address(arg4)
}

function sub_df430f7e(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == bool(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0, 'ZERO'
    stor213[address(arg1)] = uint8(bool(arg2))
    emit 0xd6dbfa1a: address(arg1), bool(arg2)
}

function setWallets(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'ZERO'
    if not arg2:
        revert with 0, 'ZERO'
    sub_6303516cAddress = arg1
    treasuryAddress = arg2
}

function sub_9b58d54c(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call address(arg1) with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function sub_5d32ff31(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 10000:
        revert with 0, 'Reward cannot be more than 100%'
    if arg2 > 10000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Fusion weight cannot be more than 100%'
    sub_739f99d4 = arg1
    sub_3501a466 = arg2
}

function sub_9b92733a(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_991c0e32Address = address(arg1)
    sub_94290edaAddress = address(arg2)
    sub_0cdd230bAddress = address(arg3)
    emit 0x8a006fdd: address(arg1), address(arg2), address(arg3)
}

function sub_212e7f96(?) payable {
    require calldata.size - 4 >= 160
    require arg5 == bool(arg5)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg2 <= 0:
        revert with 0, 'Cost 0'
    if arg1 <= 0:
        revert with 0, 'Tier must be 1 and 9'
    if arg1 >= 10:
        revert with 0, 'Tier must be 1 and 9'
    tiers[arg1].field_0 = arg2
    tiers[arg1].field_256 = arg3
    tiers[arg1].field_512 = arg4
    tiers[arg1].field_768 = uint8(bool(arg5))
    emit 0x2702951e: arg1, arg2, arg3
}

function sub_e4dfbe37(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg3 == address(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 1
    while idx < 10:
        mem[0] = idx
        mem[32] = 212
        if tiers[idx].field_768:
            mem[0] = address(arg1)
            mem[32] = sha3(idx, 209)
            sub_926ce39a[idx][address(arg1)] = arg2
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if address(arg3):
        tokenFeeds[address(arg1)] = address(arg3)
}

function sub_5a5d1442(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require calldata.size + -cd[4] - 4 >= 192
    require ('cd', 4).length <= test266151307()
    require cd[4] + ('cd', 4).length + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4).length + 4)] > test266151307():
        revert with 0, 65
    if ceil32(ceil32(cd[(cd[4] + ('cd', 4).length + 4)])) + 289 < 288 or ceil32(ceil32(cd[(cd[4] + ('cd', 4).length + 4)])) + 289 > test266151307():
        revert with 0, 65
    require cd[4] + ('cd', 4).length + cd[(cd[4] + ('cd', 4).length + 4)] + 36 <= calldata.size
    return ('cd', 4)[3] >= ('cd', 4)[2]
}

function sub_bffc3764(?) payable {
    idx = 1
    s = 0
    t = 0
    while idx < 10:
        mem[0] = idx
        mem[32] = 212
        if not tiers[idx].field_768:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            continue 
        mem[0] = idx
        mem[32] = 212
        if s:
            if s <= tiers[idx].field_0:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = tiers[idx].field_0
        t = idx
        continue 
    return t, s
}

function adminWithdraw(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if not ext_call.return_data[0]:
        revert with 0, 'Payment error'
}

function sub_4333a751(?) payable {
    require calldata.size - 4 >= 32
    idx = 1
    s = 0
    t = 0
    while idx < 10:
        mem[0] = idx
        mem[32] = 212
        if not tiers[idx].field_768:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            continue 
        mem[0] = idx
        mem[32] = 212
        if arg1 < tiers[idx].field_0:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            continue 
        mem[0] = idx
        mem[32] = 212
        if s > tiers[idx].field_0:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            continue 
        mem[0] = idx
        mem[32] = 212
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = tiers[idx].field_0
        t = idx
        continue 
    return t, s
}

function sub_71480acf(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    s = cd[4] + 36
    t = 128
    idx = 0
    while idx < ('cd', 4).length:
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 0, 50
        mem[0] = mem[(32 * idx) + 128]
        mem[32] = 203
        stor203[mem[(32 * idx) + 128]].field_768 = cd[36]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_2130fe23(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if sub_909b2da1[address(arg1)].field_0:
        mem[128] = sub_909b2da1[address(arg1)].field_0
        idx = 128
        s = 0
        while (32 * sub_909b2da1[address(arg1)].field_0) + 96 > idx:
            mem[idx + 32] = sub_909b2da1[address(arg1)][s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        return Array(len=sub_909b2da1[address(arg1)].field_0, data=mem[128 len 32 * sub_909b2da1[address(arg1)].field_0])
    mem[(32 * sub_909b2da1[address(arg1)].field_0) + 128] = 32
    mem[(32 * sub_909b2da1[address(arg1)].field_0) + 160] = sub_909b2da1[address(arg1)].field_0
    mem[(32 * sub_909b2da1[address(arg1)].field_0) + 192 len 32 * sub_909b2da1[address(arg1)].field_0] = mem[128 len 32 * sub_909b2da1[address(arg1)].field_0]
    return memory
      from (32 * sub_909b2da1[address(arg1)].field_0) + 128
       len (96 * sub_909b2da1[address(arg1)].field_0) + 64
}

function sub_c90c2b6a(?) payable {
    require calldata.size - 4 >= 64
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 0, 65
    require arg2 + arg2.length + 36 <= calldata.size
    if not ownerOf[arg1]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg1] != msg.sender:
        revert with 0, 'User not owner'
    if stor203[arg1].field_0:
        if stor203[arg1].field_0 == uint255(stor203[arg1].field_0) * 0.5 < 32:
            revert with 0, 34
        if arg2.length:
            stor203[arg1][].field_0 = Array(len=arg2.length, data=arg2[all])
        else:
            stor203[arg1].field_0 = 0
            idx = 0
            while (uint255(stor203[arg1].field_0) * 0.5) + 31 / 32 > idx:
                stor203[arg1][idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if stor203[arg1].field_0 == stor203[arg1].field_1 < 32:
            revert with 0, 34
        if arg2.length:
            stor203[arg1][].field_0 = Array(len=arg2.length, data=arg2[all])
        else:
            stor203[arg1].field_0 = 0
            idx = 0
            while stor203[arg1].field_1 + 31 / 32 > idx:
                stor203[arg1][idx].field_0 = 0
                idx = idx + 1
                continue 
}

function sub_76c7cf8e(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0, 'Cannot mint'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(arg1) != ownerOf[arg3]:
        revert with 0, 'Wrong token Id'
    if address(arg1):
        stor206[address(arg1)][arg3] = 0
        if sub_909b2da1[address(arg1)].field_0 < 1:
            revert with 0, 17
        if sub_909b2da1[address(arg1)].field_0 - 1 >= sub_909b2da1[address(arg1)].field_0:
            revert with 0, 50
        if stor206[address(arg1)][arg3] >= sub_909b2da1[address(arg1)].field_0:
            revert with 0, 50
        sub_909b2da1[address(arg1)][stor206[address(arg1)][arg3]].field_0 = sub_909b2da1[address(arg1)][sub_909b2da1[address(arg1)].field_0].field_0
        stor206[address(arg1)][stor205[address(arg1)][stor205[address(arg1)].field_0].field_0] = stor206[address(arg1)][arg3]
        if not sub_909b2da1[address(arg1)].field_0:
            revert with 0, 49
        sub_909b2da1[address(arg1)][sub_909b2da1[address(arg1)].field_0].field_0 = 0
        sub_909b2da1[address(arg1)].field_0--
        if stor202[address(arg1)] < tiers[stor203[arg3].field_256].field_0:
            revert with 0, 17
        stor202[address(arg1)] -= tiers[stor203[arg3].field_256].field_0
    if address(arg2):
        sub_909b2da1[address(arg2)].field_0++
        sub_909b2da1[address(arg2)][sub_909b2da1[address(arg2)].field_0].field_0 = arg3
        if sub_909b2da1[address(arg2)].field_0 < 1:
            revert with 0, 17
        stor206[address(arg2)][arg3] = sub_909b2da1[address(arg2)].field_0 - 1
        if stor202[address(arg2)] > !tiers[stor203[arg3].field_256].field_0:
            revert with 0, 17
        stor202[address(arg2)] += tiers[stor203[arg3].field_256].field_0
    ownerOf[arg3] = address(arg2)
}

function initialize(address arg1, address arg2, address arg3, address arg4, address arg5, address arg6, address arg7, address arg8) payable {
    require calldata.size - 4 >= 256
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    require arg5 == arg5
    require arg6 == arg6
    require arg7 == arg7
    require arg8 == arg8
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    if not uint8(stor0.field_8):
        uint16(stor0.field_0) = 257
    if not arg1:
        revert with 0, 'ZERO'
    if not arg2:
        revert with 0, 'ZERO'
    if not arg3:
        revert with 0, 'ZERO'
    if not arg4:
        revert with 0, 'ZERO'
    if not arg5:
        revert with 0, 'ZERO'
    if not arg7:
        revert with 0, 'ZERO'
    if not arg8:
        revert with 0, 'ZERO'
    if not uint8(stor0.field_8):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is not initializing'
    owner = msg.sender
    emit OwnershipTransferred(owner, msg.sender);
    oracleAddress = arg1
    sub_d97cdc9fAddress = arg2
    sub_cefe9d70Address = arg3
    sub_68454595Address = arg4
    sub_d33953baAddress = arg5
    tokenFeeds[address(arg5)] = arg6
    idx = 1
    while idx < 4:
        mem[32] = sha3(idx, 209)
        sub_926ce39a[idx][address(arg2)] = 10000
        mem[0] = arg3
        sub_926ce39a[idx][arg3] = 10000
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    sub_6303516cAddress = arg7
    treasuryAddress = arg8
    sub_fdea3657 = 24 * 3600
    sub_f50e365e = 720 * 24 * 3600
    sub_7efa7b9d = 20000 * 10^18
    sub_739f99d4 = 10000
    sub_3501a466 = 10000
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function sub_35331828(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if not stor240[msg.sender]:
        revert with 0, 'Not allowed'
    if not address(arg1):
        revert with 0, 'Cannot mint'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if address(arg1) != ownerOf[arg3]:
        revert with 0, 'Wrong token Id'
    if not stor239[address(arg1)][msg.sender]:
        revert with 0, 'Not Approved'
    if address(arg1):
        stor206[address(arg1)][arg3] = 0
        if sub_909b2da1[address(arg1)].field_0 < 1:
            revert with 0, 17
        if sub_909b2da1[address(arg1)].field_0 - 1 >= sub_909b2da1[address(arg1)].field_0:
            revert with 0, 50
        if stor206[address(arg1)][arg3] >= sub_909b2da1[address(arg1)].field_0:
            revert with 0, 50
        sub_909b2da1[address(arg1)][stor206[address(arg1)][arg3]].field_0 = sub_909b2da1[address(arg1)][sub_909b2da1[address(arg1)].field_0].field_0
        stor206[address(arg1)][stor205[address(arg1)][stor205[address(arg1)].field_0].field_0] = stor206[address(arg1)][arg3]
        if not sub_909b2da1[address(arg1)].field_0:
            revert with 0, 49
        sub_909b2da1[address(arg1)][sub_909b2da1[address(arg1)].field_0].field_0 = 0
        sub_909b2da1[address(arg1)].field_0--
        if stor202[address(arg1)] < tiers[stor203[arg3].field_256].field_0:
            revert with 0, 17
        stor202[address(arg1)] -= tiers[stor203[arg3].field_256].field_0
    if address(arg2):
        sub_909b2da1[address(arg2)].field_0++
        sub_909b2da1[address(arg2)][sub_909b2da1[address(arg2)].field_0].field_0 = arg3
        if sub_909b2da1[address(arg2)].field_0 < 1:
            revert with 0, 17
        stor206[address(arg2)][arg3] = sub_909b2da1[address(arg2)].field_0 - 1
        if stor202[address(arg2)] > !tiers[stor203[arg3].field_256].field_0:
            revert with 0, 17
        stor202[address(arg2)] += tiers[stor203[arg3].field_256].field_0
    ownerOf[arg3] = address(arg2)
}

function sub_abf5b44e(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if not stor213[address(arg2)]:
        require ext_code.size(sub_0cdd230bAddress)
        staticcall sub_0cdd230bAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            return 115, 0
        require ext_code.size(sub_94290edaAddress)
        staticcall sub_94290edaAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            return 110, 0
        require ext_code.size(sub_991c0e32Address)
        staticcall sub_991c0e32Address.0x70a08231 with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] <= 0:
            return 100, 0
        return 105, 0
    require ext_code.size(address(arg2))
    staticcall address(arg2).getBonus() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(sub_0cdd230bAddress)
    staticcall sub_0cdd230bAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        if ext_call.return_data[0] <= 115:
            return 115, 0
    else:
        require ext_code.size(sub_94290edaAddress)
        staticcall sub_94290edaAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            if ext_call.return_data[0] <= 110:
                return 110, 0
        else:
            require ext_code.size(sub_991c0e32Address)
            staticcall sub_991c0e32Address.0x70a08231 with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] <= 0:
                if ext_call.return_data[0] <= 100:
                    return 100, 0
            else:
                if ext_call.return_data[0] <= 105:
                    return 105, 0
    return ext_call.return_data[0], 1
}

function sub_0c705a71(?) payable {
    require calldata.size - 4 >= 32
    if stor203[arg1].field_0:
        if stor203[arg1].field_0 == uint255(stor203[arg1].field_0) * 0.5 < 32:
            revert with 0, 34
        if stor203[arg1].field_0:
            if stor203[arg1].field_0 == uint255(stor203[arg1].field_0) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor203[arg1].field_0):
                if 31 >= uint255(stor203[arg1].field_0) * 0.5:
                    mem[128] = 256 * stor203[arg1].field_8
                else:
                    mem[128] = stor203[arg1].field_0
                    idx = 128
                    s = 0
                    while (uint255(stor203[arg1].field_0) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor203[arg1][s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if stor203[arg1].field_0 == stor203[arg1].field_1 < 32:
                revert with 0, 34
            if stor203[arg1].field_1:
                if 31 >= stor203[arg1].field_1:
                    mem[128] = 256 * stor203[arg1].field_8
                else:
                    mem[128] = stor203[arg1].field_0
                    idx = 128
                    s = 0
                    while stor203[arg1].field_1 + 96 > idx:
                        mem[idx + 32] = stor203[arg1][s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        return Array(len=2 * Mask(256, -1, stor203[arg1].field_0), data=mem[128 len ceil32(uint255(stor203[arg1].field_0) * 0.5)]), 
               stor203[arg1].field_256,
               stor203[arg1].field_512,
               stor203[arg1].field_768,
               stor203[arg1].field_1024,
               stor203[arg1].field_1280
    if stor203[arg1].field_0 == stor203[arg1].field_1 < 32:
        revert with 0, 34
    if stor203[arg1].field_0:
        if stor203[arg1].field_0 == uint255(stor203[arg1].field_0) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor203[arg1].field_0):
            if 31 >= uint255(stor203[arg1].field_0) * 0.5:
                mem[128] = 256 * stor203[arg1].field_8
            else:
                mem[128] = stor203[arg1].field_0
                idx = 128
                s = 0
                while (uint255(stor203[arg1].field_0) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor203[arg1][s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if stor203[arg1].field_0 == stor203[arg1].field_1 < 32:
            revert with 0, 34
        if stor203[arg1].field_1:
            if 31 >= stor203[arg1].field_1:
                mem[128] = 256 * stor203[arg1].field_8
            else:
                mem[128] = stor203[arg1].field_0
                idx = 128
                s = 0
                while stor203[arg1].field_1 + 96 > idx:
                    mem[idx + 32] = stor203[arg1][s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    return Array(len=stor203[arg1].field_0, data=mem[128 len ceil32(stor203[arg1].field_1)]), 
           stor203[arg1].field_256,
           stor203[arg1].field_512,
           stor203[arg1].field_768,
           stor203[arg1].field_1024,
           stor203[arg1].field_1280
}

function sub_016cd4d4(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    require ext_code.size(tokenFeeds[address(arg1)])
    staticcall tokenFeeds[address(arg1)].latestRoundData() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 160
    require ext_call.return_data[0] == ext_call.return_data[22 len 10]
    require ext_call.return_data[128] == ext_call.return_data[150 len 10]
    require ext_code.size(tokenFeeds[address(arg1)])
    staticcall tokenFeeds[address(arg1)].0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            return ext_call.return_data[32]
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            return (ext_call.return_data[32] * 10^ext_call.return_data[31 len 1])
        s = 10
        t = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
            revert with 0, 17
        return (ext_call.return_data[32] * s * t)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / 10^uint8(ext_call.return_data[0]))
        s = 10
        t = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 0, 18
        return (ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
    s = 10
    t = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    require ext_code.size(sub_d33953baAddress)
    staticcall sub_d33953baAddress.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        return (ext_call.return_data[32] / s * t)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        return (ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / s * t)
    u = 10
    v = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if u > -1 / u:
            revert with 0, 17
        if not bool(idx):
            u = u * u
            v = v
            idx = uint255(idx) * 0.5
            continue 
        u = u * u
        v = u * v
        idx = uint255(idx) * 0.5
        continue 
    if v > -1 / u:
        revert with 0, 17
    if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
        revert with 0, 17
    if not s * t:
        revert with 0, 18
    return (ext_call.return_data[32] * u * v / s * t)
}

function sub_5e2488d0(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require ext_code.size(oracleAddress)
    staticcall oracleAddress.consult(address arg1, uint256 arg2) with:
            gas gas_remaining wei
           args sub_d97cdc9fAddress, arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[14 len 18]
    if sub_d33953baAddress == address(arg1):
        return ext_call.return_data[14 len 18]
    require ext_code.size(sub_d33953baAddress)
    staticcall sub_d33953baAddress.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        require ext_code.size(tokenFeeds[stor219])
        staticcall tokenFeeds[stor219].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[stor219])
        staticcall tokenFeeds[stor219].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32]:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / ext_call.return_data[32] * u * v / s * t)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / s * t)
            s = 10
            t = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t * y * z / ext_call.return_data[32] * w * x / u * v)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / s * t)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / s * t)
            s = 10
            t = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * w * x / u * v)
        s = 10
        t = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] / s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * y * z / ext_call.return_data[32] * w * x / u * v)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] * w * x / u * v)
        u = 10
        v = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * u * v / s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
            revert with 0, 17
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32])
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] * w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
        w = 10
        x = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if w > -1 / w:
                revert with 0, 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = w * x
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not w * x:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * y * z / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z / w * x)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * y * z / w * x:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * a * b / ext_call.return_data[32] * y * z / w * x)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        require ext_code.size(tokenFeeds[stor219])
        staticcall tokenFeeds[stor219].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[stor219])
        staticcall tokenFeeds[stor219].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / s * t)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / s * t)
            s = 10
            t = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * w * x / u * v)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / s * t)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 160
                require ext_call.return_data[0] == ext_call.return_data[22 len 10]
                require ext_call.return_data[128] == ext_call.return_data[150 len 10]
                require ext_code.size(tokenFeeds[address(arg1)])
                staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32]:
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    require ext_code.size(sub_d33953baAddress)
                    staticcall sub_d33953baAddress.0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                            revert with 0, 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).0x313ce567 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        if not ext_call.return_data[31 len 1]:
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 17
                            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 0, 18
                            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and s * t > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t)
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not s * t:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / s * t)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / s * t)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / s * t)
            s = 10
            t = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 0, 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 0, 17
            if ext_call.return_data[32] and s * t > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * s * t / 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * w * x / u * v)
        s = 10
        t = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 0, 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] / s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * w * x / u * v)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * w * x / u * v)
        u = 10
        v = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * u * v / s * t > -1 / Mask(144, 0, ext_call.return_data[0]):
            revert with 0, 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 0, 18
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32])
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
        w = 10
        x = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if w > -1 / w:
                revert with 0, 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = w * x
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not w * x:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[32] * y * z / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z / w * x)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]):
            revert with 0, 17
        if not ext_call.return_data[32] * y * z / w * x:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / 10^uint8(ext_call.return_data[0]) * a * b / ext_call.return_data[32] * y * z / w * x)
    s = 10
    t = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 0, 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 0, 17
    require ext_code.size(tokenFeeds[stor219])
    staticcall tokenFeeds[stor219].latestRoundData() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 160
    require ext_call.return_data[0] == ext_call.return_data[22 len 10]
    require ext_call.return_data[128] == ext_call.return_data[150 len 10]
    require ext_code.size(tokenFeeds[stor219])
    staticcall tokenFeeds[stor219].0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / s * t * y * z / ext_call.return_data[32] * w * x / u * v)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] * w * x / u * v)
        u = 10
        v = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * u * v > -1 / Mask(144, 0, ext_call.return_data[0]):
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32])
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] * w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
        w = 10
        x = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if w > -1 / w:
                revert with 0, 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = w * x
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not w * x:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t / ext_call.return_data[32] * y * z / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z / w * x)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * y * z / w * x:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / s * t * a * b / ext_call.return_data[32] * y * z / w * x)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] * w * x / u * v)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
                revert with 0, 17
            if not s * t:
                revert with 0, 18
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 160
            require ext_call.return_data[0] == ext_call.return_data[22 len 10]
            require ext_call.return_data[128] == ext_call.return_data[150 len 10]
            require ext_code.size(tokenFeeds[address(arg1)])
            staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32])
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32]:
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                require ext_code.size(sub_d33953baAddress)
                staticcall sub_d33953baAddress.0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                        revert with 0, 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    if not ext_call.return_data[31 len 1]:
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                            revert with 0, 17
                        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 0, 18
                        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if u > -1 / u:
                            revert with 0, 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = u * v
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 0, 17
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and u * v > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * u * v / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if u > -1 / u:
                        revert with 0, 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = u * v
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 0, 17
                if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if u > -1 / u:
                    revert with 0, 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = u * v
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 0, 17
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not u * v:
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v)
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not u * v:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * w * x / u * v)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / u * v:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / u * v)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / u * v:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] * w * x / u * v)
        u = 10
        v = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if u > -1 / u:
                revert with 0, 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = u * v
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 0, 17
        if ext_call.return_data[32] and u * v > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 0, 18
        if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) > -1 / Mask(144, 0, ext_call.return_data[0]):
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32])
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] * w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
        w = 10
        x = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if w > -1 / w:
                revert with 0, 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = w * x
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not w * x:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t / ext_call.return_data[32] * y * z / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z / w * x)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * y * z / w * x:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * u * v / 10^uint8(ext_call.return_data[0]) / s * t * a * b / ext_call.return_data[32] * y * z / w * x)
    u = 10
    v = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if u > -1 / u:
            revert with 0, 17
        if not bool(idx):
            u = u * u
            v = v
            idx = uint255(idx) * 0.5
            continue 
        u = u * u
        v = u * v
        idx = uint255(idx) * 0.5
        continue 
    if v > -1 / u:
        revert with 0, 17
    require ext_code.size(sub_d33953baAddress)
    staticcall sub_d33953baAddress.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not u * v:
            revert with 0, 18
        if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] / u * v > -1 / Mask(144, 0, ext_call.return_data[0]):
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * w * x / ext_call.return_data[32])
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] * w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * y * z / ext_call.return_data[32] * w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * w * x / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * y * z / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
        w = 10
        x = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if w > -1 / w:
                revert with 0, 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = w * x
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * y * z / ext_call.return_data[32] / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not w * x:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t / ext_call.return_data[32] * y * z / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z / w * x)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * y * z / w * x:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] / u * v / s * t * a * b / ext_call.return_data[32] * y * z / w * x)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not u * v:
            revert with 0, 18
        if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * 10^ext_call.return_data[31 len 1] / u * v > -1 / Mask(144, 0, ext_call.return_data[0]):
            revert with 0, 17
        if not s * t:
            revert with 0, 18
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].latestRoundData() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 160
        require ext_call.return_data[0] == ext_call.return_data[22 len 10]
        require ext_call.return_data[128] == ext_call.return_data[150 len 10]
        require ext_code.size(tokenFeeds[address(arg1)])
        staticcall tokenFeeds[address(arg1)].0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32])
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32]:
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * w * x / ext_call.return_data[32])
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] * w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * y * z / ext_call.return_data[32] * w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            require ext_code.size(sub_d33953baAddress)
            staticcall sub_d33953baAddress.0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * w * x / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                    revert with 0, 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                        revert with 0, 17
                    if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 0, 18
                    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = ext_call.return_data[31 len 1]
                while idx > 1:
                    if w > -1 / w:
                        revert with 0, 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = w * x
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 0, 17
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and w * x > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * w * x / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if w > -1 / w:
                    revert with 0, 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = w * x
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 0, 17
            if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * y * z / ext_call.return_data[32] * w * x / 10^uint8(ext_call.return_data[0]))
        w = 10
        x = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if w > -1 / w:
                revert with 0, 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = w * x
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 0, 17
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * y * z / ext_call.return_data[32] / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not w * x:
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / w * x)
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not w * x:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t / ext_call.return_data[32] * y * z / w * x)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / w * x:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z / w * x)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * y * z / w * x:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / u * v / s * t * a * b / ext_call.return_data[32] * y * z / w * x)
    w = 10
    x = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if w > -1 / w:
            revert with 0, 17
        if not bool(idx):
            w = w * w
            x = x
            idx = uint255(idx) * 0.5
            continue 
        w = w * w
        x = w * x
        idx = uint255(idx) * 0.5
        continue 
    if x > -1 / w:
        revert with 0, 17
    if ext_call.return_data[32] and w * x > -1 / ext_call.return_data[32]:
        revert with 0, 17
    if not u * v:
        revert with 0, 18
    if Mask(144, 0, ext_call.return_data[0]) and ext_call.return_data[32] * w * x / u * v > -1 / Mask(144, 0, ext_call.return_data[0]):
        revert with 0, 17
    if not s * t:
        revert with 0, 18
    require ext_code.size(tokenFeeds[address(arg1)])
    staticcall tokenFeeds[address(arg1)].latestRoundData() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 160
    require ext_call.return_data[0] == ext_call.return_data[22 len 10]
    require ext_call.return_data[128] == ext_call.return_data[150 len 10]
    require ext_code.size(tokenFeeds[address(arg1)])
    staticcall tokenFeeds[address(arg1)].0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32])
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32]:
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32])
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32]:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * y * z / ext_call.return_data[32])
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]))
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] * y * z)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * y * z:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * a * b / ext_call.return_data[32] * y * z)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        require ext_code.size(sub_d33953baAddress)
        staticcall sub_d33953baAddress.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * y * z / ext_call.return_data[32] / 10^uint8(ext_call.return_data[0]))
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
                revert with 0, 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                    revert with 0, 17
                if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 0, 18
                return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
            y = 10
            z = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if y > -1 / y:
                    revert with 0, 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = y * z
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 0, 17
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and y * z > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * y * z / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
        y = 10
        z = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if y > -1 / y:
                revert with 0, 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = y * z
            idx = uint255(idx) * 0.5
            continue 
        if z > -1 / y:
            revert with 0, 17
        if ext_call.return_data[32] and y * z > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] * y * z / 10^uint8(ext_call.return_data[0]))
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * y * z / 10^uint8(ext_call.return_data[0]):
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * y * z / 10^uint8(ext_call.return_data[0]))
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * y * z / 10^uint8(ext_call.return_data[0]):
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * a * b / ext_call.return_data[32] * y * z / 10^uint8(ext_call.return_data[0]))
    y = 10
    z = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if y > -1 / y:
            revert with 0, 17
        if not bool(idx):
            y = y * y
            z = z
            idx = uint255(idx) * 0.5
            continue 
        y = y * y
        z = y * z
        idx = uint255(idx) * 0.5
        continue 
    if z > -1 / y:
        revert with 0, 17
    require ext_code.size(sub_d33953baAddress)
    staticcall sub_d33953baAddress.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        if ext_call.return_data[32] and 1 > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not y * z:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / y * z:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] / y * z)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] / y * z:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] / y * z)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] / y * z:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * a * b / ext_call.return_data[32] / y * z)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        if ext_call.return_data[32] and 10^ext_call.return_data[31 len 1] > -1 / ext_call.return_data[32]:
            revert with 0, 17
        if not y * z:
            revert with 0, 18
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / y * z:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / y * z)
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
                revert with 0, 17
            if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / y * z:
                revert with 0, 18
            return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / y * z)
        a = 10
        b = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if a > -1 / a:
                revert with 0, 17
            if not bool(idx):
                a = a * a
                b = b
                idx = uint255(idx) * 0.5
                continue 
            a = a * a
            b = a * b
            idx = uint255(idx) * 0.5
            continue 
        if b > -1 / a:
            revert with 0, 17
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and a * b > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / y * z:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * a * b / ext_call.return_data[32] * 10^uint8(ext_call.return_data[0]) / y * z)
    a = 10
    b = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if a > -1 / a:
            revert with 0, 17
        if not bool(idx):
            a = a * a
            b = b
            idx = uint255(idx) * 0.5
            continue 
        a = a * a
        b = a * b
        idx = uint255(idx) * 0.5
        continue 
    if b > -1 / a:
        revert with 0, 17
    if ext_call.return_data[32] and a * b > -1 / ext_call.return_data[32]:
        revert with 0, 17
    if not y * z:
        revert with 0, 18
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 1 > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * a * b / y * z:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t / ext_call.return_data[32] * a * b / y * z)
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and 10^ext_call.return_data[31 len 1] > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
            revert with 0, 17
        if not ext_call.return_data[32] * a * b / y * z:
            revert with 0, 18
        return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * 10^ext_call.return_data[31 len 1] / ext_call.return_data[32] * a * b / y * z)
    c = 10
    d = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if c > -1 / c:
            revert with 0, 17
        if not bool(idx):
            c = c * c
            d = d
            idx = uint255(idx) * 0.5
            continue 
        c = c * c
        d = c * d
        idx = uint255(idx) * 0.5
        continue 
    if d > -1 / c:
        revert with 0, 17
    if Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t and c * d > -1 / Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t:
        revert with 0, 17
    if not ext_call.return_data[32] * a * b / y * z:
        revert with 0, 18
    return (Mask(144, 0, ext_call.return_data[0]) * ext_call.return_data[32] * w * x / u * v / s * t * c * d / ext_call.return_data[32] * a * b / y * z)
}



}
