contract main {




// =====================  Runtime code  =====================


const decimals = 18

const genesis_supply = 166670 * 10^18

const sub_e2d4e13c(?) = 0xaf660f8ca8c2623c89049deecaf0db2a52537ffabae483bbfd54d021cb7cc1d1

const TRUSTY_ROLE = 0xdb189261133fd7647d3308512b693b47bed44004cac80fb59aa64b63a231e2c

const DEFAULT_ADMIN_ROLE = 0


mapping of uint256 balanceOf;
mapping of uint256 allowance;
uint256 totalSupply;
array of struct roleAdmin;
array of struct stor4;
array of struct stor5;
uint8 trackingVotes; offset 160
uint128 stor6; offset 160
address stor6;
mapping of struct checkpoints;
mapping of uint32 numCheckpoints;

function totalSupply() payable {
    return totalSupply
}

function getRoleAdmin(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_512
}

function trackingVotes() payable {
    return bool(trackingVotes)
}

function numCheckpoints(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return numCheckpoints[arg1]
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function getRoleMember(bytes32 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 >= roleAdmin[arg1].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'EnumerableSet: index out of bounds'
    return roleAdmin[arg1][arg2].field_96
}

function hasRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    return bool(roleAdmin[arg1][1][address(arg2)].field_0)
}

function getRoleMemberCount(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_0
}

function allowance(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return allowance[address(arg1)][address(arg2)]
}

function checkpoints(address arg1, uint32 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return checkpoints[arg1][arg2].field_0, checkpoints[arg1][arg2].field_32
}

function _fallback() payable {
    revert
}

function toggleVotes() payable {
    if not roleAdmin[0xdb189261133fd7647d3308512b693b47bed44004cac80fb59aa64b63a231e2c][1][address(msg.sender)].field_0:
        revert with 0, 'DEUS: You are not trusty'
    Mask(96, 0, stor6.field_160) = Mask(96, 0, not trackingVotes)
}

function getCurrentVotes(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not numCheckpoints[address(arg1)]:
        return 0
    if numCheckpoints[address(arg1)] < 1:
        revert with 'NH{q', 17
    return checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32
}

function setDEIAddress(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not roleAdmin[0xdb189261133fd7647d3308512b693b47bed44004cac80fb59aa64b63a231e2c][1][address(msg.sender)].field_0:
        revert with 0, 'DEUS: You are not trusty'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'DEUS::setDEIAddress: Zero address detected'
    address(stor6.field_0) = arg1
    emit DEIAddressSet(arg1);
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function grantRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if not roleAdmin[roleAdmin[arg1].field_512][1][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: sender must be an admin to grant'
    if not roleAdmin[arg1][1][address(arg2)].field_0:
        roleAdmin[arg1].field_0++
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = 0
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_96 = arg2
        roleAdmin[arg1][1][address(arg2)].field_0 = roleAdmin[arg1].field_0
        emit RoleGranted(arg1, arg2, msg.sender);
}

function burn(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn from the zero address'
    if arg1 > balanceOf[address(msg.sender)]:
        revert with 0, 32, 34, 0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[162 len 30] >> 16, 0
    if balanceOf[address(msg.sender)] < arg1:
        revert with 'NH{q', 17
    balanceOf[address(msg.sender)] -= arg1
    if arg1 > totalSupply:
        revert with 0, 'SafeMath: subtraction overflow', 0
    if totalSupply < arg1:
        revert with 'NH{q', 17
    totalSupply -= arg1
    emit Transfer(arg1, msg.sender, 0);
}

function decreaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if arg2 > allowance[msg.sender][address(arg1)]:
        revert with 0, 32, 37, 0x7345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a6572, mem[165 len 27] >> 40, 0
    if allowance[msg.sender][address(arg1)] < arg2:
        revert with 'NH{q', 17
    if not msg.sender:
        revert with 0, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] - arg2
    emit Approval((allowance[msg.sender][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function increaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] > !arg2:
        revert with 'NH{q', 17
    if allowance[msg.sender][address(arg1)] + arg2 < allowance[msg.sender][address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] + arg2
    emit Approval((allowance[msg.sender][address(arg1)] + arg2), msg.sender, arg1);
    return 1
}

function mint(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require ext_code.size(address(stor6.field_0))
    staticcall address(stor6.field_0).0x15ea919c with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if bool(ext_call.return_data[0]) != 1:
        if not roleAdmin[0xaf660f8ca8c2623c89049deecaf0db2a52537ffabae483bbfd54d021cb7cc1d1][1][address(msg.sender)].field_0:
            revert with 0, 'DEUS: Only dei pools or staking contracts are allowed to do this operation'
    if not arg1:
        revert with 0, 'ERC20: mint to the zero address'
    if totalSupply > !arg2:
        revert with 'NH{q', 17
    if totalSupply + arg2 < totalSupply:
        revert with 0, 'SafeMath: addition overflow'
    totalSupply += arg2
    if balanceOf[address(arg1)] > !arg2:
        revert with 'NH{q', 17
    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, 0, arg1);
}

function burnFrom(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if arg2 > allowance[address(arg1)][address(msg.sender)]:
        revert with 0, 32, 36, 0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[164 len 28] >> 32, 0
    if allowance[address(arg1)][address(msg.sender)] < arg2:
        revert with 'NH{q', 17
    if not arg1:
        revert with 0, 'ERC20: approve from the zero address'
    if not msg.sender:
        revert with 0, 'ERC20: approve to the zero address'
    allowance[address(arg1)][address(msg.sender)] -= arg2
    emit Approval((allowance[address(arg1)][address(msg.sender)] - arg2), arg1, msg.sender);
    if not arg1:
        revert with 0, 'ERC20: burn from the zero address'
    if arg2 > balanceOf[address(arg1)]:
        revert with 0, 32, 34, 0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[258 len 30] >> 16, 0
    if balanceOf[address(arg1)] < arg2:
        revert with 'NH{q', 17
    balanceOf[address(arg1)] -= arg2
    if arg2 > totalSupply:
        revert with 0, 'SafeMath: subtraction overflow', 0
    if totalSupply < arg2:
        revert with 'NH{q', 17
    totalSupply -= arg2
    emit Transfer(arg2, arg1, 0);
}

function renounceRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if arg2 != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: can only renounce roles for self'
    if roleAdmin[arg1][1][address(arg2)].field_0:
        if roleAdmin[arg1][1][address(arg2)].field_0 < 1:
            revert with 'NH{q', 17
        if roleAdmin[arg1].field_0 < 1:
            revert with 'NH{q', 17
        if roleAdmin[arg1].field_0 - 1 >= roleAdmin[arg1].field_0:
            revert with 'NH{q', 50
        if roleAdmin[arg1][1][address(arg2)].field_0 - 1 >= roleAdmin[arg1].field_0:
            revert with 'NH{q', 50
        roleAdmin[arg1][roleAdmin[arg1][1][address(arg2)].field_0].field_0 = roleAdmin[arg1][roleAdmin[arg1].field_0].field_0
        if 1 > !(roleAdmin[arg1][1][address(arg2)].field_0 - 1):
            revert with 'NH{q', 17
        roleAdmin[arg1][1][roleAdmin[arg1][roleAdmin[arg1].field_0].field_0].field_0 = roleAdmin[arg1][1][address(arg2)].field_0
        if not roleAdmin[arg1].field_0:
            revert with 'NH{q', 49
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = 0
        roleAdmin[arg1].field_0--
        roleAdmin[arg1][1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function revokeRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if not roleAdmin[roleAdmin[arg1].field_512][1][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: sender must be an admin to revoke'
    if roleAdmin[arg1][1][address(arg2)].field_0:
        if roleAdmin[arg1][1][address(arg2)].field_0 < 1:
            revert with 'NH{q', 17
        if roleAdmin[arg1].field_0 < 1:
            revert with 'NH{q', 17
        if roleAdmin[arg1].field_0 - 1 >= roleAdmin[arg1].field_0:
            revert with 'NH{q', 50
        if roleAdmin[arg1][1][address(arg2)].field_0 - 1 >= roleAdmin[arg1].field_0:
            revert with 'NH{q', 50
        roleAdmin[arg1][roleAdmin[arg1][1][address(arg2)].field_0].field_0 = roleAdmin[arg1][roleAdmin[arg1].field_0].field_0
        if 1 > !(roleAdmin[arg1][1][address(arg2)].field_0 - 1):
            revert with 'NH{q', 17
        roleAdmin[arg1][1][roleAdmin[arg1][roleAdmin[arg1].field_0].field_0].field_0 = roleAdmin[arg1][1][address(arg2)].field_0
        if not roleAdmin[arg1].field_0:
            revert with 'NH{q', 49
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = 0
        roleAdmin[arg1].field_0--
        roleAdmin[arg1][1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function getPriorVotes(address arg1, uint256 arg2) payable {
    mem[64] = 96
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if arg2 >= block.number:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'DEUS::getPriorVotes: not yet determined'
    if not numCheckpoints[address(arg1)]:
        return 0
    if numCheckpoints[address(arg1)] < 1:
        revert with 'NH{q', 17
    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 <= arg2:
        if numCheckpoints[address(arg1)] < 1:
            revert with 'NH{q', 17
        return checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32
    if arg2 < checkpoints[address(arg1)][0].field_0:
        return 0
    if numCheckpoints[address(arg1)] < 1:
        revert with 'NH{q', 17
    idx = 0
    while uint32(numCheckpoints[address(arg1)] - 1) > uint32(idx):
        if uint32(numCheckpoints[address(arg1)] - 1) < uint32(idx):
            revert with 'NH{q', 17
        if uint32(numCheckpoints[address(arg1)] - 1) < uint32(uint32(numCheckpoints[address(arg1)] - 1) - uint32(idx)) / 2:
            revert with 'NH{q', 17
        mem[0] = uint32(uint32(numCheckpoints[address(arg1)] - 1) - (uint32(uint32(numCheckpoints[address(arg1)] - 1) - uint32(idx)) / 2))
        mem[32] = sha3(address(arg1), 7)
        _33 = mem[64]
        mem[64] = mem[64] + 64
        mem[_33] = checkpoints[address(arg1)][uint32(stor8[address(arg1)] - 1) - (uint32(uint32(stor8[address(arg1)] - 1) - uint32(idx)) / 2) << 224].field_0
        mem[_33 + 32] = checkpoints[address(arg1)][uint32(stor8[address(arg1)] - 1) - (uint32(uint32(stor8[address(arg1)] - 1) - uint32(idx)) / 2) << 224].field_32
        if arg2 == checkpoints[address(arg1)][uint32(stor8[address(arg1)] - 1) - (uint32(uint32(stor8[address(arg1)] - 1) - uint32(idx)) / 2) << 224].field_0:
            return checkpoints[address(arg1)][uint32(stor8[address(arg1)] - 1) - (uint32(uint32(stor8[address(arg1)] - 1) - uint32(idx)) / 2) << 224].field_32
        if arg2 > checkpoints[address(arg1)][uint32(stor8[address(arg1)] - 1) - (uint32(uint32(stor8[address(arg1)] - 1) - uint32(idx)) / 2) << 224].field_0:
            idx = uint32(numCheckpoints[address(arg1)] - 1) - (uint32(uint32(numCheckpoints[address(arg1)] - 1) - uint32(idx)) / 2)
            continue 
        if uint32(uint32(numCheckpoints[address(arg1)] - 1) - (uint32(uint32(numCheckpoints[address(arg1)] - 1) - uint32(idx)) / 2)) < 1:
            revert with 'NH{q', 17
        idx = idx
        continue 
    return checkpoints[address(arg1)][idx << 224].field_32
}

function name() payable {
    if bool(stor5.length):
        if bool(stor5.length) == uint255(stor5.length) * 0.5 < 32:
            revert with 'NH{q', 34
        if bool(stor5.length):
            if bool(stor5.length) == uint255(stor5.length) * 0.5 < 32:
                revert with 'NH{q', 34
            if Mask(256, -1, stor5.length):
                if 31 < uint255(stor5.length) * 0.5:
                    mem[128] = uint256(stor5.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor5.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor5[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor5.length), data=mem[128 len ceil32(uint255(stor5.length) * 0.5)])
                mem[128] = 256 * stor5.length.field_8
        else:
            if bool(stor5.length) == stor5.length.field_1 < 32:
                revert with 'NH{q', 34
            if stor5.length.field_1:
                if 31 < stor5.length.field_1:
                    mem[128] = uint256(stor5.field_0)
                    idx = 128
                    s = 0
                    while stor5.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor5[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor5.length), data=mem[128 len ceil32(uint255(stor5.length) * 0.5)])
                mem[128] = 256 * stor5.length.field_8
        mem[ceil32(uint255(stor5.length) * 0.5) + 192 len ceil32(uint255(stor5.length) * 0.5)] = mem[128 len ceil32(uint255(stor5.length) * 0.5)]
        if ceil32(uint255(stor5.length) * 0.5) > uint255(stor5.length) * 0.5:
            mem[ceil32(uint255(stor5.length) * 0.5) + (uint255(stor5.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor5.length), data=mem[128 len ceil32(uint255(stor5.length) * 0.5)], mem[(2 * ceil32(uint255(stor5.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor5.length) * 0.5)]), 
    if bool(stor5.length) == stor5.length.field_1 < 32:
        revert with 'NH{q', 34
    if bool(stor5.length):
        if bool(stor5.length) == uint255(stor5.length) * 0.5 < 32:
            revert with 'NH{q', 34
        if Mask(256, -1, stor5.length):
            if 31 < uint255(stor5.length) * 0.5:
                mem[128] = uint256(stor5.field_0)
                idx = 128
                s = 0
                while (uint255(stor5.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor5[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor5.length % 128, data=mem[128 len ceil32(stor5.length.field_1)])
            mem[128] = 256 * stor5.length.field_8
    else:
        if bool(stor5.length) == stor5.length.field_1 < 32:
            revert with 'NH{q', 34
        if stor5.length.field_1:
            if 31 < stor5.length.field_1:
                mem[128] = uint256(stor5.field_0)
                idx = 128
                s = 0
                while stor5.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor5[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor5.length % 128, data=mem[128 len ceil32(stor5.length.field_1)])
            mem[128] = 256 * stor5.length.field_8
    mem[ceil32(stor5.length.field_1) + 192 len ceil32(stor5.length.field_1)] = mem[128 len ceil32(stor5.length.field_1)]
    if ceil32(stor5.length.field_1) > stor5.length.field_1:
        mem[ceil32(stor5.length.field_1) + stor5.length.field_1 + 192] = 0
    return Array(len=stor5.length % 128, data=mem[128 len ceil32(stor5.length.field_1)], mem[(2 * ceil32(stor5.length.field_1)) + 192 len 2 * ceil32(stor5.length.field_1)]), 
}

function symbol() payable {
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 'NH{q', 34
        if bool(stor4.length):
            if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
                revert with 'NH{q', 34
            if Mask(256, -1, stor4.length):
                if 31 < uint255(stor4.length) * 0.5:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor4.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        else:
            if bool(stor4.length) == stor4.length.field_1 < 32:
                revert with 'NH{q', 34
            if stor4.length.field_1:
                if 31 < stor4.length.field_1:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while stor4.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        mem[ceil32(uint255(stor4.length) * 0.5) + 192 len ceil32(uint255(stor4.length) * 0.5)] = mem[128 len ceil32(uint255(stor4.length) * 0.5)]
        if ceil32(uint255(stor4.length) * 0.5) > uint255(stor4.length) * 0.5:
            mem[ceil32(uint255(stor4.length) * 0.5) + (uint255(stor4.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)], mem[(2 * ceil32(uint255(stor4.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor4.length) * 0.5)]), 
    if bool(stor4.length) == stor4.length.field_1 < 32:
        revert with 'NH{q', 34
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 'NH{q', 34
        if Mask(256, -1, stor4.length):
            if 31 < uint255(stor4.length) * 0.5:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while (uint255(stor4.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    else:
        if bool(stor4.length) == stor4.length.field_1 < 32:
            revert with 'NH{q', 34
        if stor4.length.field_1:
            if 31 < stor4.length.field_1:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while stor4.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    mem[ceil32(stor4.length.field_1) + 192 len ceil32(stor4.length.field_1)] = mem[128 len ceil32(stor4.length.field_1)]
    if ceil32(stor4.length.field_1) > stor4.length.field_1:
        mem[ceil32(stor4.length.field_1) + stor4.length.field_1 + 192] = 0
    return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)], mem[(2 * ceil32(stor4.length.field_1)) + 192 len 2 * ceil32(stor4.length.field_1)]), 
}

function transferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not trackingVotes:
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
        if not arg2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
        if arg3 > balanceOf[address(arg1)]:
            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
    else:
        if arg1 == arg2:
            if not arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
            if not arg2:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
            if arg3 > balanceOf[address(arg1)]:
                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
        else:
            if Mask(96, 0, arg3) <= 0:
                if not arg1:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                if not arg2:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                if arg3 > balanceOf[address(arg1)]:
                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
            else:
                if not arg1:
                    if not arg2:
                        if not arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not arg2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if arg3 > balanceOf[address(arg1)]:
                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
                    else:
                        if not numCheckpoints[address(arg2)]:
                            if 0 > -Mask(96, 0, arg3) + test266151307():
                                revert with 'NH{q', 17
                            if Mask(96, 0, arg3) < 0:
                                revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[167 len 25] >> 56, 0
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                            0
                            if numCheckpoints[address(arg2)] <= 0:
                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                if not arg1:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg2:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg3 > balanceOf[address(arg1)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if numCheckpoints[address(arg2)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[address(arg2)] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, arg3)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                    if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                        else:
                            if numCheckpoints[address(arg2)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 > -Mask(96, 0, arg3) + test266151307():
                                revert with 'NH{q', 17
                            if Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32) < checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32:
                                revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[167 len 25] >> 56, 0
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                            0
                            if numCheckpoints[address(arg2)] <= 0:
                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                if not arg1:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg2:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg3 > balanceOf[address(arg1)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if numCheckpoints[address(arg2)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[address(arg2)] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                    emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                    if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                else:
                    if not numCheckpoints[address(arg1)]:
                        if Mask(96, 0, arg3) > 0:
                            revert with 0, 32, 40, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[168 len 24] >> 64, 0
                        if 0 < Mask(96, 0, arg3):
                            revert with 'NH{q', 17
                        if block.number >= 4294967296:
                            revert with 0, 
                                        32,
                                        52,
                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                        0
                        if numCheckpoints[address(arg1)] <= 0:
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, -Mask(96, 0, arg3))
                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg3)), arg1);
                            if not arg2:
                                if not arg1:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg2:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg3 > balanceOf[address(arg1)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if not numCheckpoints[address(arg2)]:
                                    if 0 > -Mask(96, 0, arg3) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg3) < 0:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg2)] <= 0:
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                        if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg2:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg3 > balanceOf[address(arg1)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, arg3)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                else:
                                    if numCheckpoints[address(arg2)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 > -Mask(96, 0, arg3) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32) < checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg2)] <= 0:
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg2:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg3 > balanceOf[address(arg1)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                        else:
                            if numCheckpoints[address(arg1)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg3))
                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg3)), arg1);
                                if not arg2:
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg2)]:
                                        if 0 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg3) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, arg3)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32) < checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                            else:
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, -Mask(96, 0, arg3))
                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg3)), arg1);
                                if not arg2:
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg2)]:
                                        if 0 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg3) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, arg3)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32) < checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                    else:
                        if numCheckpoints[address(arg1)] < 1:
                            revert with 'NH{q', 17
                        if Mask(96, 0, arg3) > checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                            revert with 0, 32, 40, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[168 len 24] >> 64, 0
                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 < Mask(96, 0, arg3):
                            revert with 'NH{q', 17
                        if block.number >= 4294967296:
                            revert with 0, 
                                        32,
                                        52,
                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                        0
                        if numCheckpoints[address(arg1)] <= 0:
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg3))
                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg3)), arg1);
                            if not arg2:
                                if not arg1:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg2:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg3 > balanceOf[address(arg1)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if not numCheckpoints[address(arg2)]:
                                    if 0 > -Mask(96, 0, arg3) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg3) < 0:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg2)] <= 0:
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                        if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg2:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg3 > balanceOf[address(arg1)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, arg3)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                else:
                                    if numCheckpoints[address(arg2)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 > -Mask(96, 0, arg3) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32) < checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg2)] <= 0:
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg2:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg3 > balanceOf[address(arg1)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                        else:
                            if numCheckpoints[address(arg1)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg3))
                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg3)), arg1);
                                if not arg2:
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg2)]:
                                        if 0 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg3) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, arg3)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32) < checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                            else:
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg3))
                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg3)), arg1);
                                if not arg2:
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg2:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg3 > balanceOf[address(arg1)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg2)]:
                                        if 0 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg3) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, arg3)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, arg3)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg3), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg2)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 > -Mask(96, 0, arg3) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32) < checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg2)] <= 0:
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg2:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg3 > balanceOf[address(arg1)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg2)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg2)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg2)][stor8[address(arg2)]].field_32 = Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg2)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg2)] = uint32(numCheckpoints[address(arg2)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg3) + checkpoints[address(arg2)][stor8[address(arg2)] - 1 << 224].field_32), arg2);
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg2:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg3 > balanceOf[address(arg1)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
    ('le', ('param', 'arg3'), ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'balanceOf', 0))))
    if balanceOf[address(arg1)] < arg3:
        revert with 'NH{q', 17
    balanceOf[address(arg1)] -= arg3
    if balanceOf[arg2] > !arg3:
        revert with 'NH{q', 17
    if balanceOf[arg2] + arg3 < balanceOf[arg2]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg2)] = balanceOf[arg2] + arg3
    emit Transfer(arg3, arg1, arg2);
    if allowance[address(arg1)][msg.sender] < arg3:
        revert with 'NH{q', 17
    if not arg1:
        revert with 0, 'ERC20: approve from the zero address'
    if not msg.sender:
        revert with 0, 'ERC20: approve to the zero address'
    allowance[address(arg1)][address(msg.sender)] = allowance[address(arg1)][msg.sender] - arg3
    emit Approval((allowance[address(arg1)][msg.sender] - arg3), arg1, msg.sender);
    return 1
}

function transfer(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not trackingVotes:
        if not msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
        if arg2 > balanceOf[address(msg.sender)]:
            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
    else:
        if msg.sender == arg1:
            if not msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
            if not arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
            if arg2 > balanceOf[address(msg.sender)]:
                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
        else:
            if Mask(96, 0, arg2) <= 0:
                if not msg.sender:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                if not arg1:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                if arg2 > balanceOf[address(msg.sender)]:
                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
            else:
                if not msg.sender:
                    if not arg1:
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if arg2 > balanceOf[address(msg.sender)]:
                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[166 len 26] >> 48, 0
                    else:
                        if not numCheckpoints[address(arg1)]:
                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                revert with 'NH{q', 17
                            if Mask(96, 0, arg2) < 0:
                                revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[167 len 25] >> 56, 0
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                            0
                            if numCheckpoints[address(arg1)] <= 0:
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                if not msg.sender:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg2 > balanceOf[address(msg.sender)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                        else:
                            if numCheckpoints[address(arg1)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                revert with 'NH{q', 17
                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[167 len 25] >> 56, 0
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                            0
                            if numCheckpoints[address(arg1)] <= 0:
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                if not msg.sender:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg2 > balanceOf[address(msg.sender)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                    emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                else:
                    if not numCheckpoints[address(msg.sender)]:
                        if Mask(96, 0, arg2) > 0:
                            revert with 0, 32, 40, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[168 len 24] >> 64, 0
                        if 0 < Mask(96, 0, arg2):
                            revert with 'NH{q', 17
                        if block.number >= 4294967296:
                            revert with 0, 
                                        32,
                                        52,
                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                        0
                        if numCheckpoints[address(msg.sender)] <= 0:
                            checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_0 = uint32(block.number)
                            checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                            if 1 > -numCheckpoints[address(msg.sender)] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(msg.sender)] = uint32(numCheckpoints[address(msg.sender)] + 1)
                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), msg.sender);
                            if not arg1:
                                if not msg.sender:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg2 > balanceOf[address(msg.sender)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if not numCheckpoints[address(arg1)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                        else:
                            if numCheckpoints[address(msg.sender)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_0 == uint32(block.number):
                                if numCheckpoints[address(msg.sender)] < 1:
                                    revert with 'NH{q', 17
                                checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), msg.sender);
                                if not arg1:
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                            else:
                                checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_0 = uint32(block.number)
                                checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                if 1 > -numCheckpoints[address(msg.sender)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(msg.sender)] = uint32(numCheckpoints[address(msg.sender)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), msg.sender);
                                if not arg1:
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                    else:
                        if numCheckpoints[address(msg.sender)] < 1:
                            revert with 'NH{q', 17
                        if Mask(96, 0, arg2) > checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32:
                            revert with 0, 32, 40, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[168 len 24] >> 64, 0
                        if checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                            revert with 'NH{q', 17
                        if block.number >= 4294967296:
                            revert with 0, 
                                        32,
                                        52,
                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[276 len 12] >> 160,
                                        0
                        if numCheckpoints[address(msg.sender)] <= 0:
                            checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_0 = uint32(block.number)
                            checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_32 = Mask(96, 0, checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                            if 1 > -numCheckpoints[address(msg.sender)] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(msg.sender)] = uint32(numCheckpoints[address(msg.sender)] + 1)
                            emit VoterVotesChanged(checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 - Mask(96, 0, arg2)), msg.sender);
                            if not arg1:
                                if not msg.sender:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if arg2 > balanceOf[address(msg.sender)]:
                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                            else:
                                if not numCheckpoints[address(arg1)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                        revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if arg2 > balanceOf[address(msg.sender)]:
                                            revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                        else:
                            if numCheckpoints[address(msg.sender)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_0 == uint32(block.number):
                                if numCheckpoints[address(msg.sender)] < 1:
                                    revert with 'NH{q', 17
                                checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                emit VoterVotesChanged(checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 - Mask(96, 0, arg2)), msg.sender);
                                if not arg1:
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[358 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[359 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[550 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                            else:
                                checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_0 = uint32(block.number)
                                checkpoints[address(msg.sender)][stor8[address(msg.sender)]].field_32 = Mask(96, 0, checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                if 1 > -numCheckpoints[address(msg.sender)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(msg.sender)] = uint32(numCheckpoints[address(msg.sender)] + 1)
                                emit VoterVotesChanged(checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(msg.sender)][stor8[address(msg.sender)] - 1 << 224].field_32 - Mask(96, 0, arg2)), msg.sender);
                                if not arg1:
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if arg2 > balanceOf[address(msg.sender)]:
                                        revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[422 len 26] >> 48, 0
                                else:
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 32, 39, 0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[423 len 25] >> 56, 0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if arg2 > balanceOf[address(msg.sender)]:
                                                revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[614 len 26] >> 48, 0
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if arg2 > balanceOf[address(msg.sender)]:
                                                    revert with 0, 32, 38, 0x6545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63, mem[678 len 26] >> 48, 0
    ('le', ('param', 'arg2'), ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))))
    if balanceOf[address(msg.sender)] < arg2:
        revert with 'NH{q', 17
    balanceOf[address(msg.sender)] -= arg2
    if balanceOf[arg1] > !arg2:
        revert with 'NH{q', 17
    if balanceOf[arg1] + arg2 < balanceOf[arg1]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] = balanceOf[arg1] + arg2
    emit Transfer(arg2, msg.sender, arg1);
    return 1
}

function pool_mint(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require ext_code.size(address(stor6.field_0))
    staticcall address(stor6.field_0).0x15ea919c with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if bool(ext_call.return_data[0]) != 1:
        if not roleAdmin[0xaf660f8ca8c2623c89049deecaf0db2a52537ffabae483bbfd54d021cb7cc1d1][1][address(msg.sender)].field_0:
            revert with 0, 'DEUS: Only dei pools or staking contracts are allowed to do this operation'
    if trackingVotes:
        if not numCheckpoints[this.address]:
            if 0 > -Mask(96, 0, arg2) + test266151307():
                revert with 'NH{q', 17
            if Mask(96, 0, arg2) < 0:
                revert with 0, 
                            32,
                            36,
                            0x73444555533a3a706f6f6c5f6d696e743a206e657720766f746573206f766572666c6f77, mem[ceil32(return_data.size) + 164 len 28] >> 32,
                            0
            if block.number >= 4294967296:
                revert with 0, 
                            32,
                            52,
                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                            0
            if numCheckpoints[this.address] <= 0:
                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, arg2)
                if 1 > -numCheckpoints[this.address] + test266151307():
                    revert with 'NH{q', 17
                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                if arg1 != this.address:
                    if Mask(96, 0, arg2) > 0:
                        if not this.address:
                            if not arg1:
                                revert with 0, 'ERC20: mint to the zero address'
                            if not numCheckpoints[address(arg1)]:
                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                    revert with 'NH{q', 17
                                if Mask(96, 0, arg2) < 0:
                                    revert with 0, 
                                                32,
                                                39,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                0
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(arg1)] <= 0:
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                    else:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                            else:
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                    revert with 'NH{q', 17
                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                    revert with 0, 
                                                32,
                                                39,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                0
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(arg1)] <= 0:
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                    else:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                        else:
                            if not numCheckpoints[address(this.address)]:
                                if Mask(96, 0, arg2) > 0:
                                    revert with 0, 
                                                32,
                                                40,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                0
                                if 0 < Mask(96, 0, arg2):
                                    revert with 'NH{q', 17
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(this.address)] <= 0:
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                    if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                            else:
                                if numCheckpoints[address(this.address)] < 1:
                                    revert with 'NH{q', 17
                                if Mask(96, 0, arg2) > checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                    revert with 0, 
                                                32,
                                                40,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                0
                                if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                    revert with 'NH{q', 17
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(this.address)] <= 0:
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                    if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
            else:
                if numCheckpoints[this.address] < 1:
                    revert with 'NH{q', 17
                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                    if numCheckpoints[this.address] < 1:
                        revert with 'NH{q', 17
                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, arg2)
                    emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                    if arg1 != this.address:
                        if Mask(96, 0, arg2) > 0:
                            if not this.address:
                                if not arg1:
                                    revert with 0, 'ERC20: mint to the zero address'
                                if not numCheckpoints[address(arg1)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                            else:
                                if not numCheckpoints[address(this.address)]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 360 len 24] >> 64,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 360 len 24] >> 64,
                                                    0
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                else:
                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, arg2)
                    if 1 > -numCheckpoints[this.address] + test266151307():
                        revert with 'NH{q', 17
                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                    emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                    if arg1 != this.address:
                        if Mask(96, 0, arg2) > 0:
                            if not this.address:
                                if not arg1:
                                    revert with 0, 'ERC20: mint to the zero address'
                                if not numCheckpoints[address(arg1)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                            else:
                                if not numCheckpoints[address(this.address)]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                    0
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
        else:
            if numCheckpoints[this.address] < 1:
                revert with 'NH{q', 17
            if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                revert with 'NH{q', 17
            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[this.address][stor8[this.address] - 1 << 224].field_32) < checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                revert with 0, 
                            32,
                            36,
                            0x73444555533a3a706f6f6c5f6d696e743a206e657720766f746573206f766572666c6f77, mem[ceil32(return_data.size) + 164 len 28] >> 32,
                            0
            if block.number >= 4294967296:
                revert with 0, 
                            32,
                            52,
                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                            0
            if numCheckpoints[this.address] <= 0:
                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[this.address][stor8[this.address] - 1 << 224].field_32)
                if 1 > -numCheckpoints[this.address] + test266151307():
                    revert with 'NH{q', 17
                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[this.address][stor8[this.address] - 1 << 224].field_32), this.address);
                if arg1 != this.address:
                    if Mask(96, 0, arg2) > 0:
                        if not this.address:
                            if not arg1:
                                revert with 0, 'ERC20: mint to the zero address'
                            if not numCheckpoints[address(arg1)]:
                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                    revert with 'NH{q', 17
                                if Mask(96, 0, arg2) < 0:
                                    revert with 0, 
                                                32,
                                                39,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                0
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(arg1)] <= 0:
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                    else:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                            else:
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                    revert with 'NH{q', 17
                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                    revert with 0, 
                                                32,
                                                39,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                0
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(arg1)] <= 0:
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                    else:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                        else:
                            if not numCheckpoints[address(this.address)]:
                                if Mask(96, 0, arg2) > 0:
                                    revert with 0, 
                                                32,
                                                40,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                0
                                if 0 < Mask(96, 0, arg2):
                                    revert with 'NH{q', 17
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(this.address)] <= 0:
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                    if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                            else:
                                if numCheckpoints[address(this.address)] < 1:
                                    revert with 'NH{q', 17
                                if Mask(96, 0, arg2) > checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                    revert with 0, 
                                                32,
                                                40,
                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                0
                                if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                    revert with 'NH{q', 17
                                if block.number >= 4294967296:
                                    revert with 0, 
                                                32,
                                                52,
                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                0
                                if numCheckpoints[address(this.address)] <= 0:
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                    if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if not numCheckpoints[address(arg1)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(arg1)] <= 0:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            else:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
            else:
                if numCheckpoints[this.address] < 1:
                    revert with 'NH{q', 17
                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                    if numCheckpoints[this.address] < 1:
                        revert with 'NH{q', 17
                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[this.address][stor8[this.address] - 1 << 224].field_32)
                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[this.address][stor8[this.address] - 1 << 224].field_32), this.address);
                    if arg1 != this.address:
                        if Mask(96, 0, arg2) > 0:
                            if not this.address:
                                if not arg1:
                                    revert with 0, 'ERC20: mint to the zero address'
                                if not numCheckpoints[address(arg1)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                            else:
                                if not numCheckpoints[address(this.address)]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 360 len 24] >> 64,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 360 len 24] >> 64,
                                                    0
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 551 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                else:
                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[this.address][stor8[this.address] - 1 << 224].field_32)
                    if 1 > -numCheckpoints[this.address] + test266151307():
                        revert with 'NH{q', 17
                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[this.address][stor8[this.address] - 1 << 224].field_32), this.address);
                    if arg1 != this.address:
                        if Mask(96, 0, arg2) > 0:
                            if not this.address:
                                if not arg1:
                                    revert with 0, 'ERC20: mint to the zero address'
                                if not numCheckpoints[address(arg1)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                else:
                                    if numCheckpoints[address(arg1)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(arg1)] <= 0:
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    else:
                                        if numCheckpoints[address(arg1)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                        else:
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                            else:
                                if not numCheckpoints[address(this.address)]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    40,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 424 len 24] >> 64,
                                                    0
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if not numCheckpoints[address(arg1)]:
                                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) < 0:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                        else:
                                            if numCheckpoints[address(arg1)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            39,
                                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                            0
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[address(arg1)] <= 0:
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                else:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 615 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if not numCheckpoints[address(arg1)]:
                                                if 0 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) < 0:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, arg2)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), arg1);
                                            else:
                                                if numCheckpoints[address(arg1)] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32) < checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                39,
                                                                0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 679 len 25] >> 56,
                                                                0
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[address(arg1)] <= 0:
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                    checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                else:
                                                    if numCheckpoints[address(arg1)] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[address(arg1)] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                    else:
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                                        checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32)
                                                        if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32), arg1);
    if not arg1:
        revert with 0, 'ERC20: mint to the zero address'
    if totalSupply > !arg2:
        revert with 'NH{q', 17
    if totalSupply + arg2 < totalSupply:
        revert with 0, 'SafeMath: addition overflow'
    totalSupply += arg2
    if balanceOf[address(arg1)] > !arg2:
        revert with 'NH{q', 17
    if balanceOf[address(arg1)] + arg2 < balanceOf[address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, 0, arg1);
    emit DEUSMinted(arg2, this.address, arg1);
}

function pool_burn_from(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require ext_code.size(address(stor6.field_0))
    staticcall address(stor6.field_0).0x15ea919c with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if bool(ext_call.return_data[0]) != 1:
        revert with 0, 'DEUS: Only dei pools are allowed to do this operation'
    if not trackingVotes:
        if not arg1:
            revert with 0, 'ERC20: burn from the zero address'
        if arg2 > balanceOf[address(arg1)]:
            revert with 0, 
                        32,
                        34,
                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 162 len 30] >> 16,
                        0
        if balanceOf[address(arg1)] < arg2:
            revert with 'NH{q', 17
        balanceOf[address(arg1)] -= arg2
        if arg2 > totalSupply:
            revert with 0, 'SafeMath: subtraction overflow', 0
        if totalSupply < arg2:
            revert with 'NH{q', 17
        totalSupply -= arg2
        emit Transfer(arg2, arg1, 0);
        if arg2 > allowance[address(arg1)][msg.sender]:
            revert with 0, 
                        32,
                        36,
                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 324 len 28] >> 32,
                        0
    else:
        if arg1 == this.address:
            if not numCheckpoints[this.address]:
                if Mask(96, 0, arg2) > 0:
                    revert with 0, 
                                32,
                                42,
                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 170 len 22] >> 80,
                                0
                if 0 < Mask(96, 0, arg2):
                    revert with 'NH{q', 17
                if block.number >= 4294967296:
                    revert with 0, 
                                32,
                                52,
                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                0
                if numCheckpoints[this.address] <= 0:
                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                    if 1 > -numCheckpoints[this.address] + test266151307():
                        revert with 'NH{q', 17
                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                    if not arg1:
                        revert with 0, 'ERC20: burn from the zero address'
                    if arg2 > balanceOf[address(arg1)]:
                        revert with 0, 
                                    32,
                                    34,
                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                    0
                    if balanceOf[address(arg1)] < arg2:
                        revert with 'NH{q', 17
                    balanceOf[address(arg1)] -= arg2
                    if arg2 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow', 0
                    if totalSupply < arg2:
                        revert with 'NH{q', 17
                    totalSupply -= arg2
                    emit Transfer(arg2, arg1, 0);
                    if arg2 > allowance[address(arg1)][msg.sender]:
                        revert with 0, 
                                    32,
                                    36,
                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                    0
                else:
                    if numCheckpoints[this.address] < 1:
                        revert with 'NH{q', 17
                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                        if numCheckpoints[this.address] < 1:
                            revert with 'NH{q', 17
                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                        if not arg1:
                            revert with 0, 'ERC20: burn from the zero address'
                        if arg2 > balanceOf[address(arg1)]:
                            revert with 0, 
                                        32,
                                        34,
                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 354 len 30] >> 16,
                                        0
                        if balanceOf[address(arg1)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] -= arg2
                        if arg2 > totalSupply:
                            revert with 0, 'SafeMath: subtraction overflow', 0
                        if totalSupply < arg2:
                            revert with 'NH{q', 17
                        totalSupply -= arg2
                        emit Transfer(arg2, arg1, 0);
                        if arg2 > allowance[address(arg1)][msg.sender]:
                            revert with 0, 
                                        32,
                                        36,
                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 516 len 28] >> 32,
                                        0
                    else:
                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                        if 1 > -numCheckpoints[this.address] + test266151307():
                            revert with 'NH{q', 17
                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                        if not arg1:
                            revert with 0, 'ERC20: burn from the zero address'
                        if arg2 > balanceOf[address(arg1)]:
                            revert with 0, 
                                        32,
                                        34,
                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                        0
                        if balanceOf[address(arg1)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] -= arg2
                        if arg2 > totalSupply:
                            revert with 0, 'SafeMath: subtraction overflow', 0
                        if totalSupply < arg2:
                            revert with 'NH{q', 17
                        totalSupply -= arg2
                        emit Transfer(arg2, arg1, 0);
                        if arg2 > allowance[address(arg1)][msg.sender]:
                            revert with 0, 
                                        32,
                                        36,
                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                        0
            else:
                if numCheckpoints[this.address] < 1:
                    revert with 'NH{q', 17
                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                    revert with 0, 
                                32,
                                42,
                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 170 len 22] >> 80,
                                0
                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                    revert with 'NH{q', 17
                if block.number >= 4294967296:
                    revert with 0, 
                                32,
                                52,
                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                0
                if numCheckpoints[this.address] <= 0:
                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                    if 1 > -numCheckpoints[this.address] + test266151307():
                        revert with 'NH{q', 17
                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                    if not arg1:
                        revert with 0, 'ERC20: burn from the zero address'
                    if arg2 > balanceOf[address(arg1)]:
                        revert with 0, 
                                    32,
                                    34,
                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                    0
                    if balanceOf[address(arg1)] < arg2:
                        revert with 'NH{q', 17
                    balanceOf[address(arg1)] -= arg2
                    if arg2 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow', 0
                    if totalSupply < arg2:
                        revert with 'NH{q', 17
                    totalSupply -= arg2
                    emit Transfer(arg2, arg1, 0);
                    if arg2 > allowance[address(arg1)][msg.sender]:
                        revert with 0, 
                                    32,
                                    36,
                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                    0
                else:
                    if numCheckpoints[this.address] < 1:
                        revert with 'NH{q', 17
                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                        if numCheckpoints[this.address] < 1:
                            revert with 'NH{q', 17
                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                        if not arg1:
                            revert with 0, 'ERC20: burn from the zero address'
                        if arg2 > balanceOf[address(arg1)]:
                            revert with 0, 
                                        32,
                                        34,
                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 354 len 30] >> 16,
                                        0
                        if balanceOf[address(arg1)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] -= arg2
                        if arg2 > totalSupply:
                            revert with 0, 'SafeMath: subtraction overflow', 0
                        if totalSupply < arg2:
                            revert with 'NH{q', 17
                        totalSupply -= arg2
                        emit Transfer(arg2, arg1, 0);
                        if arg2 > allowance[address(arg1)][msg.sender]:
                            revert with 0, 
                                        32,
                                        36,
                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 516 len 28] >> 32,
                                        0
                    else:
                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                        if 1 > -numCheckpoints[this.address] + test266151307():
                            revert with 'NH{q', 17
                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                        if not arg1:
                            revert with 0, 'ERC20: burn from the zero address'
                        if arg2 > balanceOf[address(arg1)]:
                            revert with 0, 
                                        32,
                                        34,
                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                        0
                        if balanceOf[address(arg1)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] -= arg2
                        if arg2 > totalSupply:
                            revert with 0, 'SafeMath: subtraction overflow', 0
                        if totalSupply < arg2:
                            revert with 'NH{q', 17
                        totalSupply -= arg2
                        emit Transfer(arg2, arg1, 0);
                        if arg2 > allowance[address(arg1)][msg.sender]:
                            revert with 0, 
                                        32,
                                        36,
                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                        0
        else:
            if Mask(96, 0, arg2) <= 0:
                if not numCheckpoints[this.address]:
                    if Mask(96, 0, arg2) > 0:
                        revert with 0, 
                                    32,
                                    42,
                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 170 len 22] >> 80,
                                    0
                    if 0 < Mask(96, 0, arg2):
                        revert with 'NH{q', 17
                    if block.number >= 4294967296:
                        revert with 0, 
                                    32,
                                    52,
                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                    0
                    if numCheckpoints[this.address] <= 0:
                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                        if 1 > -numCheckpoints[this.address] + test266151307():
                            revert with 'NH{q', 17
                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                        if not arg1:
                            revert with 0, 'ERC20: burn from the zero address'
                        if arg2 > balanceOf[address(arg1)]:
                            revert with 0, 
                                        32,
                                        34,
                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                        0
                        if balanceOf[address(arg1)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] -= arg2
                        if arg2 > totalSupply:
                            revert with 0, 'SafeMath: subtraction overflow', 0
                        if totalSupply < arg2:
                            revert with 'NH{q', 17
                        totalSupply -= arg2
                        emit Transfer(arg2, arg1, 0);
                        if arg2 > allowance[address(arg1)][msg.sender]:
                            revert with 0, 
                                        32,
                                        36,
                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                        0
                    else:
                        if numCheckpoints[this.address] < 1:
                            revert with 'NH{q', 17
                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                            if numCheckpoints[this.address] < 1:
                                revert with 'NH{q', 17
                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                            if not arg1:
                                revert with 0, 'ERC20: burn from the zero address'
                            if arg2 > balanceOf[address(arg1)]:
                                revert with 0, 
                                            32,
                                            34,
                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 354 len 30] >> 16,
                                            0
                            if balanceOf[address(arg1)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] -= arg2
                            if arg2 > totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if totalSupply < arg2:
                                revert with 'NH{q', 17
                            totalSupply -= arg2
                            emit Transfer(arg2, arg1, 0);
                            if arg2 > allowance[address(arg1)][msg.sender]:
                                revert with 0, 
                                            32,
                                            36,
                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 516 len 28] >> 32,
                                            0
                        else:
                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                            if 1 > -numCheckpoints[this.address] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                            if not arg1:
                                revert with 0, 'ERC20: burn from the zero address'
                            if arg2 > balanceOf[address(arg1)]:
                                revert with 0, 
                                            32,
                                            34,
                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                            0
                            if balanceOf[address(arg1)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] -= arg2
                            if arg2 > totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if totalSupply < arg2:
                                revert with 'NH{q', 17
                            totalSupply -= arg2
                            emit Transfer(arg2, arg1, 0);
                            if arg2 > allowance[address(arg1)][msg.sender]:
                                revert with 0, 
                                            32,
                                            36,
                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                            0
                else:
                    if numCheckpoints[this.address] < 1:
                        revert with 'NH{q', 17
                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                        revert with 0, 
                                    32,
                                    42,
                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 170 len 22] >> 80,
                                    0
                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                        revert with 'NH{q', 17
                    if block.number >= 4294967296:
                        revert with 0, 
                                    32,
                                    52,
                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                    0
                    if numCheckpoints[this.address] <= 0:
                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                        if 1 > -numCheckpoints[this.address] + test266151307():
                            revert with 'NH{q', 17
                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                        if not arg1:
                            revert with 0, 'ERC20: burn from the zero address'
                        if arg2 > balanceOf[address(arg1)]:
                            revert with 0, 
                                        32,
                                        34,
                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                        0
                        if balanceOf[address(arg1)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] -= arg2
                        if arg2 > totalSupply:
                            revert with 0, 'SafeMath: subtraction overflow', 0
                        if totalSupply < arg2:
                            revert with 'NH{q', 17
                        totalSupply -= arg2
                        emit Transfer(arg2, arg1, 0);
                        if arg2 > allowance[address(arg1)][msg.sender]:
                            revert with 0, 
                                        32,
                                        36,
                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                        0
                    else:
                        if numCheckpoints[this.address] < 1:
                            revert with 'NH{q', 17
                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                            if numCheckpoints[this.address] < 1:
                                revert with 'NH{q', 17
                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                            if not arg1:
                                revert with 0, 'ERC20: burn from the zero address'
                            if arg2 > balanceOf[address(arg1)]:
                                revert with 0, 
                                            32,
                                            34,
                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 354 len 30] >> 16,
                                            0
                            if balanceOf[address(arg1)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] -= arg2
                            if arg2 > totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if totalSupply < arg2:
                                revert with 'NH{q', 17
                            totalSupply -= arg2
                            emit Transfer(arg2, arg1, 0);
                            if arg2 > allowance[address(arg1)][msg.sender]:
                                revert with 0, 
                                            32,
                                            36,
                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 516 len 28] >> 32,
                                            0
                        else:
                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                            if 1 > -numCheckpoints[this.address] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                            if not arg1:
                                revert with 0, 'ERC20: burn from the zero address'
                            if arg2 > balanceOf[address(arg1)]:
                                revert with 0, 
                                            32,
                                            34,
                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                            0
                            if balanceOf[address(arg1)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] -= arg2
                            if arg2 > totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if totalSupply < arg2:
                                revert with 'NH{q', 17
                            totalSupply -= arg2
                            emit Transfer(arg2, arg1, 0);
                            if arg2 > allowance[address(arg1)][msg.sender]:
                                revert with 0, 
                                            32,
                                            36,
                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                            0
            else:
                if not arg1:
                    if not this.address:
                        if not numCheckpoints[this.address]:
                            if Mask(96, 0, arg2) > 0:
                                revert with 0, 
                                            32,
                                            42,
                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 170 len 22] >> 80,
                                            0
                            if 0 < Mask(96, 0, arg2):
                                revert with 'NH{q', 17
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                            0
                            if numCheckpoints[this.address] <= 0:
                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                if 1 > -numCheckpoints[this.address] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                if not arg1:
                                    revert with 0, 'ERC20: burn from the zero address'
                                if arg2 > balanceOf[address(arg1)]:
                                    revert with 0, 
                                                32,
                                                34,
                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                                0
                                if balanceOf[address(arg1)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] -= arg2
                                if arg2 > totalSupply:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if totalSupply < arg2:
                                    revert with 'NH{q', 17
                                totalSupply -= arg2
                                emit Transfer(arg2, arg1, 0);
                                if arg2 > allowance[address(arg1)][msg.sender]:
                                    revert with 0, 
                                                32,
                                                36,
                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                                0
                            else:
                                if numCheckpoints[this.address] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[this.address] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: burn from the zero address'
                                    if arg2 > balanceOf[address(arg1)]:
                                        revert with 0, 
                                                    32,
                                                    34,
                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 354 len 30] >> 16,
                                                    0
                                    if balanceOf[address(arg1)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] -= arg2
                                    if arg2 > totalSupply:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if totalSupply < arg2:
                                        revert with 'NH{q', 17
                                    totalSupply -= arg2
                                    emit Transfer(arg2, arg1, 0);
                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                        revert with 0, 
                                                    32,
                                                    36,
                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 516 len 28] >> 32,
                                                    0
                                else:
                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: burn from the zero address'
                                    if arg2 > balanceOf[address(arg1)]:
                                        revert with 0, 
                                                    32,
                                                    34,
                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                                    0
                                    if balanceOf[address(arg1)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] -= arg2
                                    if arg2 > totalSupply:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if totalSupply < arg2:
                                        revert with 'NH{q', 17
                                    totalSupply -= arg2
                                    emit Transfer(arg2, arg1, 0);
                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                        revert with 0, 
                                                    32,
                                                    36,
                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                                    0
                        else:
                            if numCheckpoints[this.address] < 1:
                                revert with 'NH{q', 17
                            if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                revert with 0, 
                                            32,
                                            42,
                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 170 len 22] >> 80,
                                            0
                            if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                revert with 'NH{q', 17
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                            0
                            if numCheckpoints[this.address] <= 0:
                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                if 1 > -numCheckpoints[this.address] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                if not arg1:
                                    revert with 0, 'ERC20: burn from the zero address'
                                if arg2 > balanceOf[address(arg1)]:
                                    revert with 0, 
                                                32,
                                                34,
                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                                0
                                if balanceOf[address(arg1)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] -= arg2
                                if arg2 > totalSupply:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if totalSupply < arg2:
                                    revert with 'NH{q', 17
                                totalSupply -= arg2
                                emit Transfer(arg2, arg1, 0);
                                if arg2 > allowance[address(arg1)][msg.sender]:
                                    revert with 0, 
                                                32,
                                                36,
                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                                0
                            else:
                                if numCheckpoints[this.address] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[this.address] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: burn from the zero address'
                                    if arg2 > balanceOf[address(arg1)]:
                                        revert with 0, 
                                                    32,
                                                    34,
                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 354 len 30] >> 16,
                                                    0
                                    if balanceOf[address(arg1)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] -= arg2
                                    if arg2 > totalSupply:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if totalSupply < arg2:
                                        revert with 'NH{q', 17
                                    totalSupply -= arg2
                                    emit Transfer(arg2, arg1, 0);
                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                        revert with 0, 
                                                    32,
                                                    36,
                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 516 len 28] >> 32,
                                                    0
                                else:
                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                    if not arg1:
                                        revert with 0, 'ERC20: burn from the zero address'
                                    if arg2 > balanceOf[address(arg1)]:
                                        revert with 0, 
                                                    32,
                                                    34,
                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 418 len 30] >> 16,
                                                    0
                                    if balanceOf[address(arg1)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] -= arg2
                                    if arg2 > totalSupply:
                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                    if totalSupply < arg2:
                                        revert with 'NH{q', 17
                                    totalSupply -= arg2
                                    emit Transfer(arg2, arg1, 0);
                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                        revert with 0, 
                                                    32,
                                                    36,
                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 580 len 28] >> 32,
                                                    0
                    else:
                        if not numCheckpoints[address(this.address)]:
                            if 0 > -Mask(96, 0, arg2) + test266151307():
                                revert with 'NH{q', 17
                            if Mask(96, 0, arg2) < 0:
                                revert with 0, 
                                            32,
                                            39,
                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 167 len 25] >> 56,
                                            0
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                            0
                            if numCheckpoints[address(this.address)] <= 0:
                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                if not numCheckpoints[this.address]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                else:
                                    if numCheckpoints[this.address] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                            else:
                                if numCheckpoints[address(this.address)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                else:
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                    if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                    emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                        else:
                            if numCheckpoints[address(this.address)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                revert with 'NH{q', 17
                            if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32) < checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                revert with 0, 
                                            32,
                                            39,
                                            0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 167 len 25] >> 56,
                                            0
                            if block.number >= 4294967296:
                                revert with 0, 
                                            32,
                                            52,
                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                            0
                            if numCheckpoints[address(this.address)] <= 0:
                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                if not numCheckpoints[this.address]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                else:
                                    if numCheckpoints[this.address] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                            else:
                                if numCheckpoints[address(this.address)] < 1:
                                    revert with 'NH{q', 17
                                if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                    emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                else:
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                    checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                    if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                        revert with 'NH{q', 17
                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                    emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                else:
                    if not numCheckpoints[address(arg1)]:
                        if Mask(96, 0, arg2) > 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 168 len 24] >> 64,
                                        0
                        if 0 < Mask(96, 0, arg2):
                            revert with 'NH{q', 17
                        if block.number >= 4294967296:
                            revert with 0, 
                                        32,
                                        52,
                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                        0
                        if numCheckpoints[address(arg1)] <= 0:
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), arg1);
                            if not this.address:
                                if not numCheckpoints[this.address]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                else:
                                    if numCheckpoints[this.address] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                            else:
                                if not numCheckpoints[address(this.address)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                        if not numCheckpoints[this.address]:
                                            if Mask(96, 0, arg2) > 0:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if 0 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32) < checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                        if not numCheckpoints[this.address]:
                                            if Mask(96, 0, arg2) > 0:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if 0 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                        else:
                            if numCheckpoints[address(arg1)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), arg1);
                                if not this.address:
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                else:
                                    if not numCheckpoints[address(this.address)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32) < checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                            else:
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), arg1);
                                if not this.address:
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                                else:
                                    if not numCheckpoints[address(this.address)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32) < checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
                    else:
                        if numCheckpoints[address(arg1)] < 1:
                            revert with 'NH{q', 17
                        if Mask(96, 0, arg2) > checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32:
                            revert with 0, 
                                        32,
                                        40,
                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77, mem[ceil32(return_data.size) + 168 len 24] >> 64,
                                        0
                        if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 < Mask(96, 0, arg2):
                            revert with 'NH{q', 17
                        if block.number >= 4294967296:
                            revert with 0, 
                                        32,
                                        52,
                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 276 len 12] >> 160,
                                        0
                        if numCheckpoints[address(arg1)] <= 0:
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                            checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                            if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                revert with 'NH{q', 17
                            numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                            emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg2)), arg1);
                            if not this.address:
                                if not numCheckpoints[this.address]:
                                    if Mask(96, 0, arg2) > 0:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if 0 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                else:
                                    if numCheckpoints[this.address] < 1:
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                    0
                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                        revert with 'NH{q', 17
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[this.address] <= 0:
                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                        if not arg1:
                                            revert with 0, 'ERC20: burn from the zero address'
                                        if arg2 > balanceOf[address(arg1)]:
                                            revert with 0, 
                                                        32,
                                                        34,
                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                        0
                                        if balanceOf[address(arg1)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] -= arg2
                                        if arg2 > totalSupply:
                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                        if totalSupply < arg2:
                                            revert with 'NH{q', 17
                                        totalSupply -= arg2
                                        emit Transfer(arg2, arg1, 0);
                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                            revert with 0, 
                                                        32,
                                                        36,
                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                        0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                            else:
                                if not numCheckpoints[address(this.address)]:
                                    if 0 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, arg2) < 0:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                        if not numCheckpoints[this.address]:
                                            if Mask(96, 0, arg2) > 0:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if 0 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                else:
                                    if numCheckpoints[address(this.address)] < 1:
                                        revert with 'NH{q', 17
                                    if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                        revert with 'NH{q', 17
                                    if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32) < checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                        revert with 0, 
                                                    32,
                                                    39,
                                                    0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                    0
                                    if block.number >= 4294967296:
                                        revert with 0, 
                                                    32,
                                                    52,
                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                    0
                                    if numCheckpoints[address(this.address)] <= 0:
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                        checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                        if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                            revert with 'NH{q', 17
                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                        emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                        if not numCheckpoints[this.address]:
                                            if Mask(96, 0, arg2) > 0:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if 0 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                            0
                                            if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                revert with 'NH{q', 17
                                            if block.number >= 4294967296:
                                                revert with 0, 
                                                            32,
                                                            52,
                                                            0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                            0
                                            if numCheckpoints[this.address] <= 0:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                        else:
                            if numCheckpoints[address(arg1)] < 1:
                                revert with 'NH{q', 17
                            if checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0 == uint32(block.number):
                                if numCheckpoints[address(arg1)] < 1:
                                    revert with 'NH{q', 17
                                checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 = Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg2)), arg1);
                                if not this.address:
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 362 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 546 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 708 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                else:
                                    if not numCheckpoints[address(this.address)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32) < checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 359 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 468 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 554 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 660 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 738 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 900 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                            else:
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_0 = uint32(block.number)
                                checkpoints[address(arg1)][stor8[address(arg1)]].field_32 = Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                if 1 > -numCheckpoints[address(arg1)] + test266151307():
                                    revert with 'NH{q', 17
                                numCheckpoints[address(arg1)] = uint32(numCheckpoints[address(arg1)] + 1)
                                emit VoterVotesChanged(checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_0, Mask(96, 0, checkpoints[address(arg1)][stor8[address(arg1)] - 1 << 224].field_32 - Mask(96, 0, arg2)), arg1);
                                if not this.address:
                                    if not numCheckpoints[this.address]:
                                        if Mask(96, 0, arg2) > 0:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if 0 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                                    else:
                                        if numCheckpoints[this.address] < 1:
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 426 len 22] >> 80,
                                                        0
                                        if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                            revert with 'NH{q', 17
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[this.address] <= 0:
                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                            if not arg1:
                                                revert with 0, 'ERC20: burn from the zero address'
                                            if arg2 > balanceOf[address(arg1)]:
                                                revert with 0, 
                                                            32,
                                                            34,
                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                            0
                                            if balanceOf[address(arg1)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] -= arg2
                                            if arg2 > totalSupply:
                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                            if totalSupply < arg2:
                                                revert with 'NH{q', 17
                                            totalSupply -= arg2
                                            emit Transfer(arg2, arg1, 0);
                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                revert with 0, 
                                                            32,
                                                            36,
                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                            0
                                        else:
                                            if numCheckpoints[this.address] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 610 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 772 len 28] >> 32,
                                                                0
                                            else:
                                                checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                if 1 > -numCheckpoints[this.address] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                if not arg1:
                                                    revert with 0, 'ERC20: burn from the zero address'
                                                if arg2 > balanceOf[address(arg1)]:
                                                    revert with 0, 
                                                                32,
                                                                34,
                                                                0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 674 len 30] >> 16,
                                                                0
                                                if balanceOf[address(arg1)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] -= arg2
                                                if arg2 > totalSupply:
                                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                                if totalSupply < arg2:
                                                    revert with 'NH{q', 17
                                                totalSupply -= arg2
                                                emit Transfer(arg2, arg1, 0);
                                                if arg2 > allowance[address(arg1)][msg.sender]:
                                                    revert with 0, 
                                                                32,
                                                                36,
                                                                0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 836 len 28] >> 32,
                                                                0
                                else:
                                    if not numCheckpoints[address(this.address)]:
                                        if 0 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, arg2) < 0:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, arg2)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, arg2)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(0, Mask(96, 0, arg2), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
                                    else:
                                        if numCheckpoints[address(this.address)] < 1:
                                            revert with 'NH{q', 17
                                        if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 > -Mask(96, 0, arg2) + test266151307():
                                            revert with 'NH{q', 17
                                        if Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32) < checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32:
                                            revert with 0, 
                                                        32,
                                                        39,
                                                        0x65444555533a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f77, mem[ceil32(return_data.size) + 423 len 25] >> 56,
                                                        0
                                        if block.number >= 4294967296:
                                            revert with 0, 
                                                        32,
                                                        52,
                                                        0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 532 len 12] >> 160,
                                                        0
                                        if numCheckpoints[address(this.address)] <= 0:
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                            checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                            if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                revert with 'NH{q', 17
                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                            emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                            if not numCheckpoints[this.address]:
                                                if Mask(96, 0, arg2) > 0:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if 0 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                            else:
                                                if numCheckpoints[this.address] < 1:
                                                    revert with 'NH{q', 17
                                                if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                0
                                                if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                    revert with 'NH{q', 17
                                                if block.number >= 4294967296:
                                                    revert with 0, 
                                                                32,
                                                                52,
                                                                0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                0
                                                if numCheckpoints[this.address] <= 0:
                                                    checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                    checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                    if 1 > -numCheckpoints[this.address] + test266151307():
                                                        revert with 'NH{q', 17
                                                    numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                    emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                    if not arg1:
                                                        revert with 0, 'ERC20: burn from the zero address'
                                                    if arg2 > balanceOf[address(arg1)]:
                                                        revert with 0, 
                                                                    32,
                                                                    34,
                                                                    0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                    0
                                                    if balanceOf[address(arg1)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] -= arg2
                                                    if arg2 > totalSupply:
                                                        revert with 0, 'SafeMath: subtraction overflow', 0
                                                    if totalSupply < arg2:
                                                        revert with 'NH{q', 17
                                                    totalSupply -= arg2
                                                    emit Transfer(arg2, arg1, 0);
                                                    if arg2 > allowance[address(arg1)][msg.sender]:
                                                        revert with 0, 
                                                                    32,
                                                                    36,
                                                                    0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                    0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                        else:
                                            if numCheckpoints[address(this.address)] < 1:
                                                revert with 'NH{q', 17
                                            if checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0 == uint32(block.number):
                                                if numCheckpoints[address(this.address)] < 1:
                                                    revert with 'NH{q', 17
                                                checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 618 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 724 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 802 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 964 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                            else:
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_0 = uint32(block.number)
                                                checkpoints[address(this.address)][stor8[address(this.address)]].field_32 = Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32)
                                                if 1 > -numCheckpoints[address(this.address)] + test266151307():
                                                    revert with 'NH{q', 17
                                                numCheckpoints[address(this.address)] = uint32(numCheckpoints[address(this.address)] + 1)
                                                emit VoterVotesChanged(checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_0, Mask(96, 0, Mask(96, 0, arg2) + checkpoints[address(this.address)][stor8[address(this.address)] - 1 << 224].field_32), this.address);
                                                if not numCheckpoints[this.address]:
                                                    if Mask(96, 0, arg2) > 0:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if 0 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, -Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(0, Mask(96, 0, -Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
                                                else:
                                                    if numCheckpoints[this.address] < 1:
                                                        revert with 'NH{q', 17
                                                    if Mask(96, 0, arg2) > checkpoints[this.address][stor8[this.address] - 1 << 224].field_32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x6f444555533a3a706f6f6c5f6275726e5f66726f6d3a206e657720766f74657320756e646572666c6f77, mem[ceil32(return_data.size) + 682 len 22] >> 80,
                                                                    0
                                                    if checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 < Mask(96, 0, arg2):
                                                        revert with 'NH{q', 17
                                                    if block.number >= 4294967296:
                                                        revert with 0, 
                                                                    32,
                                                                    52,
                                                                    0x73444555533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974, mem[ceil32(return_data.size) + 788 len 12] >> 160,
                                                                    0
                                                    if numCheckpoints[this.address] <= 0:
                                                        checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                        checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                        if 1 > -numCheckpoints[this.address] + test266151307():
                                                            revert with 'NH{q', 17
                                                        numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                        emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                        if not arg1:
                                                            revert with 0, 'ERC20: burn from the zero address'
                                                        if arg2 > balanceOf[address(arg1)]:
                                                            revert with 0, 
                                                                        32,
                                                                        34,
                                                                        0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                        0
                                                        if balanceOf[address(arg1)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] -= arg2
                                                        if arg2 > totalSupply:
                                                            revert with 0, 'SafeMath: subtraction overflow', 0
                                                        if totalSupply < arg2:
                                                            revert with 'NH{q', 17
                                                        totalSupply -= arg2
                                                        emit Transfer(arg2, arg1, 0);
                                                        if arg2 > allowance[address(arg1)][msg.sender]:
                                                            revert with 0, 
                                                                        32,
                                                                        36,
                                                                        0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                        0
                                                    else:
                                                        if numCheckpoints[this.address] < 1:
                                                            revert with 'NH{q', 17
                                                        if checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_0 == uint32(block.number):
                                                            if numCheckpoints[this.address] < 1:
                                                                revert with 'NH{q', 17
                                                            checkpoints[address(this.address)][stor8[this.address] - 1 << 224].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 866 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1028 len 28] >> 32,
                                                                            0
                                                        else:
                                                            checkpoints[address(this.address)][stor8[this.address]].field_0 = uint32(block.number)
                                                            checkpoints[address(this.address)][stor8[this.address]].field_32 = Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2))
                                                            if 1 > -numCheckpoints[this.address] + test266151307():
                                                                revert with 'NH{q', 17
                                                            numCheckpoints[address(this.address)] = uint32(numCheckpoints[this.address] + 1)
                                                            emit VoterVotesChanged(checkpoints[this.address][stor8[this.address] - 1 << 224].field_0, Mask(96, 0, checkpoints[this.address][stor8[this.address] - 1 << 224].field_32 - Mask(96, 0, arg2)), this.address);
                                                            if not arg1:
                                                                revert with 0, 'ERC20: burn from the zero address'
                                                            if arg2 > balanceOf[address(arg1)]:
                                                                revert with 0, 
                                                                            32,
                                                                            34,
                                                                            0xfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[ceil32(return_data.size) + 930 len 30] >> 16,
                                                                            0
                                                            if balanceOf[address(arg1)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] -= arg2
                                                            if arg2 > totalSupply:
                                                                revert with 0, 'SafeMath: subtraction overflow', 0
                                                            if totalSupply < arg2:
                                                                revert with 'NH{q', 17
                                                            totalSupply -= arg2
                                                            emit Transfer(arg2, arg1, 0);
                                                            if arg2 > allowance[address(arg1)][msg.sender]:
                                                                revert with 0, 
                                                                            32,
                                                                            36,
                                                                            0x7345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63, mem[ceil32(return_data.size) + 1092 len 28] >> 32,
                                                                            0
    ('le', ('param', 'arg2'), ('stor', ('map', 'msg.sender', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'allowance', 1)))))
    if allowance[address(arg1)][msg.sender] < arg2:
        revert with 'NH{q', 17
    if not arg1:
        revert with 0, 'ERC20: approve from the zero address'
    if not msg.sender:
        revert with 0, 'ERC20: approve to the zero address'
    allowance[address(arg1)][address(msg.sender)] = allowance[address(arg1)][msg.sender] - arg2
    emit Approval((allowance[address(arg1)][msg.sender] - arg2), arg1, msg.sender);
    emit DEUSBurned(arg2, arg1, this.address);
}



}
