contract main {




// =====================  Runtime code  =====================


#
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - _fallback()
#
const decimals = 18

const BURN_ADDRESS = 57005


mapping of uint256 balanceOf;
mapping of uint256 allowance;
uint256 totalSupply;
array of struct stor3;
array of struct stor4;
address owner;
address joePairAddress;
address sub_527509f3Address;
address rewardsPoolAddress;
uint256 cashoutFee;
uint8 sub_537266da;
uint256 totalClaimed;
uint8 stor12;
uint8 stor12; offset 8
uint8 stor12; offset 16
uint8 stor12; offset 24
uint256 stor12; offset 16
uint256 stor12; offset 8
uint256 sub_335e2e5e;
uint8 stor14;
uint256 sub_aac46d06;
uint256 sub_0fef3680;
uint8 stor17; offset 160
uint128 stor17; offset 160
address sub_bb31085fAddress;
uint256 stor18;
uint256 stor19;
uint256 stor21;
uint256 stor22;
uint256 stor23;
uint256 launchedAtTime;
uint256 sub_629c7074;
uint256 currentBlock;
uint16 sellTax;
uint16 sub_8124f7ac; offset 16
address stor27;
address stor27; offset 32
uint8 stor28; offset 160
address stor28;
address sub_68f2c919Address;
address stor30;
array of address stor31;
mapping of uint8 stor32;
mapping of uint8 stor33;
mapping of uint256 sub_32dbbdad;
mapping of uint256 sub_4d5496a8;
mapping of uint8 stor36;
mapping of uint256 sub_69d89b98;

function rewardsPool() {
    return rewardsPoolAddress
}

function isTradingEnabled() {
    return bool(uint8(stor12.field_0))
}

function sub_0fef3680(?) {
    return sub_0fef3680
}

function totalSupply() {
    return totalSupply
}

function sub_32dbbdad(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_32dbbdad[arg1]
}

function sub_335e2e5e(?) {
    return sub_335e2e5e
}

function sub_4d5496a8(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_4d5496a8[arg1]
}

function sub_527509f3(?) {
    return sub_527509f3Address
}

function sub_537266da(?) {
    return bool(sub_537266da)
}

function sub_629c7074(?) {
    return sub_629c7074
}

function sub_68f2c919(?) {
    return sub_68f2c919Address
}

function sub_69d89b98(?) {
    require calldata.size - 4 >= 32
    return sub_69d89b98[arg1]
}

function joePair() {
    return joePairAddress
}

function cashoutFee() {
    return cashoutFee
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function antiBot() {
    return bool(uint8(stor12.field_16))
}

function sub_8124f7ac(?) {
    return sub_8124f7ac
}

function sub_8a73fffd(?) {
    return bool(uint8(stor17.field_160))
}

function owner() {
    return owner
}

function sub_9eea7a41(?) {
    return bool(stor14)
}

function launchedAtTime() {
    return launchedAtTime
}

function sub_a5355989(?) {
    return bool(uint8(stor12.field_24))
}

function sub_aac46d06(?) {
    return sub_aac46d06
}

function automatedMarketMakerPairs(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor33[arg1])
}

function sub_bb31085f(?) {
    return sub_bb31085fAddress
}

function sellTax() {
    return sellTax
}

function totalClaimed() {
    return totalClaimed
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return allowance[address(arg1)][address(arg2)]
}

function currentBlock() {
    return currentBlock
}

function sub_fabc4035(?) {
    return bool(uint8(stor12.field_8))
}

function sub_fb3ac5a7(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor36[arg1])
}

function isBlacklisted(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor32[arg1])
}

function sub_07e727d5(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor18 = arg1
}

function sub_3eb310f7(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor21 = arg1
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_5cc15b65(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_629c7074 = arg1
}

function updateCashoutFee(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    cashoutFee = arg1
}

function sub_9c138b7b(?) {
    require calldata.size - 4 >= 32
    require arg1 == uint16(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sellTax = uint16(arg1)
}

function sub_09dcb7b0(?) {
    require calldata.size - 4 >= 32
    require arg1 == uint16(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8124f7ac = uint16(arg1)
}

function sub_2be07995(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_537266da = uint8(bool(arg1))
}

function sub_6653a340(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    rewardsPoolAddress = address(arg1)
}

function sub_67db79c4(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_bb31085fAddress = address(arg1)
}

function setAntiBot(bool arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(240, 0, stor12.field_16) = Mask(240, 0, arg1)
}

function sub_d1bbad21(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(96, 0, stor17.field_160) = Mask(96, 0, bool(arg1))
}

function sub_f4e27dc8(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(248, 0, stor12.field_8) = Mask(248, 0, bool(arg1))
}

function sub_6ca4e5e0(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 0x444444444444444444444444444444444444444444444444444444444444444:
        revert with 0, 17
    stor19 = 60 * arg1
}

function sub_2ae883fd(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    uint8(stor12.field_0) = uint8(bool(arg1))
    if not launchedAtTime:
        launchedAtTime = block.timestamp
}

function withdraw() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function setAutomatedMarketMakerPair(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if joePairAddress == arg1:
        revert with 0, 'TKN:2'
    if arg2 == bool(stor33[address(arg1)]):
        revert with 0, 'TKN:3'
    stor33[address(arg1)] = uint8(arg2)
    emit SetAutomatedMarketMakerPair(arg1, arg2);
}

function sub_c5ef3ec5(?) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if 0 >= arg1.length:
        return 0
    if 0 >= arg1.length:
        revert with 0, 50
    revert with 0, 17
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function burn(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn from the zero address'
    if balanceOf[address(arg1)] < arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn amount exceeds balance'
    balanceOf[address(arg1)] -= arg2
    if totalSupply < arg2:
        revert with 0, 17
    totalSupply -= arg2
    emit Transfer(arg2, arg1, 0);
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] > !arg2:
        revert with 0, 17
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] + arg2
    emit Approval((allowance[msg.sender][address(arg1)] + arg2), msg.sender, arg1);
    return 1
}

function withdrawTokens(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args owner, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] < arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: decreased allowance below zero'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] - arg2
    emit Approval((allowance[msg.sender][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function sub_e159b3ae(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if address(stor27.field_32) == address(arg1):
        revert with 0, 'TKN:1'
    emit 0xb172ff8d: address(arg1), address(stor27.field_32)
    staticcall address(stor27.field_32).factory() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(arg1).WAVAX() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    call address(ext_call.return_data[0]).createPair(address arg1, address arg2) with:
         gas gas_remaining wei
        args address(this.address), address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    joePairAddress = ext_call.return_data[12 len 20]
    sub_527509f3Address = address(arg1)
}

function sub_c3d4d940(?) {
    if stor36[msg.sender]:
        revert with 0, 'Node has been already migrate'
    staticcall stor30.getNodeNumberOf(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        sub_69d89b98[stor13] = block.timestamp
        if ext_call.return_data[0] > 0x1d83c94fb6d2ac34a5663d3c7a0d865ca3c4ca40e0ea7cfe9:
            revert with 0, 17
        require ext_code.size(address(stor28.field_0))
        call address(stor28.field_0).0x90219732 with:
             gas gas_remaining wei
            args msg.sender, 'STORMZ_V1', 10 * 10^18 * ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if sub_335e2e5e == -1:
            revert with 0, 17
        sub_335e2e5e++
    staticcall sub_68f2c919Address.0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not msg.sender:
        revert with 0, 'ERC20: mint to the zero address'
    if totalSupply > !ext_call.return_data[0]:
        revert with 0, 17
    totalSupply += ext_call.return_data[0]
    if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
        revert with 0, 17
    balanceOf[address(msg.sender)] += ext_call.return_data[0]
    emit Transfer(ext_call.return_data[0], 0, msg.sender);
    stor36[address(msg.sender)] = 1
}

function migrate(address[] arg1, uint256[] arg2) {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(32 * arg1.length) + 97 < 96 or ceil32(32 * arg1.length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg1.length
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    s = 128
    idx = arg1 + 36
    while idx < arg1 + (32 * arg1.length) + 36:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        s = s + 32
        idx = idx + 32
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(32 * arg2.length) + 98 < 97 or ceil32(32 * arg1.length) + ceil32(32 * arg2.length) + 98 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * arg1.length) + 97] = arg2.length
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    idx = arg2 + 36
    s = ceil32(32 * arg1.length) + 129
    while idx < arg2 + (32 * arg2.length) + 36:
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < arg1.length:
        if idx >= mem[96]:
            revert with 0, 50
        _42 = mem[(32 * idx) + 128]
        if idx >= mem[ceil32(32 * arg1.length) + 97]:
            revert with 0, 50
        _44 = mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        if not mem[(32 * idx) + 140 len 20]:
            revert with 0, 'ERC20: mint to the zero address'
        if totalSupply > !mem[(32 * idx) + ceil32(32 * arg1.length) + 129]:
            revert with 0, 17
        totalSupply += mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 0
        if balanceOf[mem[(32 * idx) + 140 len 20]] > !mem[(32 * idx) + ceil32(32 * arg1.length) + 129]:
            revert with 0, 17
        balanceOf[mem[(32 * idx) + 140 len 20]] += mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        mem[ceil32(32 * arg1.length) + ceil32(32 * arg2.length) + 98] = mem[(32 * idx) + ceil32(32 * arg1.length) + 129]
        emit Transfer(_44, 0, address(_42));
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_c37a2973(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    mem[96] = 0x1fae658200000000000000000000000000000000000000000000000000000000
    mem[100] = msg.sender
    staticcall stor30.getAllNodes(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    _4 = mem[96 len 4], Mask(224, 32, msg.sender) >> 32
    require mem[96 len 4], Mask(224, 32, msg.sender) >> 32 <= test266151307()
    require mem[96 len 4], Mask(224, 32, msg.sender) >> 32 + 127 < return_data.size + 96
    _5 = mem[mem[96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]
    if mem[mem[96 len 4], Mask(224, 32, msg.sender) >> 32 + 96] > test266151307():
        revert with 0, 65
    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]) + 97 > test266151307():
        revert with 0, 65
    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, msg.sender) >> 32 + 96]) + 97
    mem[ceil32(return_data.size) + 96] = _5
    require _4 + (32 * _5) + 32 <= return_data.size
    idx = _4 + 128
    s = ceil32(return_data.size) + 128
    while idx < _4 + (32 * _5) + 128:
        _27 = mem[idx]
        require mem[idx] <= test266151307()
        require return_data.size + -_4 + -mem[idx] - 32 >= 128
        _33 = mem[64]
        if mem[64] + 128 < mem[64] or mem[64] + 128 > test266151307():
            revert with 0, 65
        mem[64] = mem[64] + 128
        _37 = mem[_4 + _27 + 128]
        require mem[_4 + _27 + 128] <= test266151307()
        require return_data.size + 96 > _4 + _27 + mem[_4 + _27 + 128] + 159
        _38 = mem[_4 + _27 + mem[_4 + _27 + 128] + 128]
        if mem[_4 + _27 + mem[_4 + _27 + 128] + 128] > test266151307():
            revert with 0, 65
        _39 = mem[64]
        if mem[64] + ceil32(ceil32(mem[_4 + _27 + mem[_4 + _27 + 128] + 128])) + 1 < mem[64] or mem[64] + ceil32(ceil32(mem[_4 + _27 + mem[_4 + _27 + 128] + 128])) + 1 > test266151307():
            revert with 0, 65
        mem[64] = mem[64] + ceil32(ceil32(mem[_4 + _27 + mem[_4 + _27 + 128] + 128])) + 1
        mem[_39] = _38
        require _4 + _27 + _37 + _38 + 64 <= return_data.size
        t = 0
        while t < _38:
            mem[t + _39 + 32] = mem[t + _4 + _27 + _37 + 160]
            t = t + 32
            continue 
        if ceil32(_38) > _38:
            mem[_38 + _39 + 32] = 0
        mem[_33] = _39
        mem[_33 + 32] = mem[_4 + _27 + 160]
        mem[_33 + 64] = mem[_4 + _27 + 192]
        mem[_33 + 96] = mem[_4 + _27 + 224]
        mem[s] = _33
        idx = idx + 32
        s = s + 32
        continue 
    if not arg1:
        mem[mem[64]] = mem[ceil32(return_data.size) + 96]
    else:
        if 0 >= mem[ceil32(return_data.size) + 96]:
            revert with 0, 50
        mem[mem[64]] = mem[mem[ceil32(return_data.size) + 128] + 96]
    return memory
      from mem[64]
       len 32
}

function sub_7416bf4c(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < ('cd', 68).length:
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        if not address(cd[((32 * idx) + cd[68] + 36)]):
            revert with 0, 'NC:2'
        if idx >= ('cd', 68).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        mem[0] = address(cd[((32 * idx) + cd[68] + 36)])
        mem[32] = 32
        if stor32[address(cd[((32 * idx) + cd[68] + 36)])]:
            revert with 0, 'BLACKLISTED'
        if idx >= ('cd', 68).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        if address(cd[((32 * idx) + cd[68] + 36)]) == rewardsPoolAddress:
            revert with 0, 'NC:4'
        if idx >= ('cd', 68).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        if idx >= ('cd', 4).length:
            revert with 0, 50
        require cd[(cd[4] + (32 * idx) + 36)] < calldata.size + -cd[4] - 67
        require cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)] <= test266151307()
        require cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 68 <= calldata.size - cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]
        if idx >= ('cd', 36).length:
            revert with 0, 50
        _19 = mem[64]
        mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = address(cd[((32 * idx) + cd[68] + 36)])
        mem[mem[64] + 36] = 96
        mem[mem[64] + 100] = cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]
        mem[mem[64] + 132 len cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]] = call.data[cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 68 len cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]]
        mem[mem[64] + cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)] + 132] = 0
        mem[mem[64] + 68] = cd[((32 * idx) + cd[36] + 36)]
        require ext_code.size(address(stor28.field_0))
        call address(stor28.field_0).0x90219732 with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _19 + ceil32(cd[(cd[4] + cd[(cd[4] + (32 * idx) + 36)] + 36)]) + -mem[64] + 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if sub_335e2e5e == -1:
            revert with 0, 17
        sub_335e2e5e++
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_ee892778(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    staticcall sub_bb31085fAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    else:
        require return_data.size >= 32
        staticcall address(stor28.field_0).getAllNodesRewards(address arg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        else:
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                return 0
            else:
                staticcall address(stor28.field_0).getNodeNumberOf(address arg1) with:
                        gas gas_remaining wei
                       args address(arg1)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if ext_call.return_data[0] <= ext_call.return_data[0]:
                        if ext_call.return_data[0] != ext_call.return_data[0]:
                            if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                    revert with 0, 17
                                else:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                    revert with 0, 17
                                else:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        else:
                            if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                revert with 0, 17
                            else:
                                if not ext_call.return_data[0]:
                                    revert with 0, 18
                                else:
                                    return (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
}

function name() {
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor3.length):
            if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor3.length):
                if 31 < uint255(stor3.length) * 0.5:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor3.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = uint256(stor3[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor3.length.field_8)
        else:
            if bool(stor3.length) == stor3.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor3.length.field_1 % 128:
                if 31 < stor3.length.field_1 % 128:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while stor3.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = uint256(stor3[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor3.length.field_8)
        mem[ceil32(uint255(stor3.length) * 0.5) + 192 len ceil32(uint255(stor3.length) * 0.5)] = mem[128 len ceil32(uint255(stor3.length) * 0.5)]
        if ceil32(uint255(stor3.length) * 0.5) > uint255(stor3.length) * 0.5:
            mem[(uint255(stor3.length) * 0.5) + ceil32(uint255(stor3.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)], mem[(2 * ceil32(uint255(stor3.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor3.length) * 0.5)]), 
    if bool(stor3.length) == stor3.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor3.length):
            if 31 < uint255(stor3.length) * 0.5:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while (uint255(stor3.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = uint256(stor3[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor3.length.field_8)
    else:
        if bool(stor3.length) == stor3.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor3.length.field_1 % 128:
            if 31 < stor3.length.field_1 % 128:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while stor3.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = uint256(stor3[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor3.length.field_8)
    mem[ceil32(stor3.length.field_1 % 128) + 192 len ceil32(stor3.length.field_1 % 128)] = mem[128 len ceil32(stor3.length.field_1 % 128)]
    if ceil32(stor3.length.field_1 % 128) > stor3.length.field_1 % 128:
        mem[stor3.length.field_1 % 128 + ceil32(stor3.length.field_1 % 128) + 192] = 0
    return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1 % 128)], mem[(2 * ceil32(stor3.length.field_1 % 128)) + 192 len 2 * ceil32(stor3.length.field_1 % 128)]), 
}

function symbol() {
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor4.length):
            if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor4.length):
                if 31 < uint255(stor4.length) * 0.5:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor4.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = uint256(stor4[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor4.length.field_8)
        else:
            if bool(stor4.length) == stor4.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor4.length.field_1 % 128:
                if 31 < stor4.length.field_1 % 128:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while stor4.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = uint256(stor4[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor4.length.field_8)
        mem[ceil32(uint255(stor4.length) * 0.5) + 192 len ceil32(uint255(stor4.length) * 0.5)] = mem[128 len ceil32(uint255(stor4.length) * 0.5)]
        if ceil32(uint255(stor4.length) * 0.5) > uint255(stor4.length) * 0.5:
            mem[(uint255(stor4.length) * 0.5) + ceil32(uint255(stor4.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)], mem[(2 * ceil32(uint255(stor4.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor4.length) * 0.5)]), 
    if bool(stor4.length) == stor4.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor4.length):
            if 31 < uint255(stor4.length) * 0.5:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while (uint255(stor4.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = uint256(stor4[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor4.length.field_8)
    else:
        if bool(stor4.length) == stor4.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor4.length.field_1 % 128:
            if 31 < stor4.length.field_1 % 128:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while stor4.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = uint256(stor4[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor4.length.field_8)
    mem[ceil32(stor4.length.field_1 % 128) + 192 len ceil32(stor4.length.field_1 % 128)] = mem[128 len ceil32(stor4.length.field_1 % 128)]
    if ceil32(stor4.length.field_1 % 128) > stor4.length.field_1 % 128:
        mem[stor4.length.field_1 % 128 + ceil32(stor4.length.field_1 % 128) + 192] = 0
    return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1 % 128)], mem[(2 * ceil32(stor4.length.field_1 % 128)) + 192 len 2 * ceil32(stor4.length.field_1 % 128)]), 
}

function sub_9581372b(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not sub_4d5496a8[address(arg1)]:
        if block.timestamp < launchedAtTime:
            revert with 0, 17
        else:
            staticcall sub_bb31085fAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            else:
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    return 0
                else:
                    staticcall address(stor28.field_0).getNodeNumberOf(address arg1) with:
                            gas gas_remaining wei
                           args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        require return_data.size >= 32
                        if ext_call.return_data[0] <= ext_call.return_data[0]:
                            if ext_call.return_data[0] != ext_call.return_data[0]:
                                if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    if ext_call.return_data[0] * stor18 and block.timestamp - launchedAtTime / 60 > -1 / ext_call.return_data[0] * stor18:
                                        revert with 0, 17
                                    else:
                                        if not stor19:
                                            revert with 0, 18
                                        else:
                                            return (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                            else:
                                if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    if ext_call.return_data[0] * stor18 and block.timestamp - launchedAtTime / 60 > -1 / ext_call.return_data[0] * stor18:
                                        revert with 0, 17
                                    else:
                                        if not stor19:
                                            revert with 0, 18
                                        else:
                                            return (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                        else:
                            if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * stor18 and block.timestamp - launchedAtTime / 60 > -1 / ext_call.return_data[0] * stor18:
                                    revert with 0, 17
                                else:
                                    if not stor19:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
    else:
        if block.timestamp < sub_4d5496a8[address(arg1)]:
            revert with 0, 17
        else:
            staticcall sub_bb31085fAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            else:
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    return 0
                else:
                    staticcall address(stor28.field_0).getNodeNumberOf(address arg1) with:
                            gas gas_remaining wei
                           args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        require return_data.size >= 32
                        if ext_call.return_data[0] <= ext_call.return_data[0]:
                            if ext_call.return_data[0] != ext_call.return_data[0]:
                                if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    if ext_call.return_data[0] * stor18 and block.timestamp - sub_4d5496a8[address(arg1)] / 60 > -1 / ext_call.return_data[0] * stor18:
                                        revert with 0, 17
                                    else:
                                        if not stor19:
                                            revert with 0, 18
                                        else:
                                            return (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(arg1)] / 60 / stor19)
                            else:
                                if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    if ext_call.return_data[0] * stor18 and block.timestamp - sub_4d5496a8[address(arg1)] / 60 > -1 / ext_call.return_data[0] * stor18:
                                        revert with 0, 17
                                    else:
                                        if not stor19:
                                            revert with 0, 18
                                        else:
                                            return (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(arg1)] / 60 / stor19)
                        else:
                            if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            else:
                                if ext_call.return_data[0] * stor18 and block.timestamp - sub_4d5496a8[address(arg1)] / 60 > -1 / ext_call.return_data[0] * stor18:
                                    revert with 0, 17
                                else:
                                    if not stor19:
                                        revert with 0, 18
                                    else:
                                        return (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(arg1)] / 60 / stor19)
}

function sub_ddff9a29(?) {
    if not msg.sender:
        revert with 0, 'COMP:1'
    mem[0] = msg.sender
    mem[32] = 32
    if stor32[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'COMP:2'
    mem[100] = msg.sender
    staticcall address(stor28.field_0).getAllNodesRewards(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    if ext_call.return_data[0] < 10 * 10^18:
        revert with 0, 'COMP:3'
    idx = 0
    while idx < ext_call.return_data[0] / 10 * 10^18:
        mem[0] = sub_335e2e5e
        mem[32] = 37
        sub_69d89b98[stor13] = block.timestamp
        if not sub_335e2e5e:
            _40 = mem[64]
            mem[64] = mem[64] + 64
            mem[_40] = 1
            mem[_40 + 32] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = msg.sender
            mem[mem[64] + 36] = 96
            mem[mem[64] + 100] = 1
            s = 0
            while s < 1:
                mem[s + mem[64] + 132] = mem[s + _40 + 32]
                s = s + 32
                continue 
            mem[mem[64] + 133] = 0
            mem[mem[64] + 68] = 10 * 10^18
            require ext_code.size(address(stor28.field_0))
            call address(stor28.field_0).0x90219732 with:
                 gas gas_remaining wei
                args msg.sender, 96, 10 * 10^18, 1, mem[mem[64] + 132 len 1], 0
        else:
            t = 0
            s = sub_335e2e5e
            while s:
                if t == -1:
                    revert with 0, 17
                t = t + 1
                s = s / 10
                continue 
            if t > test266151307():
                revert with 0, 65
            _65 = mem[64]
            mem[mem[64]] = t
            mem[64] = mem[64] + ceil32(t) + 32
            if not t:
                u = t
                s = sub_335e2e5e
                while s:
                    if u < 1:
                        revert with 0, 17
                    if s / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                        revert with 0, 17
                    if s < 10 * s / 10:
                        revert with 0, 17
                    if 48 > -uint8(s - (10 * s / 10)) + 255:
                        revert with 0, 17
                    if u - 1 >= mem[_65]:
                        revert with 0, 50
                    mem[u + _65 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) - 256
                    u = u - 1
                    s = s / 10
                    continue 
                mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 96
                _82 = mem[_65]
                mem[mem[64] + 100] = mem[_65]
                s = 0
                while s < _82:
                    mem[s + mem[64] + 132] = mem[s + _65 + 32]
                    s = s + 32
                    continue 
                if ceil32(_82) > _82:
                    mem[_82 + mem[64] + 132] = 0
                mem[mem[64] + 68] = 10 * 10^18
                require ext_code.size(address(stor28.field_0))
                call address(stor28.field_0).0x90219732 with:
                     gas gas_remaining wei
                    args msg.sender, 96, 10 * 10^18, mem[mem[64] + 100 len ceil32(_82) + 32]
            else:
                mem[_65 + 32 len t] = call.data[calldata.size len t]
                u = t
                s = sub_335e2e5e
                while s:
                    if u < 1:
                        revert with 0, 17
                    if s / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                        revert with 0, 17
                    if s < 10 * s / 10:
                        revert with 0, 17
                    if 48 > -uint8(s - (10 * s / 10)) + 255:
                        revert with 0, 17
                    if u - 1 >= mem[_65]:
                        revert with 0, 50
                    mem[u + _65 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) - 256
                    u = u - 1
                    s = s / 10
                    continue 
                _81 = mem[64]
                mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 96
                _83 = mem[_65]
                mem[mem[64] + 100] = mem[_65]
                s = 0
                while s < _83:
                    mem[s + mem[64] + 132] = mem[s + _65 + 32]
                    s = s + 32
                    continue 
                if ceil32(_83) > _83:
                    mem[_83 + _81 + 132] = 0
                mem[_81 + 68] = 10 * 10^18
                require ext_code.size(address(stor28.field_0))
                call address(stor28.field_0).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(_83) + _81 + -mem[64] + 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if sub_335e2e5e == -1:
            revert with 0, 17
        sub_335e2e5e++
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if ext_call.return_data[0] / 10 * 10^18 > 0x1d83c94fb6d2ac34a5663d3c7a0d865ca3c4ca40e0ea7cfe9:
        revert with 0, 17
    if not this.address:
        revert with 0, 'ERC20: mint to the zero address'
    if totalSupply > !(10 * 10^18 * ext_call.return_data[0] / 10 * 10^18):
        revert with 0, 17
    totalSupply += 10 * 10^18 * ext_call.return_data[0] / 10 * 10^18
    if balanceOf[address(this.address)] > !(10 * 10^18 * ext_call.return_data[0] / 10 * 10^18):
        revert with 0, 17
    balanceOf[address(this.address)] += 10 * 10^18 * ext_call.return_data[0] / 10 * 10^18
    emit Transfer((10 * 10^18 * ext_call.return_data[0] / 10 * 10^18), 0, this.address);
    if ext_call.return_data[0] / 10 * 10^18 > 0x1d83c94fb6d2ac34a5663d3c7a0d865ca3c4ca40e0ea7cfe9:
        revert with 0, 17
    if ext_call.return_data[0] < 10 * 10^18 * ext_call.return_data[0] / 10 * 10^18:
        revert with 0, 17
    if ext_call.return_data[0] - (10 * 10^18 * ext_call.return_data[0] / 10 * 10^18):
        if not msg.sender:
            revert with 0, 'ERC20: mint to the zero address'
        if totalSupply > !(ext_call.return_data[0] - (10 * 10^18 * ext_call.return_data[0] / 10 * 10^18)):
            revert with 0, 17
        totalSupply = totalSupply + ext_call.return_data[0] - (10 * 10^18 * ext_call.return_data[0] / 10 * 10^18)
        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (10 * 10^18 * ext_call.return_data[0] / 10 * 10^18)):
            revert with 0, 17
        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (10 * 10^18 * ext_call.return_data[0] / 10 * 10^18)
        emit Transfer((ext_call.return_data[0] - (10 * 10^18 * ext_call.return_data[0] / 10 * 10^18)), 0, msg.sender);
    require ext_code.size(address(stor28.field_0))
    call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
         gas gas_remaining wei
        args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit Cashout(ext_call.return_data[0], msg.sender, 0);
}

function sub_6748b4d6(?) {
    require calldata.size - 4 >= 32
    if not msg.sender:
        revert with 0, 'NC:2'
    if stor32[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'NC:4'
    if balanceOf[address(msg.sender)] < arg1:
        revert with 0, 'NC:5'
    if not uint8(stor12.field_8):
        if not msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
        if not this.address:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
        if balanceOf[address(msg.sender)] < arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
    else:
        if uint8(stor28.field_160):
            if not msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
            if not this.address:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
            if balanceOf[address(msg.sender)] < arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
        else:
            if owner == msg.sender:
                if not msg.sender:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                if not this.address:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                if balanceOf[address(msg.sender)] < arg1:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
            else:
                if stor33[address(msg.sender)]:
                    if not msg.sender:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                    if not this.address:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                    if balanceOf[address(msg.sender)] < arg1:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                else:
                    if balanceOf[address(this.address)] < stor21:
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not this.address:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                    else:
                        uint8(stor28.field_160) = 1
                        if not this.address:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                        if not address(stor27.field_32):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                        allowance[address(this.address)][address(stor27.field_0)] = stor21
                        emit Approval(stor21, this.address, address(stor27.field_32));
                        mem[100] = stor21
                        mem[132] = 0
                        mem[164] = 160
                        mem[260] = stor31.length
                        idx = 0
                        s = 0
                        t = 292
                        while idx < stor31.length:
                            mem[t] = stor31[s]
                            idx = idx + 1
                            s = s + 1
                            t = t + 32
                            continue 
                        mem[196] = this.address
                        mem[228] = block.timestamp
                        require ext_code.size(address(stor27.field_32))
                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args stor21, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call rewardsPoolAddress with:
                           value eth.balance(this.address) wei
                             gas 2300 * is_zero(value) wei
                        uint8(stor28.field_160) = 0
                        if not msg.sender:
                            revert with 0, 'ERC20: transfer from the zero address'
                        if not this.address:
                            revert with 0, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg1:
                            revert with 0, 'ERC20: transfer amount exceeds balance'
    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('param', 'arg1'))
    balanceOf[address(msg.sender)] -= arg1
    if balanceOf[this.address] > !arg1:
        revert with 0, 17
    balanceOf[this.address] += arg1
    emit Transfer(arg1, msg.sender, this.address);
    sub_69d89b98[stor13] = block.timestamp
    if not sub_335e2e5e:
        require ext_code.size(address(stor28.field_0))
        call address(stor28.field_0).0x90219732 with:
             gas gas_remaining wei
            args msg.sender, 96, arg1, 1, 0, 0
    else:
        s = 0
        idx = sub_335e2e5e
        while idx:
            if s == -1:
                revert with 0, 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 0, 65
        mem[96] = s
        mem[64] = ceil32(s) + 128
        if s:
            mem[128 len s] = call.data[calldata.size len s]
        t = s
        idx = sub_335e2e5e
        while idx:
            if t < 1:
                revert with 0, 17
            if idx / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                revert with 0, 17
            if idx < 10 * idx / 10:
                revert with 0, 17
            if 48 > -uint8(idx - (10 * idx / 10)) + 255:
                revert with 0, 17
            if t - 1 >= mem[96]:
                revert with 0, 50
            mem[t + 127 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 0), ('mul', -10, ('div', ('var', 0), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 0), ('mul', -10, ('div', ('var', 0), 10)))))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        mem[mem[64]] = 0x9021973200000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = 96
        mem[mem[64] + 100] = mem[96]
        mem[mem[64] + 132 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
        if ceil32(mem[96]) > mem[96]:
            mem[mem[96] + mem[64] + 132] = 0
        require ext_code.size(address(stor28.field_0))
        call address(stor28.field_0).0x90219732 with:
             gas gas_remaining wei
            args msg.sender, Array(len=mem[96], data=mem[mem[64] + 132 len ceil32(mem[96])]), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    if sub_335e2e5e == -1:
        revert with 0, 17
    sub_335e2e5e++
}

function sub_838150f8(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 64
    if not msg.sender:
        revert with 0, 'NC:2'
    if stor32[address(msg.sender)]:
        revert with 0, 'BLACKLISTED'
    if rewardsPoolAddress == msg.sender:
        revert with 0, 'NC:4'
    if arg1 and arg2 > -1 / arg1:
        revert with 0, 17
    if balanceOf[address(msg.sender)] < arg1 * arg2:
        revert with 0, 'NC:5'
    if arg2 < 1:
        revert with 0, 'NC:5'
    if arg1 and arg2 > -1 / arg1:
        revert with 0, 17
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
    if not this.address:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
    if balanceOf[address(msg.sender)] < arg1 * arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
    mem[32] = 0
    balanceOf[address(msg.sender)] += -1 * arg1 * arg2
    mem[0] = this.address
    if balanceOf[this.address] > !(arg1 * arg2):
        revert with 0, 17
    balanceOf[this.address] += arg1 * arg2
    mem[96] = arg1 * arg2
    emit Transfer((arg1 * arg2), msg.sender, this.address);
    idx = 1
    while idx <= arg2:
        mem[0] = sub_335e2e5e
        mem[32] = 37
        sub_69d89b98[stor13] = block.timestamp
        if not sub_335e2e5e:
            _46 = mem[64]
            mem[64] = mem[64] + 64
            mem[_46] = 1
            mem[_46 + 32] = 0x3000000000000000000000000000000000000000000000000000000000000000
            if block.timestamp > !idx:
                revert with 0, 17
            mem[mem[64]] = 0x6447efc500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = msg.sender
            mem[mem[64] + 36] = 128
            mem[mem[64] + 132] = 1
            s = 0
            while s < 1:
                mem[s + mem[64] + 164] = mem[s + _46 + 32]
                s = s + 32
                continue 
            mem[mem[64] + 165] = 0
            mem[mem[64] + 68] = arg1
            mem[mem[64] + 100] = block.timestamp + idx
            require ext_code.size(address(stor28.field_0))
            call address(stor28.field_0).0x6447efc5 with:
                 gas gas_remaining wei
                args msg.sender, 128, arg1, block.timestamp + idx, 1, mem[mem[64] + 164 len 1], 0
        else:
            t = 0
            s = sub_335e2e5e
            while s:
                if t == -1:
                    revert with 0, 17
                t = t + 1
                s = s / 10
                continue 
            if t > test266151307():
                revert with 0, 65
            _67 = mem[64]
            mem[mem[64]] = t
            mem[64] = mem[64] + ceil32(t) + 32
            if not t:
                u = t
                s = sub_335e2e5e
                while s:
                    if u < 1:
                        revert with 0, 17
                    if s / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                        revert with 0, 17
                    if s < 10 * s / 10:
                        revert with 0, 17
                    if 48 > -uint8(s - (10 * s / 10)) + 255:
                        revert with 0, 17
                    if u - 1 >= mem[_67]:
                        revert with 0, 50
                    mem[u + _67 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) - 256
                    u = u - 1
                    s = s / 10
                    continue 
                if block.timestamp > !idx:
                    revert with 0, 17
                _84 = mem[64]
                mem[mem[64]] = 0x6447efc500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 128
                _86 = mem[_67]
                mem[mem[64] + 132] = mem[_67]
                s = 0
                while s < _86:
                    mem[s + mem[64] + 164] = mem[s + _67 + 32]
                    s = s + 32
                    continue 
                if ceil32(_86) > _86:
                    mem[_86 + _84 + 164] = 0
                mem[_84 + 68] = arg1
                mem[_84 + 100] = block.timestamp + idx
                require ext_code.size(address(stor28.field_0))
                call address(stor28.field_0).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(_86) + _84 + -mem[64] + 160]
            else:
                mem[_67 + 32 len t] = call.data[calldata.size len t]
                u = t
                s = sub_335e2e5e
                while s:
                    if u < 1:
                        revert with 0, 17
                    if s / 10 > 0x1999999999999999999999999999999999999999999999999999999999999999:
                        revert with 0, 17
                    if s < 10 * s / 10:
                        revert with 0, 17
                    if 48 > -uint8(s - (10 * s / 10)) + 255:
                        revert with 0, 17
                    if u - 1 >= mem[_67]:
                        revert with 0, 50
                    mem[u + _67 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mask_shl', 8, 0, 0, ('add', ('var', 1), ('mul', -10, ('div', ('var', 1), 10)))))), 0) - 256
                    u = u - 1
                    s = s / 10
                    continue 
                if block.timestamp > !idx:
                    revert with 0, 17
                mem[mem[64]] = 0x6447efc500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 128
                _87 = mem[_67]
                mem[mem[64] + 132] = mem[_67]
                s = 0
                while s < _87:
                    mem[s + mem[64] + 164] = mem[s + _67 + 32]
                    s = s + 32
                    continue 
                if ceil32(_87) > _87:
                    mem[_87 + mem[64] + 164] = 0
                mem[mem[64] + 68] = arg1
                mem[mem[64] + 100] = block.timestamp + idx
                require ext_code.size(address(stor28.field_0))
                call address(stor28.field_0).0x6447efc5 with:
                     gas gas_remaining wei
                    args msg.sender, 128, arg1, block.timestamp + idx, mem[mem[64] + 132 len ceil32(_87) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if sub_335e2e5e == -1:
            revert with 0, 17
        sub_335e2e5e++
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if uint8(stor12.field_8):
        if not uint8(stor28.field_160):
            if owner != msg.sender:
                if not stor33[address(msg.sender)]:
                    if stor21 and arg2 > -1 / stor21:
                        revert with 0, 17
                    if balanceOf[address(this.address)] >= stor21 * arg2:
                        uint8(stor28.field_160) = 1
                        if stor21 and arg2 > -1 / stor21:
                            revert with 0, 17
                        if not this.address:
                            revert with 0, 'ERC20: approve from the zero address'
                        if not address(stor27.field_32):
                            revert with 0, 'ERC20: approve to the zero address'
                        allowance[address(this.address)][address(stor27.field_0)] = stor21 * arg2
                        emit Approval((stor21 * arg2), this.address, address(stor27.field_32));
                        _61 = mem[64]
                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = stor21 * arg2
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = stor31.length
                        mem[0] = 31
                        idx = 0
                        s = 0
                        t = mem[64] + 196
                        while idx < stor31.length:
                            mem[t] = stor[s + sha3(mem[0])]
                            idx = idx + 1
                            s = s + 1
                            t = t + 32
                            continue 
                        mem[_61 + 100] = this.address
                        mem[_61 + 132] = block.timestamp
                        require ext_code.size(address(stor27.field_32))
                        call address(stor27.field_32).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _61 + (32 * stor31.length) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call rewardsPoolAddress with:
                           value eth.balance(this.address) wei
                             gas 2300 * is_zero(value) wei
                        uint8(stor28.field_160) = 0
}

function cashoutAll() {
    if not msg.sender:
        revert with 0, 'CASHOUT:5'
    else:
        if stor32[address(msg.sender)]:
            revert with 0, 'BLACKLISTED'
        else:
            if rewardsPoolAddress == msg.sender:
                revert with 0, 'CASHOUT:7'
            else:
                staticcall address(stor28.field_0).getAllNodesRewards(address arg1) with:
                        gas gas_remaining wei
                       args msg.sender
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if ext_call.return_data[0] <= 0:
                        revert with 0, 'CASHOUT:8'
                    else:
                        if not uint8(stor12.field_8):
                            if not msg.sender:
                                revert with 0, 'ERC20: mint to the zero address'
                            else:
                                if totalSupply > !ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    totalSupply += ext_call.return_data[0]
                                    if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                                        revert with 0, 17
                                    else:
                                        balanceOf[address(msg.sender)] += ext_call.return_data[0]
                                        emit Transfer(ext_call.return_data[0], 0, msg.sender);
                                        require ext_code.size(address(stor28.field_0))
                                        call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                             gas gas_remaining wei
                                            args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if totalClaimed > !ext_call.return_data[0]:
                                                revert with 0, 17
                                            else:
                                                totalClaimed += ext_call.return_data[0]
                                                emit Cashout(ext_call.return_data[0], msg.sender, 0);
                        else:
                            if not uint8(stor17.field_160):
                                if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                else:
                                    if not ext_call.return_data[0] * cashoutFee / 100:
                                        if not msg.sender:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        else:
                                            if totalSupply > !ext_call.return_data[0]:
                                                revert with 0, 17
                                            else:
                                                totalSupply += ext_call.return_data[0]
                                                if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                                                    revert with 0, 17
                                                else:
                                                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                                                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                                                    require ext_code.size(address(stor28.field_0))
                                                    call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                         gas gas_remaining wei
                                                        args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if totalClaimed > !ext_call.return_data[0]:
                                                            revert with 0, 17
                                                        else:
                                                            totalClaimed += ext_call.return_data[0]
                                                            emit Cashout(ext_call.return_data[0], msg.sender, 0);
                                    else:
                                        if not this.address:
                                            revert with 0, 'ERC20: approve from the zero address'
                                        else:
                                            if not address(stor27.field_32):
                                                revert with 0, 'ERC20: approve to the zero address'
                                            else:
                                                allowance[address(this.address)][address(stor27.field_0)] = ext_call.return_data[0] * cashoutFee / 100
                                                emit Approval((ext_call.return_data[0] * cashoutFee / 100), this.address, address(stor27.field_32));
                                                idx = 0
                                                s = 0
                                                t = ceil32(return_data.size) + 292
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                require ext_code.size(address(stor27.field_32))
                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0] * cashoutFee / 100, 0, 160, address(this.address), block.timestamp, stor31.length, mem[ceil32(return_data.size) + 292 len 32 * stor31.length]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    call rewardsPoolAddress with:
                                                       value eth.balance(this.address) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if ext_call.return_data[0] < ext_call.return_data[0] * cashoutFee / 100:
                                                        revert with 0, 17
                                                    else:
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: mint to the zero address'
                                                        else:
                                                            if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                revert with 0, 17
                                                            else:
                                                                totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                    revert with 0, 17
                                                                else:
                                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                    emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), 0, msg.sender);
                                                                    require ext_code.size(address(stor28.field_0))
                                                                    call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                            revert with 0, 17
                                                                        else:
                                                                            totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                            emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), msg.sender, 0);
                            else:
                                if not sub_4d5496a8[address(msg.sender)]:
                                    if block.timestamp < launchedAtTime:
                                        revert with 0, 17
                                    else:
                                        staticcall sub_bb31085fAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                    revert with 0, 17
                                                else:
                                                    if not ext_call.return_data[0] * cashoutFee / 100:
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: mint to the zero address'
                                                        else:
                                                            if totalSupply > !ext_call.return_data[0]:
                                                                revert with 0, 17
                                                            else:
                                                                totalSupply += ext_call.return_data[0]
                                                                if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                                                                    revert with 0, 17
                                                                else:
                                                                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                                                                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                                                                    require ext_code.size(address(stor28.field_0))
                                                                    call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if totalClaimed > !ext_call.return_data[0]:
                                                                            revert with 0, 17
                                                                        else:
                                                                            totalClaimed += ext_call.return_data[0]
                                                                            emit Cashout(ext_call.return_data[0], msg.sender, 0);
                                                    else:
                                                        if not this.address:
                                                            revert with 0, 'ERC20: approve from the zero address'
                                                        else:
                                                            if not address(stor27.field_32):
                                                                revert with 0, 'ERC20: approve to the zero address'
                                                            else:
                                                                allowance[address(this.address)][address(stor27.field_0)] = ext_call.return_data[0] * cashoutFee / 100
                                                                emit Approval((ext_call.return_data[0] * cashoutFee / 100), this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = (2 * ceil32(return_data.size)) + 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0] * cashoutFee / 100, 0, 160, address(this.address), block.timestamp, stor31.length, mem[(2 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if ext_call.return_data[0] < ext_call.return_data[0] * cashoutFee / 100:
                                                                        revert with 0, 17
                                                                    else:
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                        else:
                                                                            if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                revert with 0, 17
                                                                            else:
                                                                                totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                    emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), 0, msg.sender);
                                                                                    require ext_code.size(address(stor28.field_0))
                                                                                    call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                            revert with 0, 17
                                                                                        else:
                                                                                            totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                            emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), msg.sender, 0);
                                            else:
                                                staticcall address(stor28.field_0).getNodeNumberOf(address arg1) with:
                                                        gas gas_remaining wei
                                                       args msg.sender
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] <= ext_call.return_data[0]:
                                                        if ext_call.return_data[0] != ext_call.return_data[0]:
                                                            if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                                                revert with 0, 17
                                                            else:
                                                                if ext_call.return_data[0] * stor18 and block.timestamp - launchedAtTime / 60 > -1 / ext_call.return_data[0] * stor18:
                                                                    revert with 0, 17
                                                                else:
                                                                    if not stor19:
                                                                        revert with 0, 18
                                                                    else:
                                                                        if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                                revert with 0, 17
                                                                            else:
                                                                                if not ext_call.return_data[0]:
                                                                                    revert with 0, 18
                                                                                else:
                                                                                    if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                        revert with 0, 17
                                                                                    else:
                                                                                        sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                        if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                            if ext_call.return_data[0] > !(ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19):
                                                                                                revert with 0, 17
                                                                                            else:
                                                                                                if not msg.sender:
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                else:
                                                                                                    if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                            emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), 0, msg.sender);
                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                    emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), msg.sender, 0);
                                                                                        else:
                                                                                            if not this.address:
                                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                                            else:
                                                                                                if not address(stor27.field_32):
                                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                                else:
                                                                                                    allowance[address(this.address)][address(stor27.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                    emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor27.field_32));
                                                                                                    idx = 0
                                                                                                    s = 0
                                                                                                    t = (4 * ceil32(return_data.size)) + 292
                                                                                                    while idx < stor31.length:
                                                                                                        mem[t] = stor31[s]
                                                                                                        idx = idx + 1
                                                                                                        s = s + 1
                                                                                                        t = t + 32
                                                                                                        continue 
                                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor31.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        call rewardsPoolAddress with:
                                                                                                           value eth.balance(this.address) wei
                                                                                                             gas 2300 * is_zero(value) wei
                                                                                                        if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                if not msg.sender:
                                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                                else:
                                                                                                                    if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                        revert with 0, 17
                                                                                                                    else:
                                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                            revert with 0, 17
                                                                                                                        else:
                                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                            emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), 0, msg.sender);
                                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args msg.sender
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                                    revert with 0, 17
                                                                                                                                else:
                                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                                    emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), msg.sender, 0);
                                                        else:
                                                            if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                                                revert with 0, 17
                                                            else:
                                                                if ext_call.return_data[0] * stor18 and block.timestamp - launchedAtTime / 60 > -1 / ext_call.return_data[0] * stor18:
                                                                    revert with 0, 17
                                                                else:
                                                                    if not stor19:
                                                                        revert with 0, 18
                                                                    else:
                                                                        if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                                revert with 0, 17
                                                                            else:
                                                                                if not ext_call.return_data[0]:
                                                                                    revert with 0, 18
                                                                                else:
                                                                                    if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                        revert with 0, 17
                                                                                    else:
                                                                                        sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                        if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                            if ext_call.return_data[0] > !(ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19):
                                                                                                revert with 0, 17
                                                                                            else:
                                                                                                if not msg.sender:
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                else:
                                                                                                    if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                            emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), 0, msg.sender);
                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                    emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), msg.sender, 0);
                                                                                        else:
                                                                                            if not this.address:
                                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                                            else:
                                                                                                if not address(stor27.field_32):
                                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                                else:
                                                                                                    allowance[address(this.address)][address(stor27.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                    emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor27.field_32));
                                                                                                    idx = 0
                                                                                                    s = 0
                                                                                                    t = (4 * ceil32(return_data.size)) + 292
                                                                                                    while idx < stor31.length:
                                                                                                        mem[t] = stor31[s]
                                                                                                        idx = idx + 1
                                                                                                        s = s + 1
                                                                                                        t = t + 32
                                                                                                        continue 
                                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor31.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        call rewardsPoolAddress with:
                                                                                                           value eth.balance(this.address) wei
                                                                                                             gas 2300 * is_zero(value) wei
                                                                                                        if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                if not msg.sender:
                                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                                else:
                                                                                                                    if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                        revert with 0, 17
                                                                                                                    else:
                                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                            revert with 0, 17
                                                                                                                        else:
                                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                            emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), 0, msg.sender);
                                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args msg.sender
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                                    revert with 0, 17
                                                                                                                                else:
                                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                                    emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), msg.sender, 0);
                                                    else:
                                                        if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                                            revert with 0, 17
                                                        else:
                                                            if ext_call.return_data[0] * stor18 and block.timestamp - launchedAtTime / 60 > -1 / ext_call.return_data[0] * stor18:
                                                                revert with 0, 17
                                                            else:
                                                                if not stor19:
                                                                    revert with 0, 18
                                                                else:
                                                                    if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                        revert with 0, 17
                                                                    else:
                                                                        if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if not ext_call.return_data[0]:
                                                                                revert with 0, 18
                                                                            else:
                                                                                if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                    if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                        if ext_call.return_data[0] > !(ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19):
                                                                                            revert with 0, 17
                                                                                        else:
                                                                                            if not msg.sender:
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            else:
                                                                                                if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                    revert with 0, 17
                                                                                                else:
                                                                                                    totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                    if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                        emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), 0, msg.sender);
                                                                                                        require ext_code.size(address(stor28.field_0))
                                                                                                        call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), msg.sender, 0);
                                                                                    else:
                                                                                        if not this.address:
                                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                                        else:
                                                                                            if not address(stor27.field_32):
                                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                                            else:
                                                                                                allowance[address(this.address)][address(stor27.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor27.field_32));
                                                                                                idx = 0
                                                                                                s = 0
                                                                                                t = (4 * ceil32(return_data.size)) + 292
                                                                                                while idx < stor31.length:
                                                                                                    mem[t] = stor31[s]
                                                                                                    idx = idx + 1
                                                                                                    s = s + 1
                                                                                                    t = t + 32
                                                                                                    continue 
                                                                                                require ext_code.size(address(stor27.field_32))
                                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor31.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    call rewardsPoolAddress with:
                                                                                                       value eth.balance(this.address) wei
                                                                                                         gas 2300 * is_zero(value) wei
                                                                                                    if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            if not msg.sender:
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            else:
                                                                                                                if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                    if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                        revert with 0, 17
                                                                                                                    else:
                                                                                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                        emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), 0, msg.sender);
                                                                                                                        require ext_code.size(address(stor28.field_0))
                                                                                                                        call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args msg.sender
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)):
                                                                                                                                revert with 0, 17
                                                                                                                            else:
                                                                                                                                totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)
                                                                                                                                emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - launchedAtTime / 60 / stor19)), msg.sender, 0);
                                else:
                                    if block.timestamp < sub_4d5496a8[address(msg.sender)]:
                                        revert with 0, 17
                                    else:
                                        staticcall sub_bb31085fAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                    revert with 0, 17
                                                else:
                                                    if not ext_call.return_data[0] * cashoutFee / 100:
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: mint to the zero address'
                                                        else:
                                                            if totalSupply > !ext_call.return_data[0]:
                                                                revert with 0, 17
                                                            else:
                                                                totalSupply += ext_call.return_data[0]
                                                                if balanceOf[address(msg.sender)] > !ext_call.return_data[0]:
                                                                    revert with 0, 17
                                                                else:
                                                                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                                                                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                                                                    require ext_code.size(address(stor28.field_0))
                                                                    call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if totalClaimed > !ext_call.return_data[0]:
                                                                            revert with 0, 17
                                                                        else:
                                                                            totalClaimed += ext_call.return_data[0]
                                                                            emit Cashout(ext_call.return_data[0], msg.sender, 0);
                                                    else:
                                                        if not this.address:
                                                            revert with 0, 'ERC20: approve from the zero address'
                                                        else:
                                                            if not address(stor27.field_32):
                                                                revert with 0, 'ERC20: approve to the zero address'
                                                            else:
                                                                allowance[address(this.address)][address(stor27.field_0)] = ext_call.return_data[0] * cashoutFee / 100
                                                                emit Approval((ext_call.return_data[0] * cashoutFee / 100), this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = (2 * ceil32(return_data.size)) + 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args ext_call.return_data[0] * cashoutFee / 100, 0, 160, address(this.address), block.timestamp, stor31.length, mem[(2 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if ext_call.return_data[0] < ext_call.return_data[0] * cashoutFee / 100:
                                                                        revert with 0, 17
                                                                    else:
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                        else:
                                                                            if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                revert with 0, 17
                                                                            else:
                                                                                totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                    emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), 0, msg.sender);
                                                                                    require ext_code.size(address(stor28.field_0))
                                                                                    call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)):
                                                                                            revert with 0, 17
                                                                                        else:
                                                                                            totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)
                                                                                            emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100)), msg.sender, 0);
                                            else:
                                                staticcall address(stor28.field_0).getNodeNumberOf(address arg1) with:
                                                        gas gas_remaining wei
                                                       args msg.sender
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] <= ext_call.return_data[0]:
                                                        if ext_call.return_data[0] != ext_call.return_data[0]:
                                                            if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                                                revert with 0, 17
                                                            else:
                                                                if ext_call.return_data[0] * stor18 and block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 > -1 / ext_call.return_data[0] * stor18:
                                                                    revert with 0, 17
                                                                else:
                                                                    if not stor19:
                                                                        revert with 0, 18
                                                                    else:
                                                                        if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                                revert with 0, 17
                                                                            else:
                                                                                if not ext_call.return_data[0]:
                                                                                    revert with 0, 18
                                                                                else:
                                                                                    if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                        revert with 0, 17
                                                                                    else:
                                                                                        sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                        if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                            if ext_call.return_data[0] > !(ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19):
                                                                                                revert with 0, 17
                                                                                            else:
                                                                                                if not msg.sender:
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                else:
                                                                                                    if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                            emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), 0, msg.sender);
                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                    emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), msg.sender, 0);
                                                                                        else:
                                                                                            if not this.address:
                                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                                            else:
                                                                                                if not address(stor27.field_32):
                                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                                else:
                                                                                                    allowance[address(this.address)][address(stor27.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                    emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor27.field_32));
                                                                                                    idx = 0
                                                                                                    s = 0
                                                                                                    t = (4 * ceil32(return_data.size)) + 292
                                                                                                    while idx < stor31.length:
                                                                                                        mem[t] = stor31[s]
                                                                                                        idx = idx + 1
                                                                                                        s = s + 1
                                                                                                        t = t + 32
                                                                                                        continue 
                                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor31.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        call rewardsPoolAddress with:
                                                                                                           value eth.balance(this.address) wei
                                                                                                             gas 2300 * is_zero(value) wei
                                                                                                        if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                if not msg.sender:
                                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                                else:
                                                                                                                    if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                        revert with 0, 17
                                                                                                                    else:
                                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                            revert with 0, 17
                                                                                                                        else:
                                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                            emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), 0, msg.sender);
                                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args msg.sender
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                                    revert with 0, 17
                                                                                                                                else:
                                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                                    emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), msg.sender, 0);
                                                        else:
                                                            if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                                                revert with 0, 17
                                                            else:
                                                                if ext_call.return_data[0] * stor18 and block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 > -1 / ext_call.return_data[0] * stor18:
                                                                    revert with 0, 17
                                                                else:
                                                                    if not stor19:
                                                                        revert with 0, 18
                                                                    else:
                                                                        if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                                revert with 0, 17
                                                                            else:
                                                                                if not ext_call.return_data[0]:
                                                                                    revert with 0, 18
                                                                                else:
                                                                                    if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                        revert with 0, 17
                                                                                    else:
                                                                                        sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                        if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                            if ext_call.return_data[0] > !(ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19):
                                                                                                revert with 0, 17
                                                                                            else:
                                                                                                if not msg.sender:
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                else:
                                                                                                    if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                            emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), 0, msg.sender);
                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                    emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), msg.sender, 0);
                                                                                        else:
                                                                                            if not this.address:
                                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                                            else:
                                                                                                if not address(stor27.field_32):
                                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                                else:
                                                                                                    allowance[address(this.address)][address(stor27.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                    emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor27.field_32));
                                                                                                    idx = 0
                                                                                                    s = 0
                                                                                                    t = (4 * ceil32(return_data.size)) + 292
                                                                                                    while idx < stor31.length:
                                                                                                        mem[t] = stor31[s]
                                                                                                        idx = idx + 1
                                                                                                        s = s + 1
                                                                                                        t = t + 32
                                                                                                        continue 
                                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor31.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        call rewardsPoolAddress with:
                                                                                                           value eth.balance(this.address) wei
                                                                                                             gas 2300 * is_zero(value) wei
                                                                                                        if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                if not msg.sender:
                                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                                else:
                                                                                                                    if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                        revert with 0, 17
                                                                                                                    else:
                                                                                                                        totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                        if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                            revert with 0, 17
                                                                                                                        else:
                                                                                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                            emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), 0, msg.sender);
                                                                                                                            require ext_code.size(address(stor28.field_0))
                                                                                                                            call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args msg.sender
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                                    revert with 0, 17
                                                                                                                                else:
                                                                                                                                    totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                                    emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), msg.sender, 0);
                                                    else:
                                                        if ext_call.return_data[0] and stor18 > -1 / ext_call.return_data[0]:
                                                            revert with 0, 17
                                                        else:
                                                            if ext_call.return_data[0] * stor18 and block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 > -1 / ext_call.return_data[0] * stor18:
                                                                revert with 0, 17
                                                            else:
                                                                if not stor19:
                                                                    revert with 0, 18
                                                                else:
                                                                    if ext_call.return_data[0] and cashoutFee > -1 / ext_call.return_data[0]:
                                                                        revert with 0, 17
                                                                    else:
                                                                        if ext_call.return_data[0] * cashoutFee / 100 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * cashoutFee / 100:
                                                                            revert with 0, 17
                                                                        else:
                                                                            if not ext_call.return_data[0]:
                                                                                revert with 0, 18
                                                                            else:
                                                                                if ext_call.return_data[0] * cashoutFee / 100 < ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                                    revert with 0, 17
                                                                                else:
                                                                                    sub_4d5496a8[address(msg.sender)] = block.timestamp
                                                                                    if not (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                        if ext_call.return_data[0] > !(ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19):
                                                                                            revert with 0, 17
                                                                                        else:
                                                                                            if not msg.sender:
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            else:
                                                                                                if totalSupply > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                    revert with 0, 17
                                                                                                else:
                                                                                                    totalSupply = totalSupply + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                    if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                        emit Transfer((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), 0, msg.sender);
                                                                                                        require ext_code.size(address(stor28.field_0))
                                                                                                        call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if totalClaimed > !(ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                revert with 0, 17
                                                                                                            else:
                                                                                                                totalClaimed = totalClaimed + ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                emit Cashout((ext_call.return_data[0] + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), msg.sender, 0);
                                                                                    else:
                                                                                        if not this.address:
                                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                                        else:
                                                                                            if not address(stor27.field_32):
                                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                                            else:
                                                                                                allowance[address(this.address)][address(stor27.field_0)] = (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])
                                                                                                emit Approval(((ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0])), this.address, address(stor27.field_32));
                                                                                                idx = 0
                                                                                                s = 0
                                                                                                t = (4 * ceil32(return_data.size)) + 292
                                                                                                while idx < stor31.length:
                                                                                                    mem[t] = stor31[s]
                                                                                                    idx = idx + 1
                                                                                                    s = s + 1
                                                                                                    t = t + 32
                                                                                                    continue 
                                                                                                require ext_code.size(address(stor27.field_32))
                                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, stor31.length, mem[(4 * ceil32(return_data.size)) + 292 len 32 * stor31.length]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    call rewardsPoolAddress with:
                                                                                                       value eth.balance(this.address) wei
                                                                                                         gas 2300 * is_zero(value) wei
                                                                                                    if ext_call.return_data[0] < (ext_call.return_data[0] * cashoutFee / 100) - (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]):
                                                                                                        revert with 0, 17
                                                                                                    else:
                                                                                                        if ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) > !(ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19):
                                                                                                            revert with 0, 17
                                                                                                        else:
                                                                                                            if not msg.sender:
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            else:
                                                                                                                if totalSupply > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                    revert with 0, 17
                                                                                                                else:
                                                                                                                    totalSupply = totalSupply + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                    if balanceOf[address(msg.sender)] > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                        revert with 0, 17
                                                                                                                    else:
                                                                                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                        emit Transfer((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), 0, msg.sender);
                                                                                                                        require ext_code.size(address(stor28.field_0))
                                                                                                                        call address(stor28.field_0).cashoutAllNodesRewards(address arg1) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args msg.sender
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            if totalClaimed > !(ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)):
                                                                                                                                revert with 0, 17
                                                                                                                            else:
                                                                                                                                totalClaimed = totalClaimed + ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)
                                                                                                                                emit Cashout((ext_call.return_data[0] - (ext_call.return_data[0] * cashoutFee / 100) + (ext_call.return_data[0] * cashoutFee / 100 * ext_call.return_data[0] / ext_call.return_data[0]) + (ext_call.return_data[0] * stor18 * block.timestamp - sub_4d5496a8[address(msg.sender)] / 60 / stor19)), msg.sender, 0);
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if bool(uint8(stor12.field_16)) != 1:
        if stor32[address(msg.sender)]:
            revert with 0, 'BLACKLISTED'
        if stor32[address(arg1)]:
            revert with 0, 'BLACKLISTED'
        if not msg.sender:
            revert with 0, 'ERC20:1'
        if owner == msg.sender:
            if joePairAddress == msg.sender:
                if arg2 > !balanceOf[address(msg.sender)]:
                    revert with 0, 17
                if arg2 + balanceOf[address(msg.sender)] > stor23:
                    revert with 0, 'Total holding is limited'
            else:
                if joePairAddress != arg1:
                    if not uint8(stor12.field_24):
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[arg1] > !arg2:
                            revert with 0, 17
                        balanceOf[arg1] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                    else:
                        if arg2 and sub_8124f7ac > -1 / arg2:
                            revert with 0, 17
                        if arg2 < arg2 * sub_8124f7ac / 100:
                            revert with 0, 17
                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                            revert with 0, 17
                        if arg2 != arg2:
                            revert with 0, 'Invalid Tax'
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not this.address:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                            revert with 0, 17
                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                        if not msg.sender:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                        if not arg1:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                            revert with 0, 17
                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                else:
                    if not sellTax:
                        if not uint8(stor12.field_24):
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[arg1] > !arg2:
                                revert with 0, 17
                            balanceOf[arg1] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            if arg2 and sub_8124f7ac > -1 / arg2:
                                revert with 0, 17
                            if arg2 < arg2 * sub_8124f7ac / 100:
                                revert with 0, 17
                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            if arg2 != arg2:
                                revert with 0, 'Invalid Tax'
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not this.address:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                revert with 0, 17
                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                    else:
                        if not sub_537266da:
                            if not uint8(stor12.field_24):
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not stor14:
                                if arg2 and sellTax > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sellTax / 100:
                                    revert with 0, 17
                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sellTax / 100
                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                if not uint8(stor12.field_8):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                else:
                                    if uint8(stor28.field_160):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        if owner == msg.sender:
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if stor33[address(msg.sender)]:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if balanceOf[address(this.address)] < stor22:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    uint8(stor28.field_160) = 1
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                    if not address(stor27.field_32):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                    idx = 0
                                                    s = 0
                                                    t = 292
                                                    while idx < stor31.length:
                                                        mem[t] = stor31[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    require ext_code.size(address(stor27.field_32))
                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                         gas gas_remaining wei
                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call rewardsPoolAddress with:
                                                       value eth.balance(this.address) wei
                                                         gas 2300 * is_zero(value) wei
                                                    uint8(stor28.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                            else:
                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[100] = arg2
                                mem[132] = 64
                                mem[164] = stor31.length
                                mem[0] = 31
                                idx = 0
                                s = 0
                                t = 196
                                while idx < stor31.length:
                                    mem[t] = stor31[s]
                                    idx = idx + 1
                                    s = s + 1
                                    t = t + 32
                                    continue 
                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                        gas gas_remaining wei
                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _18976 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                _19060 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                mem[ceil32(return_data.size) + 96] = _19060
                                require _18976 + (32 * _19060) + 32 <= return_data.size
                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19060)] = mem[_18976 + 128 len ceil32(32 * _19060)]
                                if 1 >= _19060:
                                    revert with 0, 50
                                if 24 * 3600 > !launchedAtTime:
                                    revert with 0, 17
                                if block.timestamp > launchedAtTime + (24 * 3600):
                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                    if arg2 and sellTax > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sellTax / 100:
                                        revert with 0, 17
                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sellTax / 100
                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                    if uint8(stor12.field_8):
                                        if not uint8(stor28.field_160):
                                            if owner != msg.sender:
                                                if not stor33[address(msg.sender)]:
                                                    if balanceOf[address(this.address)] >= stor22:
                                                        uint8(stor28.field_160) = 1
                                                        if not this.address:
                                                            revert with 0, 'ERC20: approve from the zero address'
                                                        if not address(stor27.field_32):
                                                            revert with 0, 'ERC20: approve to the zero address'
                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                        _34517 = mem[64]
                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = stor22
                                                        mem[mem[64] + 36] = 0
                                                        mem[mem[64] + 68] = 160
                                                        mem[mem[64] + 164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = mem[64] + 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor[s + sha3(mem[0])]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        mem[_34517 + 100] = this.address
                                                        mem[_34517 + 132] = block.timestamp
                                                        require ext_code.size(address(stor27.field_32))
                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4 len _34517 + (32 * stor31.length) + -mem[64] + 192]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call rewardsPoolAddress with:
                                                           value eth.balance(this.address) wei
                                                             gas 2300 * is_zero(value) wei
                                                        uint8(stor28.field_160) = 0
                                else:
                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                    if arg2 and sellTax > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sellTax / 100:
                                        revert with 0, 17
                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sellTax / 100
                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                    if uint8(stor12.field_8):
                                        if not uint8(stor28.field_160):
                                            if owner != msg.sender:
                                                if not stor33[address(msg.sender)]:
                                                    if balanceOf[address(this.address)] >= stor22:
                                                        uint8(stor28.field_160) = 1
                                                        if not this.address:
                                                            revert with 0, 'ERC20: approve from the zero address'
                                                        if not address(stor27.field_32):
                                                            revert with 0, 'ERC20: approve to the zero address'
                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                        _35105 = mem[64]
                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = stor22
                                                        mem[mem[64] + 36] = 0
                                                        mem[mem[64] + 68] = 160
                                                        mem[mem[64] + 164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = mem[64] + 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor[s + sha3(mem[0])]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        mem[_35105 + 100] = this.address
                                                        mem[_35105 + 132] = block.timestamp
                                                        require ext_code.size(address(stor27.field_32))
                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4 len _35105 + (32 * stor31.length) + -mem[64] + 192]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call rewardsPoolAddress with:
                                                           value eth.balance(this.address) wei
                                                             gas 2300 * is_zero(value) wei
                                                        uint8(stor28.field_160) = 0
                                if not msg.sender:
                                    revert with 0, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                revert with 0, 17
                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
        else:
            if joePairAddress == arg1:
                if joePairAddress == msg.sender:
                    if arg2 > !balanceOf[address(msg.sender)]:
                        revert with 0, 17
                    if arg2 + balanceOf[address(msg.sender)] > stor23:
                        revert with 0, 'Total holding is limited'
                else:
                    if joePairAddress != arg1:
                        if not uint8(stor12.field_24):
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[arg1] > !arg2:
                                revert with 0, 17
                            balanceOf[arg1] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            if arg2 and sub_8124f7ac > -1 / arg2:
                                revert with 0, 17
                            if arg2 < arg2 * sub_8124f7ac / 100:
                                revert with 0, 17
                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            if arg2 != arg2:
                                revert with 0, 'Invalid Tax'
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not this.address:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                revert with 0, 17
                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                            if not msg.sender:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                            if not arg1:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                revert with 0, 17
                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                    else:
                        if not sellTax:
                            if not uint8(stor12.field_24):
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sub_537266da:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not stor14:
                                    if arg2 and sellTax > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sellTax / 100:
                                        revert with 0, 17
                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sellTax / 100
                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                    if not uint8(stor12.field_8):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        if uint8(stor28.field_160):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if owner == msg.sender:
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if stor33[address(msg.sender)]:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if balanceOf[address(this.address)] < stor22:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        uint8(stor28.field_160) = 1
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                        if not address(stor27.field_32):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                        idx = 0
                                                        s = 0
                                                        t = 292
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        require ext_code.size(address(stor27.field_32))
                                                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                             gas gas_remaining wei
                                                            args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call rewardsPoolAddress with:
                                                           value eth.balance(this.address) wei
                                                             gas 2300 * is_zero(value) wei
                                                        uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                else:
                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[100] = arg2
                                    mem[132] = 64
                                    mem[164] = stor31.length
                                    mem[0] = 31
                                    idx = 0
                                    s = 0
                                    t = 196
                                    while idx < stor31.length:
                                        mem[t] = stor31[s]
                                        idx = idx + 1
                                        s = s + 1
                                        t = t + 32
                                        continue 
                                    staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                            gas gas_remaining wei
                                           args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _18977 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                    _19061 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                        revert with 0, 65
                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                    mem[ceil32(return_data.size) + 96] = _19061
                                    require _18977 + (32 * _19061) + 32 <= return_data.size
                                    mem[ceil32(return_data.size) + 128 len ceil32(32 * _19061)] = mem[_18977 + 128 len ceil32(32 * _19061)]
                                    if 1 >= _19061:
                                        revert with 0, 50
                                    if 24 * 3600 > !launchedAtTime:
                                        revert with 0, 17
                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if uint8(stor12.field_8):
                                            if not uint8(stor28.field_160):
                                                if owner != msg.sender:
                                                    if not stor33[address(msg.sender)]:
                                                        if balanceOf[address(this.address)] >= stor22:
                                                            uint8(stor28.field_160) = 1
                                                            if not this.address:
                                                                revert with 0, 'ERC20: approve from the zero address'
                                                            if not address(stor27.field_32):
                                                                revert with 0, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                            _34531 = mem[64]
                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = stor22
                                                            mem[mem[64] + 36] = 0
                                                            mem[mem[64] + 68] = 160
                                                            mem[mem[64] + 164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = mem[64] + 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            mem[_34531 + 100] = this.address
                                                            mem[_34531 + 132] = block.timestamp
                                                            require ext_code.size(address(stor27.field_32))
                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                 gas gas_remaining wei
                                                                args mem[mem[64] + 4 len _34531 + (32 * stor31.length) + -mem[64] + 192]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            call rewardsPoolAddress with:
                                                               value eth.balance(this.address) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            uint8(stor28.field_160) = 0
                                    else:
                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if uint8(stor12.field_8):
                                            if not uint8(stor28.field_160):
                                                if owner != msg.sender:
                                                    if not stor33[address(msg.sender)]:
                                                        if balanceOf[address(this.address)] >= stor22:
                                                            uint8(stor28.field_160) = 1
                                                            if not this.address:
                                                                revert with 0, 'ERC20: approve from the zero address'
                                                            if not address(stor27.field_32):
                                                                revert with 0, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                            _35108 = mem[64]
                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = stor22
                                                            mem[mem[64] + 36] = 0
                                                            mem[mem[64] + 68] = 160
                                                            mem[mem[64] + 164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = mem[64] + 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            mem[_35108 + 100] = this.address
                                                            mem[_35108 + 132] = block.timestamp
                                                            require ext_code.size(address(stor27.field_32))
                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                 gas gas_remaining wei
                                                                args mem[mem[64] + 4 len _35108 + (32 * stor31.length) + -mem[64] + 192]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            call rewardsPoolAddress with:
                                                               value eth.balance(this.address) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            uint8(stor28.field_160) = 0
                                    if not msg.sender:
                                        revert with 0, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
            else:
                if address(stor27.field_32) == arg1:
                    if joePairAddress == msg.sender:
                        if arg2 > !balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                            revert with 0, 'Total holding is limited'
                    else:
                        if joePairAddress != arg1:
                            if not uint8(stor12.field_24):
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sellTax:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sub_537266da:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor14:
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if not uint8(stor12.field_8):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if uint8(stor28.field_160):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if owner == msg.sender:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if stor33[address(msg.sender)]:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if balanceOf[address(this.address)] < stor22:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            uint8(stor28.field_160) = 1
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                            if not address(stor27.field_32):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = 292
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor27.field_32))
                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            call rewardsPoolAddress with:
                                                               value eth.balance(this.address) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                        mem[100] = arg2
                                        mem[132] = 64
                                        mem[164] = stor31.length
                                        mem[0] = 31
                                        idx = 0
                                        s = 0
                                        t = 196
                                        while idx < stor31.length:
                                            mem[t] = stor31[s]
                                            idx = idx + 1
                                            s = s + 1
                                            t = t + 32
                                            continue 
                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                gas gas_remaining wei
                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _18978 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                        _19062 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                            revert with 0, 65
                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                        mem[ceil32(return_data.size) + 96] = _19062
                                        require _18978 + (32 * _19062) + 32 <= return_data.size
                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19062)] = mem[_18978 + 128 len ceil32(32 * _19062)]
                                        if 1 >= _19062:
                                            revert with 0, 50
                                        if 24 * 3600 > !launchedAtTime:
                                            revert with 0, 17
                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if uint8(stor12.field_8):
                                                if not uint8(stor28.field_160):
                                                    if owner != msg.sender:
                                                        if not stor33[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor22:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                _34545 = mem[64]
                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = stor22
                                                                mem[mem[64] + 36] = 0
                                                                mem[mem[64] + 68] = 160
                                                                mem[mem[64] + 164] = stor31.length
                                                                mem[0] = 31
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor31.length:
                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_34545 + 100] = this.address
                                                                mem[_34545 + 132] = block.timestamp
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[mem[64] + 4 len _34545 + (32 * stor31.length) + -mem[64] + 192]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                        else:
                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if uint8(stor12.field_8):
                                                if not uint8(stor28.field_160):
                                                    if owner != msg.sender:
                                                        if not stor33[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor22:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                _35111 = mem[64]
                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = stor22
                                                                mem[mem[64] + 36] = 0
                                                                mem[mem[64] + 68] = 160
                                                                mem[mem[64] + 164] = stor31.length
                                                                mem[0] = 31
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor31.length:
                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_35111 + 100] = this.address
                                                                mem[_35111 + 132] = block.timestamp
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[mem[64] + 4 len _35111 + (32 * stor31.length) + -mem[64] + 192]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    if this.address == arg1:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_537266da:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor14:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not uint8(stor12.field_8):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor28.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor33[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor22:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor31.length
                                            mem[0] = 31
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor31.length:
                                                mem[t] = stor31[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _18979 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19063 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19063
                                            require _18979 + (32 * _19063) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19063)] = mem[_18979 + 128 len ceil32(32 * _19063)]
                                            if 1 >= _19063:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _34559 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_34559 + 100] = this.address
                                                                    mem[_34559 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _34559 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35114 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35114 + 100] = this.address
                                                                    mem[_35114 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35114 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if this.address == msg.sender:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18980 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19064 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19064
                                                require _18980 + (32 * _19064) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19064)] = mem[_18980 + 128 len ceil32(32 * _19064)]
                                                if 1 >= _19064:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _34573 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_34573 + 100] = this.address
                                                                        mem[_34573 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _34573 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35117 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35117 + 100] = this.address
                                                                        mem[_35117 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35117 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if not uint8(stor12.field_0):
                                revert with 0, 'TRADING_DISABLED'
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18981 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19065 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19065
                                                require _18981 + (32 * _19065) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19065)] = mem[_18981 + 128 len ceil32(32 * _19065)]
                                                if 1 >= _19065:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _34587 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_34587 + 100] = this.address
                                                                        mem[_34587 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _34587 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35120 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35120 + 100] = this.address
                                                                        mem[_35120 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35120 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
    else:
        if joePairAddress != msg.sender:
            if joePairAddress != arg1:
                if stor32[address(msg.sender)]:
                    revert with 0, 'BLACKLISTED'
                if stor32[address(arg1)]:
                    revert with 0, 'BLACKLISTED'
                if not msg.sender:
                    revert with 0, 'ERC20:1'
                if owner == msg.sender:
                    if joePairAddress == msg.sender:
                        if arg2 > !balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                            revert with 0, 'Total holding is limited'
                    else:
                        if joePairAddress != arg1:
                            if not uint8(stor12.field_24):
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sellTax:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sub_537266da:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor14:
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if not uint8(stor12.field_8):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if uint8(stor28.field_160):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if owner == msg.sender:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if stor33[address(msg.sender)]:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if balanceOf[address(this.address)] < stor22:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            uint8(stor28.field_160) = 1
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                            if not address(stor27.field_32):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = 292
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor27.field_32))
                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            call rewardsPoolAddress with:
                                                               value eth.balance(this.address) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                        mem[100] = arg2
                                        mem[132] = 64
                                        mem[164] = stor31.length
                                        mem[0] = 31
                                        idx = 0
                                        s = 0
                                        t = 196
                                        while idx < stor31.length:
                                            mem[t] = stor31[s]
                                            idx = idx + 1
                                            s = s + 1
                                            t = t + 32
                                            continue 
                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                gas gas_remaining wei
                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _18982 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                        _19066 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                            revert with 0, 65
                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                        mem[ceil32(return_data.size) + 96] = _19066
                                        require _18982 + (32 * _19066) + 32 <= return_data.size
                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19066)] = mem[_18982 + 128 len ceil32(32 * _19066)]
                                        if 1 >= _19066:
                                            revert with 0, 50
                                        if 24 * 3600 > !launchedAtTime:
                                            revert with 0, 17
                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if uint8(stor12.field_8):
                                                if not uint8(stor28.field_160):
                                                    if owner != msg.sender:
                                                        if not stor33[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor22:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                _34601 = mem[64]
                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = stor22
                                                                mem[mem[64] + 36] = 0
                                                                mem[mem[64] + 68] = 160
                                                                mem[mem[64] + 164] = stor31.length
                                                                mem[0] = 31
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor31.length:
                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_34601 + 100] = this.address
                                                                mem[_34601 + 132] = block.timestamp
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[mem[64] + 4 len _34601 + (32 * stor31.length) + -mem[64] + 192]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                        else:
                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if uint8(stor12.field_8):
                                                if not uint8(stor28.field_160):
                                                    if owner != msg.sender:
                                                        if not stor33[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor22:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                _35123 = mem[64]
                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = stor22
                                                                mem[mem[64] + 36] = 0
                                                                mem[mem[64] + 68] = 160
                                                                mem[mem[64] + 164] = stor31.length
                                                                mem[0] = 31
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor31.length:
                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_35123 + 100] = this.address
                                                                mem[_35123 + 132] = block.timestamp
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[mem[64] + 4 len _35123 + (32 * stor31.length) + -mem[64] + 192]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    if joePairAddress == arg1:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_537266da:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor14:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not uint8(stor12.field_8):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor28.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor33[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor22:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor31.length
                                            mem[0] = 31
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor31.length:
                                                mem[t] = stor31[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _18983 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19067 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19067
                                            require _18983 + (32 * _19067) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19067)] = mem[_18983 + 128 len ceil32(32 * _19067)]
                                            if 1 >= _19067:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _34615 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_34615 + 100] = this.address
                                                                    mem[_34615 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _34615 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35126 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35126 + 100] = this.address
                                                                    mem[_35126 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35126 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if address(stor27.field_32) == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18984 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19068 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19068
                                                require _18984 + (32 * _19068) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19068)] = mem[_18984 + 128 len ceil32(32 * _19068)]
                                                if 1 >= _19068:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _34629 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_34629 + 100] = this.address
                                                                        mem[_34629 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _34629 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35129 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35129 + 100] = this.address
                                                                        mem[_35129 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35129 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if this.address == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor23:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_537266da:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor14:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not uint8(stor12.field_8):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor28.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor33[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor22:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor31[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor31.length
                                                    mem[0] = 31
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor31.length:
                                                        mem[t] = stor31[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _18985 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19069 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19069
                                                    require _18985 + (32 * _19069) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len ceil32(32 * _19069)] = mem[_18985 + 128 len ceil32(32 * _19069)]
                                                    if 1 >= _19069:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _34643 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_34643 + 100] = this.address
                                                                            mem[_34643 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _34643 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _35132 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_35132 + 100] = this.address
                                                                            mem[_35132 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _35132 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == msg.sender:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _18986 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19070 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19070
                                                        require _18986 + (32 * _19070) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19070)] = mem[_18986 + 128 len ceil32(32 * _19070)]
                                                        if 1 >= _19070:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _34657 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_34657 + 100] = this.address
                                                                                mem[_34657 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _34657 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35135 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35135 + 100] = this.address
                                                                                mem[_35135 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35135 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if not uint8(stor12.field_0):
                                        revert with 0, 'TRADING_DISABLED'
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _18987 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19071 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19071
                                                        require _18987 + (32 * _19071) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19071)] = mem[_18987 + 128 len ceil32(32 * _19071)]
                                                        if 1 >= _19071:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _34671 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_34671 + 100] = this.address
                                                                                mem[_34671 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _34671 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35138 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35138 + 100] = this.address
                                                                                mem[_35138 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35138 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
            else:
                if sub_32dbbdad[address(msg.sender)] > !sub_629c7074:
                    revert with 0, 17
                if block.number > sub_32dbbdad[address(msg.sender)] + sub_629c7074:
                    if stor32[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor32[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_537266da:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor14:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not uint8(stor12.field_8):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor28.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor33[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor22:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor31.length
                                            mem[0] = 31
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor31.length:
                                                mem[t] = stor31[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _18988 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19072 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19072
                                            require _18988 + (32 * _19072) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19072)] = mem[_18988 + 128 len ceil32(32 * _19072)]
                                            if 1 >= _19072:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _34685 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_34685 + 100] = this.address
                                                                    mem[_34685 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _34685 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35141 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35141 + 100] = this.address
                                                                    mem[_35141 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35141 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18989 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19073 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19073
                                                require _18989 + (32 * _19073) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19073)] = mem[_18989 + 128 len ceil32(32 * _19073)]
                                                if 1 >= _19073:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _34699 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_34699 + 100] = this.address
                                                                        mem[_34699 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _34699 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35144 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35144 + 100] = this.address
                                                                        mem[_35144 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35144 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor27.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor23:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_537266da:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor14:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not uint8(stor12.field_8):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor28.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor33[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor22:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor31[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor31.length
                                                    mem[0] = 31
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor31.length:
                                                        mem[t] = stor31[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _18990 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19074 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19074
                                                    require _18990 + (32 * _19074) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len ceil32(32 * _19074)] = mem[_18990 + 128 len ceil32(32 * _19074)]
                                                    if 1 >= _19074:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _34713 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_34713 + 100] = this.address
                                                                            mem[_34713 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _34713 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _35147 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_35147 + 100] = this.address
                                                                            mem[_35147 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _35147 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _18991 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19075 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19075
                                                        require _18991 + (32 * _19075) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19075)] = mem[_18991 + 128 len ceil32(32 * _19075)]
                                                        if 1 >= _19075:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _34727 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_34727 + 100] = this.address
                                                                                mem[_34727 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _34727 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35150 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35150 + 100] = this.address
                                                                                mem[_35150 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35150 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _18992 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19076 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19076
                                                            require _18992 + (32 * _19076) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19076)] = mem[_18992 + 128 len ceil32(32 * _19076)]
                                                            if 1 >= _19076:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _34741 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_34741 + 100] = this.address
                                                                                    mem[_34741 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _34741 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35153 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35153 + 100] = this.address
                                                                                    mem[_35153 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35153 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not uint8(stor12.field_0):
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _18993 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19077 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19077
                                                            require _18993 + (32 * _19077) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19077)] = mem[_18993 + 128 len ceil32(32 * _19077)]
                                                            if 1 >= _19077:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _34755 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_34755 + 100] = this.address
                                                                                    mem[_34755 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _34755 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35156 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35156 + 100] = this.address
                                                                                    mem[_35156 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35156 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    stor32[address(msg.sender)] = 1
                    if stor32[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor32[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_537266da:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor14:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not uint8(stor12.field_8):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor28.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor33[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor22:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor31.length
                                            mem[0] = 31
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor31.length:
                                                mem[t] = stor31[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _18994 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19078 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19078
                                            require _18994 + (32 * _19078) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19078)] = mem[_18994 + 128 len ceil32(32 * _19078)]
                                            if 1 >= _19078:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _34769 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_34769 + 100] = this.address
                                                                    mem[_34769 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _34769 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35159 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35159 + 100] = this.address
                                                                    mem[_35159 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35159 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _18995 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19079 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19079
                                                require _18995 + (32 * _19079) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19079)] = mem[_18995 + 128 len ceil32(32 * _19079)]
                                                if 1 >= _19079:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _34783 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_34783 + 100] = this.address
                                                                        mem[_34783 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _34783 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35162 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35162 + 100] = this.address
                                                                        mem[_35162 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35162 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor27.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor23:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_537266da:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor14:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not uint8(stor12.field_8):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor28.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor33[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor22:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor31[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor31.length
                                                    mem[0] = 31
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor31.length:
                                                        mem[t] = stor31[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _18996 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19080 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19080
                                                    require _18996 + (32 * _19080) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len ceil32(32 * _19080)] = mem[_18996 + 128 len ceil32(32 * _19080)]
                                                    if 1 >= _19080:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _34797 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_34797 + 100] = this.address
                                                                            mem[_34797 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _34797 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _35165 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_35165 + 100] = this.address
                                                                            mem[_35165 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _35165 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _18997 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19081 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19081
                                                        require _18997 + (32 * _19081) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19081)] = mem[_18997 + 128 len ceil32(32 * _19081)]
                                                        if 1 >= _19081:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _34811 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_34811 + 100] = this.address
                                                                                mem[_34811 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _34811 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35168 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35168 + 100] = this.address
                                                                                mem[_35168 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35168 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _18998 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19082 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19082
                                                            require _18998 + (32 * _19082) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19082)] = mem[_18998 + 128 len ceil32(32 * _19082)]
                                                            if 1 >= _19082:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _34825 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_34825 + 100] = this.address
                                                                                    mem[_34825 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _34825 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35171 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35171 + 100] = this.address
                                                                                    mem[_35171 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35171 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not uint8(stor12.field_0):
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _18999 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19083 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19083
                                                            require _18999 + (32 * _19083) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19083)] = mem[_18999 + 128 len ceil32(32 * _19083)]
                                                            if 1 >= _19083:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _34839 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_34839 + 100] = this.address
                                                                                    mem[_34839 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _34839 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35174 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35174 + 100] = this.address
                                                                                    mem[_35174 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35174 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
        else:
            sub_32dbbdad[address(msg.sender)] = block.number
            if joePairAddress != arg1:
                if stor32[address(msg.sender)]:
                    revert with 0, 'BLACKLISTED'
                if stor32[address(arg1)]:
                    revert with 0, 'BLACKLISTED'
                if not msg.sender:
                    revert with 0, 'ERC20:1'
                if owner == msg.sender:
                    if joePairAddress == msg.sender:
                        if arg2 > !balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                            revert with 0, 'Total holding is limited'
                    else:
                        if joePairAddress != arg1:
                            if not uint8(stor12.field_24):
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[arg1] > !arg2:
                                    revert with 0, 17
                                balanceOf[arg1] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                if arg2 and sub_8124f7ac > -1 / arg2:
                                    revert with 0, 17
                                if arg2 < arg2 * sub_8124f7ac / 100:
                                    revert with 0, 17
                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                if arg2 != arg2:
                                    revert with 0, 'Invalid Tax'
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not this.address:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                    revert with 0, 17
                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                if not msg.sender:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                if not arg1:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                    revert with 0, 17
                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                        else:
                            if not sellTax:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sub_537266da:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not stor14:
                                        if arg2 and sellTax > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sellTax / 100:
                                            revert with 0, 17
                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sellTax / 100
                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                        if not uint8(stor12.field_8):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            if uint8(stor28.field_160):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if owner == msg.sender:
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if stor33[address(msg.sender)]:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if balanceOf[address(this.address)] < stor22:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            uint8(stor28.field_160) = 1
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                            if not address(stor27.field_32):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                            idx = 0
                                                            s = 0
                                                            t = 292
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            require ext_code.size(address(stor27.field_32))
                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                 gas gas_remaining wei
                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            call rewardsPoolAddress with:
                                                               value eth.balance(this.address) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                    else:
                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                        mem[100] = arg2
                                        mem[132] = 64
                                        mem[164] = stor31.length
                                        mem[0] = 31
                                        idx = 0
                                        s = 0
                                        t = 196
                                        while idx < stor31.length:
                                            mem[t] = stor31[s]
                                            idx = idx + 1
                                            s = s + 1
                                            t = t + 32
                                            continue 
                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                gas gas_remaining wei
                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _19000 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                        _19084 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                            revert with 0, 65
                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                            revert with 0, 65
                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                        mem[ceil32(return_data.size) + 96] = _19084
                                        require _19000 + (32 * _19084) + 32 <= return_data.size
                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19084)] = mem[_19000 + 128 len ceil32(32 * _19084)]
                                        if 1 >= _19084:
                                            revert with 0, 50
                                        if 24 * 3600 > !launchedAtTime:
                                            revert with 0, 17
                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if uint8(stor12.field_8):
                                                if not uint8(stor28.field_160):
                                                    if owner != msg.sender:
                                                        if not stor33[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor22:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                _34853 = mem[64]
                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = stor22
                                                                mem[mem[64] + 36] = 0
                                                                mem[mem[64] + 68] = 160
                                                                mem[mem[64] + 164] = stor31.length
                                                                mem[0] = 31
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor31.length:
                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_34853 + 100] = this.address
                                                                mem[_34853 + 132] = block.timestamp
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[mem[64] + 4 len _34853 + (32 * stor31.length) + -mem[64] + 192]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                        else:
                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if uint8(stor12.field_8):
                                                if not uint8(stor28.field_160):
                                                    if owner != msg.sender:
                                                        if not stor33[address(msg.sender)]:
                                                            if balanceOf[address(this.address)] >= stor22:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                _35177 = mem[64]
                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = stor22
                                                                mem[mem[64] + 36] = 0
                                                                mem[mem[64] + 68] = 160
                                                                mem[mem[64] + 164] = stor31.length
                                                                mem[0] = 31
                                                                idx = 0
                                                                s = 0
                                                                t = mem[64] + 196
                                                                while idx < stor31.length:
                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_35177 + 100] = this.address
                                                                mem[_35177 + 132] = block.timestamp
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[mem[64] + 4 len _35177 + (32 * stor31.length) + -mem[64] + 192]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                        if not msg.sender:
                                            revert with 0, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    if joePairAddress == arg1:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_537266da:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor14:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not uint8(stor12.field_8):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor28.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor33[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor22:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor31.length
                                            mem[0] = 31
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor31.length:
                                                mem[t] = stor31[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19001 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19085 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19085
                                            require _19001 + (32 * _19085) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19085)] = mem[_19001 + 128 len ceil32(32 * _19085)]
                                            if 1 >= _19085:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _34867 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_34867 + 100] = this.address
                                                                    mem[_34867 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _34867 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35180 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35180 + 100] = this.address
                                                                    mem[_35180 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35180 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if address(stor27.field_32) == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19002 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19086 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19086
                                                require _19002 + (32 * _19086) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19086)] = mem[_19002 + 128 len ceil32(32 * _19086)]
                                                if 1 >= _19086:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _34881 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_34881 + 100] = this.address
                                                                        mem[_34881 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _34881 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35183 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35183 + 100] = this.address
                                                                        mem[_35183 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35183 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if this.address == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor23:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_537266da:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor14:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not uint8(stor12.field_8):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor28.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor33[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor22:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor31[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor31.length
                                                    mem[0] = 31
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor31.length:
                                                        mem[t] = stor31[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19003 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19087 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19087
                                                    require _19003 + (32 * _19087) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len ceil32(32 * _19087)] = mem[_19003 + 128 len ceil32(32 * _19087)]
                                                    if 1 >= _19087:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _34895 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_34895 + 100] = this.address
                                                                            mem[_34895 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _34895 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _35186 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_35186 + 100] = this.address
                                                                            mem[_35186 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _35186 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == msg.sender:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19004 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19088 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19088
                                                        require _19004 + (32 * _19088) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19088)] = mem[_19004 + 128 len ceil32(32 * _19088)]
                                                        if 1 >= _19088:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _34909 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_34909 + 100] = this.address
                                                                                mem[_34909 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _34909 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35189 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35189 + 100] = this.address
                                                                                mem[_35189 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35189 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if not uint8(stor12.field_0):
                                        revert with 0, 'TRADING_DISABLED'
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19005 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19089 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19089
                                                        require _19005 + (32 * _19089) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19089)] = mem[_19005 + 128 len ceil32(32 * _19089)]
                                                        if 1 >= _19089:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _34923 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_34923 + 100] = this.address
                                                                                mem[_34923 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _34923 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35192 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35192 + 100] = this.address
                                                                                mem[_35192 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35192 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
            else:
                if sub_32dbbdad[address(msg.sender)] > !sub_629c7074:
                    revert with 0, 17
                if block.number > sub_32dbbdad[address(msg.sender)] + sub_629c7074:
                    if stor32[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor32[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_537266da:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor14:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not uint8(stor12.field_8):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor28.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor33[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor22:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor31.length
                                            mem[0] = 31
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor31.length:
                                                mem[t] = stor31[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19006 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19090 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19090
                                            require _19006 + (32 * _19090) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19090)] = mem[_19006 + 128 len ceil32(32 * _19090)]
                                            if 1 >= _19090:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _34937 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_34937 + 100] = this.address
                                                                    mem[_34937 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _34937 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35195 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35195 + 100] = this.address
                                                                    mem[_35195 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35195 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19007 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19091 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19091
                                                require _19007 + (32 * _19091) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19091)] = mem[_19007 + 128 len ceil32(32 * _19091)]
                                                if 1 >= _19091:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _34951 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_34951 + 100] = this.address
                                                                        mem[_34951 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _34951 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35198 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35198 + 100] = this.address
                                                                        mem[_35198 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35198 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor27.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor23:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_537266da:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor14:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not uint8(stor12.field_8):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor28.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor33[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor22:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor31[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor31.length
                                                    mem[0] = 31
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor31.length:
                                                        mem[t] = stor31[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19008 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19092 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19092
                                                    require _19008 + (32 * _19092) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len ceil32(32 * _19092)] = mem[_19008 + 128 len ceil32(32 * _19092)]
                                                    if 1 >= _19092:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _34965 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_34965 + 100] = this.address
                                                                            mem[_34965 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _34965 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _35201 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_35201 + 100] = this.address
                                                                            mem[_35201 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _35201 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19009 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19093 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19093
                                                        require _19009 + (32 * _19093) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19093)] = mem[_19009 + 128 len ceil32(32 * _19093)]
                                                        if 1 >= _19093:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _34979 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_34979 + 100] = this.address
                                                                                mem[_34979 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _34979 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35204 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35204 + 100] = this.address
                                                                                mem[_35204 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35204 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19010 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19094 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19094
                                                            require _19010 + (32 * _19094) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19094)] = mem[_19010 + 128 len ceil32(32 * _19094)]
                                                            if 1 >= _19094:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _34993 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_34993 + 100] = this.address
                                                                                    mem[_34993 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _34993 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35207 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35207 + 100] = this.address
                                                                                    mem[_35207 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35207 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not uint8(stor12.field_0):
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19011 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19095 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19095
                                                            require _19011 + (32 * _19095) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19095)] = mem[_19011 + 128 len ceil32(32 * _19095)]
                                                            if 1 >= _19095:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35007 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35007 + 100] = this.address
                                                                                    mem[_35007 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35007 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35210 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35210 + 100] = this.address
                                                                                    mem[_35210 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35210 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                else:
                    stor32[address(msg.sender)] = 1
                    if stor32[address(msg.sender)]:
                        revert with 0, 'BLACKLISTED'
                    if stor32[address(arg1)]:
                        revert with 0, 'BLACKLISTED'
                    if not msg.sender:
                        revert with 0, 'ERC20:1'
                    if owner == msg.sender:
                        if joePairAddress == msg.sender:
                            if arg2 > !balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                revert with 0, 'Total holding is limited'
                        else:
                            if joePairAddress != arg1:
                                if not uint8(stor12.field_24):
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[arg1] > !arg2:
                                        revert with 0, 17
                                    balanceOf[arg1] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                        revert with 0, 17
                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                        revert with 0, 17
                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    if arg2 != arg2:
                                        revert with 0, 'Invalid Tax'
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not this.address:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                        revert with 0, 17
                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                    if not msg.sender:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                    if not arg1:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                        revert with 0, 17
                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                            else:
                                if not sellTax:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sub_537266da:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not stor14:
                                            if arg2 and sellTax > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sellTax / 100:
                                                revert with 0, 17
                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sellTax / 100
                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                            if not uint8(stor12.field_8):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                if uint8(stor28.field_160):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if owner == msg.sender:
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if stor33[address(msg.sender)]:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if balanceOf[address(this.address)] < stor22:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                uint8(stor28.field_160) = 1
                                                                if not this.address:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                if not address(stor27.field_32):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                idx = 0
                                                                s = 0
                                                                t = 292
                                                                while idx < stor31.length:
                                                                    mem[t] = stor31[s]
                                                                    idx = idx + 1
                                                                    s = s + 1
                                                                    t = t + 32
                                                                    continue 
                                                                require ext_code.size(address(stor27.field_32))
                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                     gas gas_remaining wei
                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                call rewardsPoolAddress with:
                                                                   value eth.balance(this.address) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                uint8(stor28.field_160) = 0
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                        else:
                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                            mem[100] = arg2
                                            mem[132] = 64
                                            mem[164] = stor31.length
                                            mem[0] = 31
                                            idx = 0
                                            s = 0
                                            t = 196
                                            while idx < stor31.length:
                                                mem[t] = stor31[s]
                                                idx = idx + 1
                                                s = s + 1
                                                t = t + 32
                                                continue 
                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                    gas gas_remaining wei
                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = ceil32(return_data.size) + 96
                                            require return_data.size >= 32
                                            _19012 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                            _19096 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                revert with 0, 65
                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                revert with 0, 65
                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                            mem[ceil32(return_data.size) + 96] = _19096
                                            require _19012 + (32 * _19096) + 32 <= return_data.size
                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19096)] = mem[_19012 + 128 len ceil32(32 * _19096)]
                                            if 1 >= _19096:
                                                revert with 0, 50
                                            if 24 * 3600 > !launchedAtTime:
                                                revert with 0, 17
                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35021 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35021 + 100] = this.address
                                                                    mem[_35021 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35021 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            else:
                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if uint8(stor12.field_8):
                                                    if not uint8(stor28.field_160):
                                                        if owner != msg.sender:
                                                            if not stor33[address(msg.sender)]:
                                                                if balanceOf[address(this.address)] >= stor22:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    _35213 = mem[64]
                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = stor22
                                                                    mem[mem[64] + 36] = 0
                                                                    mem[mem[64] + 68] = 160
                                                                    mem[mem[64] + 164] = stor31.length
                                                                    mem[0] = 31
                                                                    idx = 0
                                                                    s = 0
                                                                    t = mem[64] + 196
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_35213 + 100] = this.address
                                                                    mem[_35213 + 132] = block.timestamp
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[mem[64] + 4 len _35213 + (32 * stor31.length) + -mem[64] + 192]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                            if not msg.sender:
                                                revert with 0, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                    else:
                        if joePairAddress == arg1:
                            if joePairAddress == msg.sender:
                                if arg2 > !balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                if arg2 + balanceOf[address(msg.sender)] > stor23:
                                    revert with 0, 'Total holding is limited'
                            else:
                                if joePairAddress != arg1:
                                    if not uint8(stor12.field_24):
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[arg1] > !arg2:
                                            revert with 0, 17
                                        balanceOf[arg1] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                            revert with 0, 17
                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                            revert with 0, 17
                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        if arg2 != arg2:
                                            revert with 0, 'Invalid Tax'
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not this.address:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                            revert with 0, 17
                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                        if not msg.sender:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                        if not arg1:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                            revert with 0, 17
                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                else:
                                    if not sellTax:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sub_537266da:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not stor14:
                                                if arg2 and sellTax > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sellTax / 100:
                                                    revert with 0, 17
                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                if not uint8(stor12.field_8):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    if uint8(stor28.field_160):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if owner == msg.sender:
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if stor33[address(msg.sender)]:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if balanceOf[address(this.address)] < stor22:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    uint8(stor28.field_160) = 1
                                                                    if not this.address:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                    if not address(stor27.field_32):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                    idx = 0
                                                                    s = 0
                                                                    t = 292
                                                                    while idx < stor31.length:
                                                                        mem[t] = stor31[s]
                                                                        idx = idx + 1
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        continue 
                                                                    require ext_code.size(address(stor27.field_32))
                                                                    call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    call rewardsPoolAddress with:
                                                                       value eth.balance(this.address) wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    uint8(stor28.field_160) = 0
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                            else:
                                                mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                mem[100] = arg2
                                                mem[132] = 64
                                                mem[164] = stor31.length
                                                mem[0] = 31
                                                idx = 0
                                                s = 0
                                                t = 196
                                                while idx < stor31.length:
                                                    mem[t] = stor31[s]
                                                    idx = idx + 1
                                                    s = s + 1
                                                    t = t + 32
                                                    continue 
                                                staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                        gas gas_remaining wei
                                                       args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = ceil32(return_data.size) + 96
                                                require return_data.size >= 32
                                                _19013 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                _19097 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                    revert with 0, 65
                                                if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                    revert with 0, 65
                                                mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                mem[ceil32(return_data.size) + 96] = _19097
                                                require _19013 + (32 * _19097) + 32 <= return_data.size
                                                mem[ceil32(return_data.size) + 128 len ceil32(32 * _19097)] = mem[_19013 + 128 len ceil32(32 * _19097)]
                                                if 1 >= _19097:
                                                    revert with 0, 50
                                                if 24 * 3600 > !launchedAtTime:
                                                    revert with 0, 17
                                                if block.timestamp > launchedAtTime + (24 * 3600):
                                                    require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35035 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35035 + 100] = this.address
                                                                        mem[_35035 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35035 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                else:
                                                    require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if uint8(stor12.field_8):
                                                        if not uint8(stor28.field_160):
                                                            if owner != msg.sender:
                                                                if not stor33[address(msg.sender)]:
                                                                    if balanceOf[address(this.address)] >= stor22:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        _35216 = mem[64]
                                                                        mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = stor22
                                                                        mem[mem[64] + 36] = 0
                                                                        mem[mem[64] + 68] = 160
                                                                        mem[mem[64] + 164] = stor31.length
                                                                        mem[0] = 31
                                                                        idx = 0
                                                                        s = 0
                                                                        t = mem[64] + 196
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor[s + sha3(mem[0])]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_35216 + 100] = this.address
                                                                        mem[_35216 + 132] = block.timestamp
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[mem[64] + 4 len _35216 + (32 * stor31.length) + -mem[64] + 192]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                            ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                            emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                        else:
                            if address(stor27.field_32) == arg1:
                                if joePairAddress == msg.sender:
                                    if arg2 > !balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    if arg2 + balanceOf[address(msg.sender)] > stor23:
                                        revert with 0, 'Total holding is limited'
                                else:
                                    if joePairAddress != arg1:
                                        if not uint8(stor12.field_24):
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[arg1] > !arg2:
                                                revert with 0, 17
                                            balanceOf[arg1] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                revert with 0, 17
                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                revert with 0, 17
                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            if arg2 != arg2:
                                                revert with 0, 'Invalid Tax'
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not this.address:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                revert with 0, 17
                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                            if not msg.sender:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                            if not arg1:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                revert with 0, 17
                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                    else:
                                        if not sellTax:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sub_537266da:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not stor14:
                                                    if arg2 and sellTax > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sellTax / 100:
                                                        revert with 0, 17
                                                    if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                    if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sellTax / 100
                                                    emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                    if not uint8(stor12.field_8):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        if uint8(stor28.field_160):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if owner == msg.sender:
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if stor33[address(msg.sender)]:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if balanceOf[address(this.address)] < stor22:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        uint8(stor28.field_160) = 1
                                                                        if not this.address:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                        if not address(stor27.field_32):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                        allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                        emit Approval(stor22, this.address, address(stor27.field_32));
                                                                        idx = 0
                                                                        s = 0
                                                                        t = 292
                                                                        while idx < stor31.length:
                                                                            mem[t] = stor31[s]
                                                                            idx = idx + 1
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            continue 
                                                                        require ext_code.size(address(stor27.field_32))
                                                                        call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                             gas gas_remaining wei
                                                                            args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        call rewardsPoolAddress with:
                                                                           value eth.balance(this.address) wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        uint8(stor28.field_160) = 0
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                else:
                                                    mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                    mem[100] = arg2
                                                    mem[132] = 64
                                                    mem[164] = stor31.length
                                                    mem[0] = 31
                                                    idx = 0
                                                    s = 0
                                                    t = 196
                                                    while idx < stor31.length:
                                                        mem[t] = stor31[s]
                                                        idx = idx + 1
                                                        s = s + 1
                                                        t = t + 32
                                                        continue 
                                                    staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                            gas gas_remaining wei
                                                           args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    mem[64] = ceil32(return_data.size) + 96
                                                    require return_data.size >= 32
                                                    _19014 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                    require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                    require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                    _19098 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                    if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                        revert with 0, 65
                                                    if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                        revert with 0, 65
                                                    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                    mem[ceil32(return_data.size) + 96] = _19098
                                                    require _19014 + (32 * _19098) + 32 <= return_data.size
                                                    mem[ceil32(return_data.size) + 128 len ceil32(32 * _19098)] = mem[_19014 + 128 len ceil32(32 * _19098)]
                                                    if 1 >= _19098:
                                                        revert with 0, 50
                                                    if 24 * 3600 > !launchedAtTime:
                                                        revert with 0, 17
                                                    if block.timestamp > launchedAtTime + (24 * 3600):
                                                        require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _35049 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_35049 + 100] = this.address
                                                                            mem[_35049 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _35049 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    else:
                                                        require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if uint8(stor12.field_8):
                                                            if not uint8(stor28.field_160):
                                                                if owner != msg.sender:
                                                                    if not stor33[address(msg.sender)]:
                                                                        if balanceOf[address(this.address)] >= stor22:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            _35219 = mem[64]
                                                                            mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                            mem[mem[64] + 4] = stor22
                                                                            mem[mem[64] + 36] = 0
                                                                            mem[mem[64] + 68] = 160
                                                                            mem[mem[64] + 164] = stor31.length
                                                                            mem[0] = 31
                                                                            idx = 0
                                                                            s = 0
                                                                            t = mem[64] + 196
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor[s + sha3(mem[0])]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            mem[_35219 + 100] = this.address
                                                                            mem[_35219 + 132] = block.timestamp
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[mem[64] + 4 len _35219 + (32 * stor31.length) + -mem[64] + 192]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                        revert with 0, 'ERC20: transfer amount exceeds balance'
                                                ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                            else:
                                if this.address == arg1:
                                    if joePairAddress == msg.sender:
                                        if arg2 > !balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        if arg2 + balanceOf[address(msg.sender)] > stor23:
                                            revert with 0, 'Total holding is limited'
                                    else:
                                        if joePairAddress != arg1:
                                            if not uint8(stor12.field_24):
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[arg1] > !arg2:
                                                    revert with 0, 17
                                                balanceOf[arg1] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if arg2 and sub_8124f7ac > -1 / arg2:
                                                    revert with 0, 17
                                                if arg2 < arg2 * sub_8124f7ac / 100:
                                                    revert with 0, 17
                                                if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                if arg2 != arg2:
                                                    revert with 0, 'Invalid Tax'
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not this.address:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                    revert with 0, 17
                                                balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                if not msg.sender:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                if not arg1:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                    revert with 0, 17
                                                balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                        else:
                                            if not sellTax:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sub_537266da:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not stor14:
                                                        if arg2 and sellTax > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sellTax / 100:
                                                            revert with 0, 17
                                                        if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                        if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sellTax / 100
                                                        emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                        if not uint8(stor12.field_8):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            if uint8(stor28.field_160):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if owner == msg.sender:
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if stor33[address(msg.sender)]:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if balanceOf[address(this.address)] < stor22:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            uint8(stor28.field_160) = 1
                                                                            if not this.address:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                            if not address(stor27.field_32):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                            allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                            emit Approval(stor22, this.address, address(stor27.field_32));
                                                                            idx = 0
                                                                            s = 0
                                                                            t = 292
                                                                            while idx < stor31.length:
                                                                                mem[t] = stor31[s]
                                                                                idx = idx + 1
                                                                                s = s + 1
                                                                                t = t + 32
                                                                                continue 
                                                                            require ext_code.size(address(stor27.field_32))
                                                                            call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            call rewardsPoolAddress with:
                                                                               value eth.balance(this.address) wei
                                                                                 gas 2300 * is_zero(value) wei
                                                                            uint8(stor28.field_160) = 0
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    else:
                                                        mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                        mem[100] = arg2
                                                        mem[132] = 64
                                                        mem[164] = stor31.length
                                                        mem[0] = 31
                                                        idx = 0
                                                        s = 0
                                                        t = 196
                                                        while idx < stor31.length:
                                                            mem[t] = stor31[s]
                                                            idx = idx + 1
                                                            s = s + 1
                                                            t = t + 32
                                                            continue 
                                                        staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                gas gas_remaining wei
                                                               args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        mem[64] = ceil32(return_data.size) + 96
                                                        require return_data.size >= 32
                                                        _19015 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                        require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                        require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                        _19099 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                        if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                            revert with 0, 65
                                                        if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                            revert with 0, 65
                                                        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                        mem[ceil32(return_data.size) + 96] = _19099
                                                        require _19015 + (32 * _19099) + 32 <= return_data.size
                                                        mem[ceil32(return_data.size) + 128 len ceil32(32 * _19099)] = mem[_19015 + 128 len ceil32(32 * _19099)]
                                                        if 1 >= _19099:
                                                            revert with 0, 50
                                                        if 24 * 3600 > !launchedAtTime:
                                                            revert with 0, 17
                                                        if block.timestamp > launchedAtTime + (24 * 3600):
                                                            require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35063 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35063 + 100] = this.address
                                                                                mem[_35063 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35063 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        else:
                                                            require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if uint8(stor12.field_8):
                                                                if not uint8(stor28.field_160):
                                                                    if owner != msg.sender:
                                                                        if not stor33[address(msg.sender)]:
                                                                            if balanceOf[address(this.address)] >= stor22:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                _35222 = mem[64]
                                                                                mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                mem[mem[64] + 4] = stor22
                                                                                mem[mem[64] + 36] = 0
                                                                                mem[mem[64] + 68] = 160
                                                                                mem[mem[64] + 164] = stor31.length
                                                                                mem[0] = 31
                                                                                idx = 0
                                                                                s = 0
                                                                                t = mem[64] + 196
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor[s + sha3(mem[0])]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                mem[_35222 + 100] = this.address
                                                                                mem[_35222 + 132] = block.timestamp
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[mem[64] + 4 len _35222 + (32 * stor31.length) + -mem[64] + 192]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                            revert with 0, 'ERC20: transfer amount exceeds balance'
                                                    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                    emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                else:
                                    if this.address == msg.sender:
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19016 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19100 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19100
                                                            require _19016 + (32 * _19100) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19100)] = mem[_19016 + 128 len ceil32(32 * _19100)]
                                                            if 1 >= _19100:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35077 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35077 + 100] = this.address
                                                                                    mem[_35077 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35077 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35225 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35225 + 100] = this.address
                                                                                    mem[_35225 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35225 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
                                    else:
                                        if not uint8(stor12.field_0):
                                            revert with 0, 'TRADING_DISABLED'
                                        if joePairAddress == msg.sender:
                                            if arg2 > !balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            if arg2 + balanceOf[address(msg.sender)] > stor23:
                                                revert with 0, 'Total holding is limited'
                                        else:
                                            if joePairAddress != arg1:
                                                if not uint8(stor12.field_24):
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[arg1] > !arg2:
                                                        revert with 0, 17
                                                    balanceOf[arg1] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if arg2 and sub_8124f7ac > -1 / arg2:
                                                        revert with 0, 17
                                                    if arg2 < arg2 * sub_8124f7ac / 100:
                                                        revert with 0, 17
                                                    if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    if arg2 != arg2:
                                                        revert with 0, 'Invalid Tax'
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not this.address:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                    if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                        revert with 0, 17
                                                    balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                    emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                    if not msg.sender:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                    if not arg1:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                    balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                    if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                        revert with 0, 17
                                                    balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                    emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                            else:
                                                if not sellTax:
                                                    if not uint8(stor12.field_24):
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[arg1] > !arg2:
                                                            revert with 0, 17
                                                        balanceOf[arg1] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if arg2 and sub_8124f7ac > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 < arg2 * sub_8124f7ac / 100:
                                                            revert with 0, 17
                                                        if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        if arg2 != arg2:
                                                            revert with 0, 'Invalid Tax'
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not this.address:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                        if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                            revert with 0, 17
                                                        balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                        emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                        if not msg.sender:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                        if not arg1:
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                        emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                else:
                                                    if not sub_537266da:
                                                        if not uint8(stor12.field_24):
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[arg1] > !arg2:
                                                                revert with 0, 17
                                                            balanceOf[arg1] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and sub_8124f7ac > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sub_8124f7ac / 100:
                                                                revert with 0, 17
                                                            if arg2 * sub_8124f7ac / 100 > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sub_8124f7ac / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sub_8124f7ac / 100
                                                            if balanceOf[this.address] > !(arg2 * sub_8124f7ac / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sub_8124f7ac / 100
                                                            emit Transfer((arg2 * sub_8124f7ac / 100), msg.sender, this.address);
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sub_8124f7ac / 100):
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sub_8124f7ac / 100)
                                                            if balanceOf[arg1] > !(arg2 - (arg2 * sub_8124f7ac / 100)):
                                                                revert with 0, 17
                                                            balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sub_8124f7ac / 100)
                                                            emit Transfer((arg2 - (arg2 * sub_8124f7ac / 100)), msg.sender, arg1);
                                                    else:
                                                        if not stor14:
                                                            if arg2 and sellTax > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 < arg2 * sellTax / 100:
                                                                revert with 0, 17
                                                            if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                revert with 0, 17
                                                            if arg2 != arg2:
                                                                revert with 0, 'Invalid Tax'
                                                            if not msg.sender:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                            if not this.address:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                            if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                revert with 0, 17
                                                            balanceOf[this.address] += arg2 * sellTax / 100
                                                            emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                            if not uint8(stor12.field_8):
                                                                if not msg.sender:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                if not arg1:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                            else:
                                                                if uint8(stor28.field_160):
                                                                    if not msg.sender:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                    if not arg1:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                    if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                else:
                                                                    if owner == msg.sender:
                                                                        if not msg.sender:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                        if not arg1:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                        if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                    else:
                                                                        if stor33[address(msg.sender)]:
                                                                            if not msg.sender:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                            if not arg1:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                        else:
                                                                            if balanceOf[address(this.address)] < stor22:
                                                                                if not msg.sender:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
                                                                            else:
                                                                                uint8(stor28.field_160) = 1
                                                                                if not this.address:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
                                                                                if not address(stor27.field_32):
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
                                                                                allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                idx = 0
                                                                                s = 0
                                                                                t = 292
                                                                                while idx < stor31.length:
                                                                                    mem[t] = stor31[s]
                                                                                    idx = idx + 1
                                                                                    s = s + 1
                                                                                    t = t + 32
                                                                                    continue 
                                                                                require ext_code.size(address(stor27.field_32))
                                                                                call address(stor27.field_32).swapExactTokensForAVAXSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                     gas gas_remaining wei
                                                                                    args stor22, 0, 160, address(this.address), block.timestamp, stor31.length, mem[292 len 32 * stor31.length]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                call rewardsPoolAddress with:
                                                                                   value eth.balance(this.address) wei
                                                                                     gas 2300 * is_zero(value) wei
                                                                                uint8(stor28.field_160) = 0
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                                if not arg1:
                                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                                if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        else:
                                                            mem[96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[100] = arg2
                                                            mem[132] = 64
                                                            mem[164] = stor31.length
                                                            mem[0] = 31
                                                            idx = 0
                                                            s = 0
                                                            t = 196
                                                            while idx < stor31.length:
                                                                mem[t] = stor31[s]
                                                                idx = idx + 1
                                                                s = s + 1
                                                                t = t + 32
                                                                continue 
                                                            staticcall address(stor27.field_32).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2, Array(len=stor31.length, data=mem[196 len 32 * stor31.length])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = ceil32(return_data.size) + 96
                                                            require return_data.size >= 32
                                                            _19017 = mem[96 len 4], Mask(224, 32, arg2) >> 32
                                                            require mem[96 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                            require return_data.size + 96 > mem[96 len 4], Mask(224, 32, arg2) >> 32 + 127
                                                            _19101 = mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]
                                                            if mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[96 len 4], Mask(224, 32, arg2) >> 32 + 96]) + 97
                                                            mem[ceil32(return_data.size) + 96] = _19101
                                                            require _19017 + (32 * _19101) + 32 <= return_data.size
                                                            mem[ceil32(return_data.size) + 128 len ceil32(32 * _19101)] = mem[_19017 + 128 len ceil32(32 * _19101)]
                                                            if 1 >= _19101:
                                                                revert with 0, 50
                                                            if 24 * 3600 > !launchedAtTime:
                                                                revert with 0, 17
                                                            if block.timestamp > launchedAtTime + (24 * 3600):
                                                                require mem[ceil32(return_data.size) + 160] <= sub_0fef3680
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35091 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35091 + 100] = this.address
                                                                                    mem[_35091 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35091 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            else:
                                                                require mem[ceil32(return_data.size) + 160] <= sub_aac46d06
                                                                if arg2 and sellTax > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 < arg2 * sellTax / 100:
                                                                    revert with 0, 17
                                                                if arg2 * sellTax / 100 > !(arg2 - (arg2 * sellTax / 100)):
                                                                    revert with 0, 17
                                                                if arg2 != arg2:
                                                                    revert with 0, 'Invalid Tax'
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: transfer from the zero address'
                                                                if not this.address:
                                                                    revert with 0, 'ERC20: transfer to the zero address'
                                                                if balanceOf[address(msg.sender)] < arg2 * sellTax / 100:
                                                                    revert with 0, 'ERC20: transfer amount exceeds balance'
                                                                balanceOf[address(msg.sender)] -= arg2 * sellTax / 100
                                                                if balanceOf[this.address] > !(arg2 * sellTax / 100):
                                                                    revert with 0, 17
                                                                balanceOf[this.address] += arg2 * sellTax / 100
                                                                emit Transfer((arg2 * sellTax / 100), msg.sender, this.address);
                                                                if uint8(stor12.field_8):
                                                                    if not uint8(stor28.field_160):
                                                                        if owner != msg.sender:
                                                                            if not stor33[address(msg.sender)]:
                                                                                if balanceOf[address(this.address)] >= stor22:
                                                                                    uint8(stor28.field_160) = 1
                                                                                    if not this.address:
                                                                                        revert with 0, 'ERC20: approve from the zero address'
                                                                                    if not address(stor27.field_32):
                                                                                        revert with 0, 'ERC20: approve to the zero address'
                                                                                    allowance[address(this.address)][address(stor27.field_0)] = stor22
                                                                                    emit Approval(stor22, this.address, address(stor27.field_32));
                                                                                    _35228 = mem[64]
                                                                                    mem[mem[64]] = 0x762b156200000000000000000000000000000000000000000000000000000000
                                                                                    mem[mem[64] + 4] = stor22
                                                                                    mem[mem[64] + 36] = 0
                                                                                    mem[mem[64] + 68] = 160
                                                                                    mem[mem[64] + 164] = stor31.length
                                                                                    mem[0] = 31
                                                                                    idx = 0
                                                                                    s = 0
                                                                                    t = mem[64] + 196
                                                                                    while idx < stor31.length:
                                                                                        mem[t] = stor[s + sha3(mem[0])]
                                                                                        idx = idx + 1
                                                                                        s = s + 1
                                                                                        t = t + 32
                                                                                        continue 
                                                                                    mem[_35228 + 100] = this.address
                                                                                    mem[_35228 + 132] = block.timestamp
                                                                                    require ext_code.size(address(stor27.field_32))
                                                                                    call address(stor27.field_32).mem[mem[64] len 4] with:
                                                                                         gas gas_remaining wei
                                                                                        args mem[mem[64] + 4 len _35228 + (32 * stor31.length) + -mem[64] + 192]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    call rewardsPoolAddress with:
                                                                                       value eth.balance(this.address) wei
                                                                                         gas 2300 * is_zero(value) wei
                                                                                    uint8(stor28.field_160) = 0
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: transfer from the zero address'
                                                            if not arg1:
                                                                revert with 0, 'ERC20: transfer to the zero address'
                                                            if balanceOf[address(msg.sender)] < arg2 - (arg2 * sellTax / 100):
                                                                revert with 0, 'ERC20: transfer amount exceeds balance'
                                                        ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 0))), ('add', ('param', 'arg2'), ('mul', -1, ('div', ('mul', ('param', 'arg2'), ('stor', ('name', 'sellTax', 27))), 100))))
                                                        balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] - arg2 + (arg2 * sellTax / 100)
                                                        if balanceOf[arg1] > !(arg2 - (arg2 * sellTax / 100)):
                                                            revert with 0, 17
                                                        balanceOf[arg1] = balanceOf[arg1] + arg2 - (arg2 * sellTax / 100)
                                                        emit Transfer((arg2 - (arg2 * sellTax / 100)), msg.sender, arg1);
    return 1
}



}
